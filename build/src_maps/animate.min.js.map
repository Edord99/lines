{"version":3,"sources":["background.js","canvas.js","data.js","draw.js","files.js","render.js","LnsAnim.js","layer.js","ui-layer.js","ui-tween.js","capture.js","drawings.js","palette.js","play.js","setup.js","states.js","timeline.js","lines.js"],"names":["Background","self","this","show","img","Image","x","y","width","height","size","loadImage","url","src","onload","toggle","display","lns","canvas","ctx","drawImage","Canvas","id","_width","_height","color","checkRetina","document","getElementById","dpr","window","devicePixelRatio","scale","getContext","miterLimit","lineWidth","setBGColor","bgColor","style","backgroundColor","setLineWidth","n","setScale","setWidth","setHeight","reset","zoom","fitCanvasToDrawing","draw","tolerance","min","max","i","anim","layers","length","layer","drawing","drawings","d","j","point","Math","r","ui","faces","update","Data","copyFrame","pasteFrames","saveStates","current","undefined","prev","saveState","_","cloneDeep","undo","console","log","clear","copy","isInFrame","currentFrame","push","paste","addIndex","clearSelected","selectFrame","elem","classList","contains","splice","indexOf","textContent","remove","add","selectAll","someSelected","Array","from","frames","children","filter","looper","selectRange","start","prompt","end","copyFrameElems","getElementsByClassName","clearLines","clearLayers","removeIndex","cutTopLayer","cutBottomLayer","clearFrame","deleteFrame","_index","index","shiftIndex","deleteFrameRange","startFrame","endFrame","cutEnd","setFrame","cutLastSegment","cutLayerSegment","pop","cutLastLine","cutLayerLine","popOff","insert","dir","len","addLayer","frame","addMultipleCopies","play","next","offsetDrawing","offset","_layers","togs","some","toggled","Cool","Vector","explode","type","state","addTween","prop","sf","f","s","ef","e","sv","ev","mid","floor","Draw","defaults","Object","defineProperty","get","set","Layer","setProperties","props","setProperty","value","updateProperty","setDefaults","w","v","c","data","hasDrawing","brush","brushSpread","startDots","dots","grass","mouseTimer","performance","now","mouseInterval","isDrawing","outSideCanvas","toElement","addLine","round","offsetX","offsetY","addBrush","b","_y","origin","randomInt","dist","divide","points","which","render","isPlaying","altKey","abs","h","ratio","startX","endX","startY","endY","_x","PointerEvent","addEventListener","lastTouch","toucher","callback","preventDefault","touches","rect","target","getBoundingClientRect","targetTouches","pageX","left","scrollX","pageY","top","scrollY","Files","params","saveFilesEnabled","saveSettingsOnUnload","save","fileName","saveFile","single","checkEnd","title","fit","confirm","json","fps","bg","colors","map","Set","mc","clean","l","drawingIndexes","drawingIndex","includes","keys","states","default","jsonfile","JSON","stringify","blob","Blob","saveAs","loadFile","slice","fetch","then","response","loadJSON","catch","error","alert","message","loadData","reOpenFile","location","href","openFile","createElement","click","onchange","readFile","files","updateFIO","match","reader","FileReader","name","split","parse","result","readAsText","File","FileList","stopPropagation","dataTransfer","settings","saveSettings","reload","returnValue","Render","lps","interval","timer","onionSkinNum","onionSkinIsVisible","setOnionSkin","timeline","setLps","time","clearRect","capture","isVideo","fillStyle","fillRect","bgImage","temp","o","overrideProperty","cancelOverride","isCapturing","requestAnimFrame","LnsAnim","LinesAnimation","[object Object]","t","ws","resetTweens","pc","tween","UILayer","UICollection","super","addClass","UIToggle","text","edit","UIButton","modal","UIModal","position","newLayer","UIElement","class","UILabel","UIBlur","UISelect","options","selected","UIDragButton","num","right","append","html","el","UITween","Capture","ready","videoLoops","one","multiple","onDraw","cycle","toBlob","frm","padNumber","onwriteend","setTimeout","cap","toDataURL","replace","startVideo","onPlayedState","video","stream","captureStream","rec","MediaRecorder","URL","createObjectURL","a","body","appendChild","download","stop","Drawings","getLayer","inFrame","panel","on","off","isOn","Palette","palettes","addUI","load","setup","key","palette","buildFromAnimation","Play","stateName","plus","setupAnimateInterface","toggleRL","parentElement","cursorToggle","baseFontSize","updateScale","forEach","addColor","States","part","focus","row","addRow","stateSelector","addOption","removeRow","removeOption","create","Timeline","frameWidth","init","deltaY","setProp","oncontextmenu","clientWidth","frameDisplay","reduce","numFrames","frameBtn","css","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","tweenUI","toggleLayerView","removeClass","select","handler","allToggled","appSave","canvasColor","rl","timelineView","canvasScale","interfaceScale","appLoad","Interface","Settings","search"],"mappings":"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","file":"../animate.min.js","sourcesContent":["function Background() {\n\tconst self = this;\n\n\tthis.show = true;\n\tthis.img = new Image();\n\tthis.x = 0;\n\tthis.y = 0;\n\tthis.width = 0;\n\tthis.height = 0;\n\tthis.size = 1;\n\n\tthis.loadImage = function(url) {\n\t\tself.img.src = url;\n\t\tself.img.onload = function() {\n\t\t\tself.width = self.img.width;\n\t\t\tself.height = self.img.height;\n\t\t}\n\t};\n\n\t/* b key */\n\tthis.toggle = function() {\n\t\tself.show = !self.show;\n\t};\n\n\tthis.display = function() {\n\t\tif (this.img.src && this.show)\n\t\t\tlns.canvas.ctx.drawImage(this.img, this.x, this.y, this.size * this.width, this.height * this.size);\n\t};\n}","function Canvas(id, _width, _height, color, checkRetina) {\n\tconst self = this;\n\n\t/* width and height are pixel dimensions\n\t\tcanvas width and height are dependent on dpr */\n\tthis.canvas = document.getElementById(id); // lns.canvas.canvas is html elem\n\tthis.dpr = checkRetina ? window.devicePixelRatio || 1 : 1;\n\tthis.scale = 1;\n\n\tthis.ctx = this.canvas.getContext('2d');\n\tthis.ctx.miterLimit = 1;\n\tthis.lineWidth = 1; // to keep value from getting reset\n\n\tthis.setBGColor = function(color) {\n\t\tself.bgColor = color;\n\t\tself.canvas.style.backgroundColor = color;\n\t};\n\n\tthis.setBGColor(color);\n\n\tthis.setLineWidth = function(n) {\n\t\tself.ctx.lineWidth = self.lineWidth = +n;\n\t\tself.ctx.miterLimit = 1;\n\t};\n\n\tthis.setScale = function(n) {\n\t\tself.scale = +n;\n\t\tself.setWidth(self.width);\n\t\tself.setHeight(self.height);\n\t};\n\n\t/* update canvas width */\n\tthis.setWidth = function(width) {\n\t\tself.width = +width;\n\t\tself.canvas.width = +width * self.dpr * self.scale;\n\t\tself.reset();\n\t};\n\n\t/* update canvas height */\n\tthis.setHeight = function(height) {\n\t\tself.height = +height;\n\t\tself.canvas.height = +height * self.dpr * self.scale;\n\t\tself.reset();\n\t};\n\n\tthis.reset = function() {\n\t\t// https://www.html5rocks.com/en/tutorials/canvas/hidpi/\n\t\tself.ctx.scale(1, 1); // prevent multiple scales\n\t\tself.ctx.scale(this.dpr * self.scale, self.dpr * self.scale);\n\t\tself.canvas.style.zoom = 1 / self.dpr;\n\t\tself.ctx.lineWidth = self.lineWidth;\n\t\tself.ctx.miterLimit = 1;\n\t};\n\t\n\t/* set initial width and height */\n\tthis.setWidth(_width);\n\tthis.setHeight(_height);\n\n\t/* shift-f key */\n\tthis.fitCanvasToDrawing = function() {\n\t\tlns.draw.reset();\n\t\t\n\t\tlet tolerance = 0;\n\t\tlet min = { x: 10000, y: 10000 }; // min max size of canvas\n\t\tlet max = { x: 0, y: 0 };\n\n\t\tfor (let i = 0; i < lns.anim.layers.length; i++) {\n\t\t\tconst layer = lns.anim.layers[i];\n\t\t\tconst drawing = lns.anim.drawings[layer.d];\n\t\t\tfor (let j = 0; j < drawing.length; j++) {\n\t\t\t\tconst point = drawing[j];\n\t\t\t\tif (point != 'end') {\n\t\t\t\t\ttolerance = Math.max(tolerance, layer.r * 4); /* account for random jiggle */\n\t\t\t\t\tmin.x = Math.min(min.x, point.x + layer.x);\n\t\t\t\t\tmin.y = Math.min(min.y, point.y + layer.y);\n\t\t\t\t\tmax.x = Math.max(max.x, point.x + layer.x);\n\t\t\t\t\tmax.y = Math.max(max.y, point.y + layer.y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// example of this syntax being counter intuitive/annoying\n\t\tlns.ui.faces.width.update((max.x - min.x) + tolerance * 2);\n\t\tlns.ui.faces.height.update((max.y - min.y) + tolerance * 2);\n\n\t\tfor (let i = 0; i < lns.anim.layers.length - 1; i++) {\n\t\t\tlns.anim.layers[i].x -= min.x - tolerance > 0 ? min.x - tolerance : 0;\n\t\t\tlns.anim.layers[i].y -= min.y - tolerance > 0 ? min.y - tolerance : 0;\n\t\t}\n\t};\n}","function Data(anim) {\n\tconst self = this;\n\n\tthis.copyFrame = []; // copy layers in frame\n\tthis.pasteFrames = []; // frame indexes to paste\n\n\tthis.saveStates = {\n\t\tcurrent: {\n\t\t\tdrawings: undefined,\n\t\t\tlayers: undefined\n\t\t},\n\t\tprev: {\n\t\t\tdrawings: undefined,\n\t\t\tlayers: undefined\n\t\t}\n\t};\n\n\t/* save current state of frames and drawing - one undo */\n\tthis.saveState = function() {\n\t\t/*\n\t\t\tif save state already exists, save current to previous state\n\t\t\tif not save previous to new\n\t\t\talways save current to new\n\t\t*/\n\t\tif (self.saveStates.current.drawings) {\n\t\t\tself.saveStates.prev.drawings = _.cloneDeep(self.saveStates.current.drawings);\n\t\t\tself.saveStates.prev.layers = _.cloneDeep(self.saveStates.current.layers);\n\t\t} else {\n\t\t\tself.saveStates.prev.drawings = _.cloneDeep(anim.drawings);\n\t\t\tself.saveStates.prev.layers = _.cloneDeep(anim.layers);\n\t\t}\n\n\t\tself.saveStates.current.drawings = _.cloneDeep(anim.drawings);\n\t\tself.saveStates.current.layers = _.cloneDeep(anim.layers);\n\t};\n\n\t/* ctrl z - undo one save state */\n\tthis.undo = function() {\n\n\t\tif (self.saveStates.prev.drawings) {\n\t\t\tanim.drawings = _.cloneDeep(self.saveStates.prev.drawings);\n\t\t\tanim.layers = _.cloneDeep(self.saveStates.prev.layers);\n\t\t\t\n\t\t\tself.saveStates.current.drawings = _.cloneDeep(self.saveStates.prev.drawings);\n\t\t\tself.saveStates.current.layers = _.cloneDeep(self.saveStates.prev.layers);\n\n\t\t\tself.saveStates.prev.drawings = undefined;\n\t\t\tself.saveStates.prev.layers = undefined;\n\t\t} else {\n\t\t\tconsole.log(\"%c Can't undo \", \"color:lightblue;background:gray;\");\n\t\t}\n\n\t\t/* these functions just call one function, should just call directly .. but this is still being worked on*/\n\t\tlns.ui.drawings.clear();\n\t\tlns.ui.update();\n\t};\n\n\tthis.copy = function() {\n\t\tlns.draw.reset();\n\t\tself.copyFrame = [];\n\n\t\t// -1 dont copy draw frame \n\t\tfor (let i = 0; i < anim.layers.length - 1; i++) {\n\t\t\tif (anim.layers[i].isInFrame(anim.currentFrame))\n\t\t\t\tself.copyFrame.push(anim.layers[i]);\n\t\t}\n\t}; /* c key */\n\n\tthis.paste = function() {\n\t\tself.saveState();\n\n\t\tif (self.pasteFrames.length == 0)\n\t\t\tself.pasteFrames.push(anim.currentFrame); \n\n\t\t/* copy one frame onto multiple */\n\t\tfor (let i = 0; i < self.pasteFrames.length; i++) {\n\t\t\tfor (let j = 0; j < self.copyFrame.length; j++) {\n\t\t\t\tself.copyFrame[j].addIndex(self.pasteFrames[i]);\n\t\t\t}\n\t\t}\n\n\t\tself.clearSelected();\n\t\tlns.draw.reset();\n\t\tlns.ui.update();\n\t}; /* v key */\n\n\tthis.selectFrame = function(elem) {\n\t\tif (!elem.classList.contains(\"selected\")) {\n\t\t\telem.classList.add(\"selected\");\n\t\t\tself.pasteFrames.push(+elem.textContent);\n\t\t} else {\n\t\t\tself.pasteFrames.splice(self.pasteFrames.indexOf(+elem.textContent), 1);\n\t\t\telem.classList.remove(\"selected\");\n\t\t}\n\t};\n\n\tthis.selectAll = function() {\n\t\t/* if less than all are selected deselect those first */\n\t\tconst someSelected = Array.from(lns.ui.frames.children).filter(elem => elem.classList.contains('selected')).length < lns.ui.frames.children.length - 1;\n\t\tlns.ui.frames.looper(elem => {\n\t\t\tif (someSelected) elem.classList.remove('selected');\n\t\t\tself.selectFrame(elem);\n\t\t});\n\t}; /* shift v */\n\n\tthis.selectRange = function() {\n\t\tconst start = prompt(\"Start frame:\");\n\t\tconst end = prompt(\"end frame:\");\n\t\tlns.ui.frames.looper(elem => {\n\t\t\tself.selectFrame(elem);\n\t\t}, start, end);\n\t}; /* alt v */\n\n\tthis.clearSelected = function() {\n\t\tself.pasteFrames = [];\n\n\t\t/* this is a ui thing ... */\n\t\tconst copyFrameElems = document.getElementsByClassName(\"selected\");\n\t\tfor (let i = copyFrameElems.length - 1; i >= 0; i--) {\n\t\t\tcopyFrameElems[i].classList.remove(\"selected\");\n\t\t}\n\t}; /* ctrl v */\n\n\tthis.clearLines = function() {\n\t\tlns.draw.drawing = [];\n\t}; /* x key */\n\n\tthis.clearLayers = function() {\n\t\tself.saveState(); /* will save lines ... */\n\t\tfor (let i = anim.layers.length - 2; i >= 0; i--) {\n\t\t\tif (anim.layers[i].isInFrame(anim.currentFrame)) {\n\t\t\t\tconst layer = anim.layers[i].removeIndex(anim.currentFrame);\n\t\t\t\tif (!layer) lns.ui.layers.remove(i);\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.cutTopLayer = function() {\n\t\tfor (let i = anim.layers.length - 2; i >= 0; i--) {\n\t\t\tif (anim.layers[i].isInFrame(anim.currentFrame)) {\n\t\t\t\tconst layer = anim.layers[i].removeIndex(anim.currentFrame);\n\t\t\t\tif (!layer) lns.ui.layers.remove(i);\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}; /* ctrl - x */\n\n\tthis.cutBottomLayer = function() {\n\t\tfor (let i = 0; i < anim.layers.length; i++) {\n\t\t\tif (anim.layers[i].isInFrame(anim.currentFrame)) {\n\t\t\t\tconst layer = anim.layers[i].removeIndex(anim.currentFrame);\n\t\t\t\tif (!layer) lns.ui.layers.remove(i);\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}; /* alt - x */\n\n\tthis.clearFrame = function() {\n\t\tself.clearLines();\n\t\tself.clearLayers();\n\t};\t/* shift - x */\n\n\tthis.deleteFrame = function(_index) {\n\t\tconst index = _index !== undefined ? _index : lns.anim.currentFrame;\n\t\tself.saveState();\n\n\t\t// -2 to skip draw layer\n\t\tfor (let i = anim.layers.length - 2; i >= 0; i--) {\n\t\t\tlayer = anim.layers[i].shiftIndex(index, -1);\n\t\t\tif (!layer) lns.ui.layers.remove(i);\n\t\t}\n\t\tlns.ui.update();\n\t}; /* d key */\n\n\tthis.deleteFrameRange = function() {\n\t\tself.saveState();\n\t\tconst startFrame = +prompt(\"Start frame:\");\n\t\tconst endFrame = +prompt(\"End frame:\");\n\n\t\tif (endFrame > 0) {\n\t\t\tfor (let i = endFrame; i >= startFrame; i--) {\n\t\t\t\tself.deleteFrame(i);\n\t\t\t}\n\n\t\t\tlns.draw.cutEnd();\n\t\t\tlns.ui.setFrame(0);\n\t\t}\n\t}; /* shift-d */\n\n\tthis.cutLastSegment = function() {\n\t\tlns.ui.layers.cutLayerSegment();\n\t\tlns.draw.pop(); \n\t}; /* z key */\n\n\tthis.cutLastLine = function() {\n\t\tlns.ui.layers.cutLayerLine(); \n\t\tlns.draw.popOff();\n\t}; /* shift z */\n\n\tthis.insert = function(dir) {\n\t\tlns.draw.reset();\n\t\tself.saveState();\n\t\tfor (let i = 0, len = anim.layers.length - 1; i < len; i++) {\n\t\t\t// insert before dir  0, after 1\n\t\t\tanim.layers[i].shiftIndex(anim.currentFrame + dir, 1);\n\t\t\tlns.anim.addLayer(anim.layers[i].removeIndex(anim.currentFrame + dir));\n\t\t\tanim.frame = anim.currentFrame + dir;\n\t\t}\n\t\tlns.ui.update();\n\t}; /* i, shift-i key */\n\n\tthis.addMultipleCopies = function() {\n\t\tself.copyFrame = [];\n\t\tself.clearSelected();\n\t\tlet n = +prompt(\"Number of copies: \");\n\t\tself.copy();\n\t\tif (n) {\n\t\t\tfor (let i = 0; i < n; i++) {\n\t\t\t\tlns.ui.play.next(1);\n\t\t\t\tself.paste();\n\t\t\t}\n\t\t}\n\t\tlns.ui.update();\n\t}; /* shift -c  */\n\n\tthis.offsetDrawing = function(offset) {\n\t\tlns.draw.reset();\n\t\tconst _layers = [];\n\t\tconst togs = lns.anim.layers.some(layer => { return layer.toggled });\n\t\tfor (let i = 0; i < anim.layers.length - 1; i++) {\n\t\t\tconst layer = anim.layers[i];\n\t\t\tif (layer.isInFrame(anim.currentFrame) && !togs || togs && layer.toggled) \n\t\t\t\t\t_layers.push(anim.layers[i]);\n\t\t}\n\t\tif (_layers) {\n\t\t\tself.saveState();\n\t\t\tif (!offset) offset = new Cool.Vector(+prompt(\"x\"), +prompt(\"y\"));\n\t\t\tif (offset) {\n\t\t\t\t// check to see if layers are selected\n\t\t\t\tlet layers = [];\n\t\t\t\tif (lns.ui.layers.length > 0) {\n\t\t\t\t\tfor (let i = 0; i < lns.ui.layers.length; i++) {\n\t\t\t\t\t\tif (lns.ui.layers[i].toggled)\n\t\t\t\t\t\t\tlayers.push(lns.ui.layers[i])\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlayers = _layers;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0; i < layers.length; i++) {\n\t\t\t\t\tlayers[i].x += offset.x;\n\t\t\t\t\tlayers[i].y += offset.y;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.log(\"%c No layers in frame \", \"color:yellow; background:black;\");\n\t\t}\n\t}; /* q key  */\n\n\tthis.explode = function(type) {\n\t\tlns.draw.reset();\n\t\tconst n = +prompt('Number of frames?');\n\t\tfor (let i = 0; i < anim.layers.length - 1; i++) {\n\t\t\tconst layer = anim.layers[i];\n\t\t\tif (layer.isInFrame(anim.currentFrame)) {\n\t\t\t\tlayer.endFrame = layer.startFrame + n;\n\t\t\t\tif (anim.state.end < layer.endFrame) anim.state.end = layer.endFrame;\n\t\t\t\tswitch(type) {\n\t\t\t\t\tcase \"Explode\":\n\t\t\t\t\t\tlayer.addTween({\n\t\t\t\t\t\t\tprop: 'e',\n\t\t\t\t\t\t\tsf: layer.f.s,\n\t\t\t\t\t\t\tef: layer.f.e,\n\t\t\t\t\t\t\tsv: 0,\n\t\t\t\t\t\t\tev: anim.drawings[layer.d].length\n\t\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Reverse\":\n\t\t\t\t\t\tlayer.addTween({\n\t\t\t\t\t\t\tprop: 's',\n\t\t\t\t\t\t\tsf: layer.f.s,\n\t\t\t\t\t\t\tef: layer.f.e,\n\t\t\t\t\t\t\tsv: 0,\n\t\t\t\t\t\t\tev: anim.drawings[layer.d].length\n\t\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"ExRev\":\n\t\t\t\t\t\tconst mid = Math.floor(n / 2);\n\t\t\t\t\t\tlayer.addTween({\n\t\t\t\t\t\t\tprop: 'e',\n\t\t\t\t\t\t\tsf: layer.f.s,\n\t\t\t\t\t\t\tef: layer.f.s + mid,\n\t\t\t\t\t\t\tsv: 0,\n\t\t\t\t\t\t\tev: anim.drawings[layer.d].length\n\t\t\t\t\t\t});\n\t\t\t\t\t\tlayer.addTween({\n\t\t\t\t\t\t\tprop: 's',\n\t\t\t\t\t\t\tsf: layer.f.s + mid,\n\t\t\t\t\t\t\tef: layer.f.e,\n\t\t\t\t\t\t\tsv: 0,\n\t\t\t\t\t\t\tev: anim.drawings[layer.d].length\n\t\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlns.ui.update();\n\t}; /* a key */\n}\n","function Draw(defaults) {\n\tconst self = this;\n\n\tObject.defineProperty(this, 'layer', {\n\t\tget: function() {\n\t\t\treturn lns.anim.layers[lns.anim.layers.length -1];\n\t\t}\n\t});\n\n\tObject.defineProperty(this, 'drawing', {\n\t\tget: function() {\n\t\t\treturn lns.anim.drawings[lns.anim.drawings.length - 1];\n\t\t},\n\t\tset: function(drawing) {\n\t\t\tlns.anim.drawings[lns.anim.drawings.length - 1] = drawing;\n\t\t}\n\t});\n\n\tlns.anim.drawings.push([]);\n\tlns.anim.layers.push(new Layer({ \n\t\t...defaults, \n\t\td: Math.max(lns.anim.drawings.length - 1, 0),  \n\t\tf: { s: lns.anim.currentFrame, e: lns.anim.currentFrame }\n\t}));\n\n\tthis.setProperties = function(props) {\n\t\tfor (const prop in props) {\n\t\t\tif (self.layer[prop] !== undefined) {\n\t\t\t\t// self.layer[prop] = props[prop];\n\t\t\t\tif (lns.ui) lns.ui.faces[prop].update(props[prop]);\n\t\t\t\t/* how to do this with ui, setter */\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.setProperty = function(prop, value) {\n\t\t// console.log(arguments);\n\t\t// console.log(prop, value);\n\t\tlns.anim.updateProperty(prop, value);\n\t\tself.layer[prop] = value;\n\t};\n\n\tthis.setDefaults = function() {\n\t\tself.setProperties(defaults);\n\t};\n\n\tthis.reset = function(f) {\n\t\tif (self.drawing.length > 0) {\n\t\t\tlns.anim.drawings.push([]);\n\t\t\t/* seems repetietive - settings class ... ? */\n\t\t\tlns.anim.layers.push(new Layer({ \n\t\t\t\tn: +lns.ui.faces.n.value,\n\t\t\t\tr: +lns.ui.faces.r.value,\n\t\t\t\tw: +lns.ui.faces.w.value,\n\t\t\t\tv: +lns.ui.faces.v.value,\n\t\t\t\tc: lns.ui.faces.c.value,\n\t\t\t\td: lns.anim.drawings.length - 1,  \n\t\t\t\tf: { s: +f || lns.anim.currentFrame, e: +f || lns.anim.currentFrame }\n\t\t\t}));\n\t\t\tlns.data.saveState();\n\t\t}\n\t\tlns.ui.update();\n\t}; /* r key */\n\n\tthis.cutEnd = function() {\n\t\t/* make sure draw layer doesn't extend to far */\n\t\tlet endFrame = 0;\n\t\tfor (let i = 0; i < lns.anim.layers.length - 1; i++) {\n\t\t\tconst layer = lns.anim.layers[i];\n\t\t\tif (layer.endFrame > endFrame) endFrame = layer.endFrame;\n\t\t}\n\t\tif (lns.draw.layer.endFrame > endFrame) \n\t\t\tlns.draw.layer.endFrame = endFrame;\n\t\t/* layer loop function?? its called forEach dumbass */\n\t};\n\n\tthis.hasDrawing = function() {\n\t\treturn lns.anim.layers.some(layer => {\n\t\t\treturn layer.isInFrame(lns.anim.currentFrame) && \n\t\t\t\tlns.anim.drawings[layer.d].length > 0; \n\t\t\t});\n\t};\n\n\tthis.brush = 0;\n\tthis.brushSpread = 1;\n\tthis.startDots = false;\n\tthis.dots = 10;\n\tthis.grass = 0;\n\n\t// how often the mousemove records, default 30ms\n\tthis.mouseTimer = performance.now();  //  independent of draw timer\n\tthis.mouseInterval = 30;\n\tthis.isDrawing = false; // for drawStart to drawEnd so its not always moving\n\n\tthis.outSideCanvas = function(ev) {\n\t\tif (ev.toElement != lns.canvas.canvas) {\n\t\t\tif (self.isDrawing) self.reset();\n\t\t\tself.isDrawing = false;\n\t\t}\n\t};\n\n\tthis.pop = function() {\n\t\tif (self.drawing.length > 0) {\n\t\t\tif (self.drawing.pop() == 'end')\n\t\t\t\tself.drawing.pop();\n\t\t\tself.drawing.push('end');\n\t\t}\n\t};\n\n\t/* could be drawing class */\n\tthis.popOff = function() {\n\t\tif (self.drawing.length > 0) {\n\t\t\tself.drawing.pop(); // remove end\n\t\t\tfor (let i = self.drawing.length - 1; i > 0; i--) {\n\t\t\t\tif (self.drawing[i] != 'end') self.drawing.pop();\n\t\t\t\telse break;\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.update = function(ev) {\n\t\tif (performance.now() > self.mouseInterval + self.mouseTimer) {\n\t\t\tself.mouseTimer = performance.now();\n\t\t\tif (self.isDrawing)\n\t\t\t\tif (self.brush <= 0)\n\t\t\t\t\tself.addLine(Math.round(ev.offsetX), Math.round(ev.offsetY));\n\t\t\t\telse\n\t\t\t\t\tself.addBrush(Math.round(ev.offsetX), Math.round(ev.offsetY));\n\t\t}\n\t};\n\n\tthis.addBrush = function(x, y) {\n\t\tconst b = self.brush * self.brush * self.brushSpread;\n\t\tlet _y = 1;\n\t\tif (self.grass > 0) _y *= self.grass;\n\t\tlet origin = new Cool.Vector(x, y);\n\t\tfor (let i = 0; i < self.brush; i++) {\n\t\t\tlet point = new Cool.Vector(x + Cool.randomInt(-b, b), y + Cool.randomInt(-b, b));\n\t\t\twhile (point.dist(origin) > b){\n\t\t\t\tpoint = new Cool.Vector(x + Cool.randomInt(-b, b), y + Cool.randomInt(-b, b));\n\t\t\t}\n\t\t\tpoint.divide(lns.canvas.scale);\n\t\t\tif (point.x > 0 && point.x < lns.canvas.width && \n\t\t\t\tpoint.y > 0 && point.y < lns.canvas.height) {\n\t\t\t\tself.drawing.push(point);\n\t\t\t}\n\t\t\tconst points = Cool.randomInt(1,3);\n\t\t\tfor (let i = 0; i < points; i ++) {\n\t\t\t\tif (point.x > 0 && point.x < lns.canvas.width && \n\t\t\t\t\tpoint.y > 0 && point.y < lns.canvas.height) {\n\t\t\t\t\tself.drawing.push(new Cool.Vector(\n\t\t\t\t\t\tpoint.x + Cool.randomInt(-1, 1),\n\t\t\t\t\t\tpoint.y + Cool.randomInt(_y)\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t}\n\t\t\tself.drawing.push('end');\n\t\t}\n\t}\n\n\tthis.addLine = function(x, y) {\n\t\tself.drawing.push(new Cool.Vector(x, y).divide(lns.canvas.scale));\n\t};\n\n\tthis.start = function(ev) {\n\t\tif (ev.which == 1 && !lns.render.isPlaying && !ev.altKey) {\n\t\t\tself.isDrawing = true;\n\t\t\tself.mouseTimer = performance.now();\n\t\t\tif (self.brush <= 0)\n\t\t\t\tself.addLine(Math.round(ev.offsetX), Math.round(ev.offsetY));\n\t\t\telse\n\t\t\t\tself.addBrush(Math.round(ev.offsetX), Math.round(ev.offsetY));\n\t\t} else if (ev.altKey) {\n\t\t\tself.startDots = new Cool.Vector(Math.round(ev.offsetX), Math.round(ev.offsetY));\n\t\t}\n\t};\n\n\tthis.end = function(ev) {\n\t\tif (self.startDots) {\n\t\t\tconst w = Math.abs(self.startDots.x - ev.offsetX);\n\t\t\tconst h = Math.abs(self.startDots.y - ev.offsetY);\n\t\t\tconst ratio =  w / h;\n\t\t\tconst c = w / (ratio * self.dots/2);\n\t\t\tconst r = h / (1/ratio * self.dots/2);\n\t\t\tlet [startX, endX] = self.startDots.x < ev.offsetX ? [self.startDots.x, ev.offsetX] : [ev.offsetX, self.startDots.x];\n\t\t\tlet [startY, endY] = self.startDots.y < ev.offsetY ? [self.startDots.y, ev.offsetY] : [ev.offsetY, self.startDots.y];\n\t\t\tfor (let x = startX; x < endX; x += c) {\n\t\t\t\tfor (let y = startY; y < endY; y += r) {\n\t\t\t\t\tconst _x = Math.round(x) + Cool.randomInt(-c/2, c/2);\n\t\t\t\t\tconst _y = Math.round(y) + Cool.randomInt(-r/2, r/2);\n\t\t\t\t\tconst points = Cool.randomInt(1,3);\n\t\t\t\t\tfor (let i = 0; i < points; i ++) {\n\t\t\t\t\t\tself.drawing.push(new Cool.Vector(\n\t\t\t\t\t\t\t_x + Cool.randomInt(-1, 1),\n\t\t\t\t\t\t\t_y + Cool.randomInt(-1, 1)\n\t\t\t\t\t\t));\n\t\t\t\t\t}\n\t\t\t\t\tself.drawing.push('end');\n\t\t\t\t}\n\t\t\t}\n\t\t\tself.startDots = false;\n\t\t} else if (ev.which == 1) {\n\t\t\tself.isDrawing = false;\n\t\t\t/* prevent saving single point drawing segments */\n\t\t\tif (self.drawing[self.drawing.length-2] != 'end' &&\n\t\t\t\tself.drawing.length > 1) {\n\t\t\t\tself.drawing.push(\"end\");\n\t\t\t} else {\n\t\t\t\tself.drawing.pop();\n\t\t\t}\n\t\t}\n\t}\n\n\tif (window.PointerEvent) {\n\t\tlns.canvas.canvas.addEventListener('pointermove', self.update);\n\t\tlns.canvas.canvas.addEventListener('pointerdown', self.start);\n\t\tlns.canvas.canvas.addEventListener('pointerup', self.end);\n\t} else {\n\t\tlns.canvas.canvas.addEventListener('mousemove', self.update);\n\t\tlns.canvas.canvas.addEventListener('mousedown', self.start);\n\t\tlns.canvas.canvas.addEventListener('mouseup', self.end);\n\n\t\tconst lastTouch = { which: 1 };\n\n\t\tfunction toucher(ev, callback) {\n\t\t\tev.preventDefault();\n\t\t\tif (ev.touches[0]) {\n\t\t\t\tconst rect = ev.target.getBoundingClientRect();\n\t\t\t\tlastTouch.offsetX = ev.targetTouches[0].pageX - rect.left - window.scrollX;\n\t\t\t\tlastTouch.offsetY = ev.targetTouches[0].pageY - rect.top - window.scrollY;\n\t\t\t\tlastTouch.which = 1;\n\t\t\t\tcallback(lastTouch);\n\t\t\t}\n\t\t}\n\n\t\t/* apple pencil - safari doesn't support pointer event */\n\t\tlns.canvas.canvas.addEventListener('touchstart', ev => {\n\t\t\ttoucher(ev, self.start);\n\t\t});\n\t\tlns.canvas.canvas.addEventListener('touchmove', ev => {\n\t\t\ttoucher(ev, self.update);\n\t\t});\n\t\tlns.canvas.canvas.addEventListener('touchend', ev => {\n\t\t\tself.end(lastTouch);\n\t\t});\n\t}\n\tdocument.addEventListener('mousemove', self.outSideCanvas);\n}\n","function Files(params) {\n\tconst self = this;\n\n\tthis.saveFilesEnabled = false;\n\tthis.saveSettingsOnUnload = params.save || false;\n\tthis.fileName = undefined;\n\n\t/* s key - shift-s for single */\n\tthis.saveFile = function(single, callback) {\n\n\t\tlns.draw.reset();\n\t\tlns.ui.play.checkEnd();\n\t\t\n\t\tlns.anim.drawings.pop();\n\t\tlns.anim.layers.pop();\n\n\t\tself.fileName = lns.ui.faces.title.value || prompt(\"Name this file:\");\n\n\t\tif (params.fit && confirm(\"Fit canvas?\"))\n\t\t\tlns.canvas.fitCanvasToDrawing();\n\n\t\tconst json = {};\n\t\tjson.v = \"2.4\";\n\t\tjson.w = +lns.canvas.width;\n\t\tjson.h = +lns.canvas.height;\n\t\tjson.fps = +lns.anim.fps;\n\t\tif (params.bg) json.bg = lns.canvas.bgColor;\n\t\tlet colors = lns.anim.layers.map(layer => layer.c);\n\t\tcolors = [...new Set(colors)];\n\t\tjson.mc = colors.length > 1 ? true : false;\n\n\t\t/* save current frame */\n\t\tlet layers = [];\n\t\tif (single) {\n\t\t\tfor (let i = 0; i < lns.anim.layers.length; i++) {\n\t\t\t\tif (lns.anim.layers[i].isInFrame(lns.anim.currentFrame)) {\n\t\t\t\t\tconst layer = _.cloneDeep(lns.anim.layers[i]);\n\t\t\t\t\tlayer.startFrame = 0;\n\t\t\t\t\tlayer.endFrame = 0;\n\t\t\t\t\tlayers.push(layer);;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tlayers = lns.anim.layers;\n\t\t}\n\n\t\tfor (let i = 0; i < layers.length; i++) {\n\t\t\tlayers[i].clean();\n\t\t}\n\t\tjson.l = layers;\n\n\t\t/* search frames for layers and drawings used */\n\t\tconst drawingIndexes = [];\n\t\tfor (let i = 0; i < layers.length; i++) {\n\t\t\tconst drawingIndex = layers[i].d;\n\t\t\tif (!drawingIndexes.includes(drawingIndex))\n\t\t\t\tdrawingIndexes.push(drawingIndex);\n\t\t}\n\n\t\tjson.d = [];\n\t\tfor (let i = 0; i < drawingIndexes.length; i++) {\n\t\t\tconst index = drawingIndexes[i];\n\t\t\tconst drawing = lns.anim.drawings[index];\n\t\t\tconst d = [];\n\t\t\tfor (let j = 0; j < drawing.length; j++) {\n\t\t\t\tconst point = drawing[j];\n\t\t\t\tif (point == 'end') d.push(0);\n\t\t\t\telse d.push([point.x, point.y]);\n\t\t\t}\n\t\t\tjson.d[index] = d;\n\t\t}\n\n\t\t/* don't save default state */\n\t\tif (Object.keys(lns.anim.states).length > 1) {\n\t\t\tjson.s = _.cloneDeep(lns.anim.states);\n\t\t\tdelete json.s.default;\n\t\t}\n\n\t\tconst jsonfile = JSON.stringify(json);\n\n\t\tif (self.fileName) {\n\t\t\tconst blob = new Blob([jsonfile], { type: \"application/x-download;charset=utf-8\" });\n\t\t\tsaveAs(blob, `${self.fileName}.json`);\n\t\t\tlns.ui.faces.title.value = self.fileName;\n\t\t}\n\t};\n\n\t/* loads from src url */\n\tthis.loadFile = function(fileName, callback) {\n\t\tself.fileName = fileName;\n\t\tif (self.fileName) {\n\t\t\tif (self.fileName.slice(self.fileName.length - 5) != '.json') \n\t\t\t\tself.fileName += '.json';\n\t\t\tfetch(self.fileName)\n\t\t\t\t.then(response => { return response.json() })\n\t\t\t\t.then(data => { self.loadJSON(data, callback); })\n\t\t\t\t.catch(error => {\n\t\t\t\t\talert('File not found: ' + error.message);\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t});\n\t\t}\n\t};\n\n\tthis.loadJSON = function(data, callback) {\n\n\t\tlns.anim.drawings = [];\n\t\tlns.anim.layers = [];\n\t\tlns.anim.loadData(data, function() {\n\t\t\t// set layers to classes \n\t\t\tfor (let i = 0; i < data.l.length; i++) {\n\t\t\t\t// console.log(data.l[i])\n\t\t\t\tlns.anim.layers[i] = new Layer(data.l[i]);\n\t\t\t}\n\t\t\tlns.canvas.setWidth(data.w);\n\t\t\tlns.canvas.setHeight(data.h);\n\t\t\tlns.ui.faces.fps.update(data.fps);\n\t\t\tif (data.bg) lns.canvas.setBGColor(data.bg);\n\t\t\tlns.draw.reset(); \n\t\t\tif (callback) callback(data, params); \n\t\t});\n\t};\n\n\t/* shift o */\n\tthis.reOpenFile = function() {\n\t\tself.saveFile({}, function(fileName) {\n\t\t\tlocation.href += `?src=/${ prompt(\"Enter location:\") }/${ fileName }.json`;\n\t\t});\n\t};\n\n\t/* o key */\n\tthis.openFile = function() {\n\t\tconst openFile = document.createElement('input');\n\t\topenFile.type = \"file\";\n\t\topenFile.click();\n\t\topenFile.onchange = function() {\n\t\t\tself.readFile(openFile.files, lns.ui.updateFIO);\n\t\t};\n\t};\n\n\tthis.readFile = function(files, callback) {\n\t\tfor (let i = 0, f; f = files[i]; i++) {\n\t\t\tif (!f.type.match('application/json')) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst reader = new FileReader();\n\t\t\treader.onload = (function(theFile) {\n\t\t\t\treturn function(e) {\n\t\t\t\tself.fileName = f.name.split('.')[0];\n\t\t\t\tself.loadJSON(JSON.parse(e.target.result), callback);\n\t\t\t};\n\t\t\t})(f);\n\t\t\treader.readAsText(f);\n\t\t}\n\t};\n\n\tif (window.File && window.FileReader && window.FileList && window.Blob) {\n\t\tself.saveFilesEnabled = true;\n\t\tconsole.log(\"%c Save file enabled \", \"color:lightgreen;background:black;\");\n\t\tlns.canvas.canvas.addEventListener('dragover', dragOverHandler);\n\t\tlns.canvas.canvas.addEventListener('drop', dropHandler);\n\t\t// https://gist.github.com/andjosh/7867934\n\t}\n\n\tfunction dropHandler(ev) {\n \t\tev.preventDefault();\n \t\tev.stopPropagation();\n \t\tself.readFile(ev.dataTransfer.files, lns.ui.updateFIO);\n\t}\n\n\tfunction dragOverHandler(ev) {\n\t\tev.preventDefault();\n\t}\n\n\twindow.addEventListener(\"beforeunload\", function(ev) {\n\t\tif (self.saveSettingsOnUnload) lns.ui.settings.saveSettings();\n\t\tif (params.reload) ev.returnValue = 'Did you save dumbhole?';\n\t});\n}\n","function Render(lps, color) {\n\tconst self = this;\n\n\tthis.lps = lps || 12; // lines per second all the time\n\tthis.interval = 1000 / this.lps;  // fps per one second, the line interval\n\tthis.timer = performance.now();\n\n\tthis.onionSkinNum = 0;\n\tthis.onionSkinIsVisible = false;\n\n\t/* l key */\n\tthis.setOnionSkin = function(n) {\n\t\tself.onionSkinNum = +n;\n\t\tself.onionSkinIsVisible = +n > 0 ? true : false;\n\t};\n\n\t/* just set drawing back to 0 but might do other things */\n\tthis.reset = function() {\n\t\tlns.anim.frame = 0;\n\t\tlns.anim.isPlaying = false;\n\t\tlns.canvas.ctx.miterLimit = 1; /* maybe not needed? happens in canvas reset*/\n\t\tlns.ui.update();\n\t};\n\n\t/* toggle play animation */\n\tthis.toggle = function() {\n\t\tif (!lns.anim.isPlaying) {\n\t\t\tlns.ui.play.checkEnd();\n\t\t\tlns.ui.timeline.update();\n\t\t}\n\t\tlns.anim.isPlaying = !lns.anim.isPlaying;\n\t};\n\n\t/* ' - lps is property of render engine, not individual animations */\n\tthis.setLps = function(lps) {\n\t\tself.lps = +lps;\n\t\tself.interval = 1000 / self.lps;\n\t\tlns.anim.lps = self.lps;\n\t};\n\n\tthis.update = function(time) {\n\t\tif (performance.now() > self.interval + self.timer || time == 'cap') {\n\t\t\tself.timer = performance.now();\n\n\t\t\t// what actually need to be update here ?\n\t\t\tif (lns.anim.isPlaying) lns.ui.timeline.update();\n\n\t\t\tlns.canvas.ctx.clearRect(0, 0, lns.canvas.width, lns.canvas.height);\n\n\t\t\t/* in capture set animation onDraw */\n\t\t\tif (lns.ui.capture.bg && (lns.ui.capture.frames > 0 || lns.ui.capture.isVideo)) {\n\t\t\t\tlns.canvas.ctx.fillStyle = lns.canvas.bgColor;\n\t\t\t\tlns.canvas.ctx.fillRect(0, 0, lns.canvas.width, lns.canvas.height);\n\t\t\t}\n\n\t\t\tlns.bgImage.display();\n\n\t\t\tif (self.onionSkinNum > 0 && self.onionSkinIsVisible) {\n\t\t\t\tconst temp = lns.anim.currentFrame;\n\t\t\t\tfor (let o = 1; o <= self.onionSkinNum; o++){\n\t\t\t\t\tconst index = temp - o;\n\t\t\t\t\tif (index >= 0) {\n\t\t\t\t\t\tconst color = `rgba(105,150,255,${ 1.5 - (o / self.onionSkinNum) })`;\n\t\t\t\t\t\tlns.anim.currentFrame = index;\n\t\t\t\t\t\tlns.anim.overrideProperty('c', color);\n\t\t\t\t\t\tlns.anim.draw();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlns.anim.cancelOverride();\n\t\t\t\tlns.anim.currentFrame = temp;\n\t\t\t}\n\n\t\t\t/* draw before update is cool for now ... */\n\t\t\tlns.anim.draw();\n\t\t\tlns.anim.update();\n\t\t}\n\t\tif (!lns.ui.capture.isCapturing) \n\t\t\twindow.requestAnimFrame(self.update);\n\t};\n\n\tthis.start = function() {\n\t\twindow.requestAnimFrame(self.update);\n\t};\n}","class LnsAnim extends LinesAnimation {\n\t\n\tupdateProperty(prop, value) {\n\t\t/* args from ui */\n\t\tfor (let i = 0; i < this.layers.length - 1; i++) {\n\t\t\tif (this.layers[i].toggled) this.layers[i][prop] = value;\n\t\t}\n\t}\n\n\taddLayer(layer) {\n\t\t// add before draw layer\n\t\tif (this.layers.indexOf(layer) == -1)\n\t\t\tthis.layers.splice(lns.anim.layers.length - 1, 0, layer);\n\t}\n\n}","class Layer {\n\tconstructor(params) {\n\t\tthis.d =  params.d;\n\t\tthis.x =  params.x || 0;\n\t\tthis.y =  params.y || 0;\n\t\tthis.f =  params.f;\n\t\tthis.t =  params.t || [];\n\t\tthis.n =  params.n;\n\t\tthis.r =  params.r;\n\t\tthis.w =  params.w;\n\t\tthis.v =  params.v;\n\t\tthis.c =  params.c;\n\t\tthis.ws = params.ws || false; // wiggle segments \n\n\t\tthis.toggled = false;\n\t\tthis.resetTweens();\n\t}\n\n\tclean() {\n\t\tdelete this.toggled;\n\t\tdelete this.pc;\n\t}\n\n\ttoggle() {\n\t\tif (!this.toggled) {\n\t\t\tthis.pc = this.c;\n\t\t\tthis.c = \"#00CC96\";\n\t\t} else if (this.c == \"#00CC96\") {\n\t\t\tthis.c = this.pc;\n\t\t}\n\t\tthis.toggled = !this.toggled;\n\t}\n\n\tremove() {\n\t\tlns.anim.layers.splice(lns.anim.layers.indexOf(this), 1);\n\t}\n\n\taddTween(tween) {\n\t\tthis.t.push(tween);\n\t\tif (tween.sf < this.startFrame) this.startFrame = tween.sf;\n\t\tif (tween.ef > this.endFrame) this.endFrame = tween.ef;\n\t}\n\n\tget startFrame() {\n\t\treturn this.f.s;\n\t}\n\n\tset startFrame(f) {\n\t\tthis.f.s = Math.max(0, +f);\n\t\tthis.resetTweens();\n\t}\n\n\tget endFrame() {\n\t\treturn this.f.e;\n\t}\n\n\tset endFrame(f) {\n\t\tthis.f.e = Math.max(0, +f);\n\t\tthis.resetTweens();\n\t}\n\n\taddIndex(index) {\n\t\tif (!this.isInFrame(index)) {\n\t\t\tif (this.f.s - 1 == index) this.f.s -= 1;\n\t\t\telse if (this.f.e + 1 == index) this.f.e += 1;\n\t\t\telse {\n\t\t\t\treturn new Layer({\n\t\t\t\t\t...this,\n\t\t\t\t\tf: { s: index, e: index }\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tremoveIndex(index) {\n\t\tif (this.startFrame == index && this.endFrame == index) return undefined;\n\t\telse if (this.startFrame == index) this.startFrame += 1;\n\t\telse if (this.endFrame == index) this.endFrame -= 1;\n\t\telse if (index > this.startFrame && index < this.endFrame) {\n\t\t\tconst layer = _.cloneDeep(this);\n\t\t\tlayer.startFrame = index + 1;\n\t\t\tlayer.endFrame = this.endFrame;\n\t\t\tlayer.resetTweens();\n\n\t\t\tthis.endFrame = index - 1;\n\t\t\tthis.resetTweens();\n\n\t\t\treturn layer;\n\t\t}\n\t\t\n\t\tthis.resetTweens();\n\t\treturn this; // when is this used ? \n\t}\n\n\tshiftIndex(index, n) {\n\t\tconsole.log(index, n);\n\t\tif (!n) n = -1;\t/* n is shift num, negative or positive */\n\n\t\t/* what about insert ... i dont get this ... shift should not delete right */\n\t\t// if (this.startFrame == index)\n\t\t\t// return this.removeIndex(index);\n\n\t\tif (this.startFrame >= index) this.startFrame += n;\n\t\tif (this.endFrame >= index) this.endFrame += n;\n\n\t\tthis.resetTweens(); // can i check this somewhere else ? \n\t\treturn this;\n\t}\n\n\tisInFrame(index) {\n\t\tif (lns.anim.layers.indexOf(this) == -1) return false\n\t\telse if (index >= this.f.s && index <= this.f.e) return true;\n\t\telse return false;\n\t}\n\n\tget props() {\n\t\treturn {\n\t\t\tn: this.n,\n\t\t\tr: this.r,\n\t\t\tw: this.w,\n\t\t\tv: this.v\n\t\t}\n\t}\n\n\tresetTweens() {\n\t\tfor (let i = 0; i < this.t.length; i++) {\n\t\t\tconst tween = this.t[i];\n\t\t\tif (tween.sf < this.startFrame) tween.sf = this.startFrame;\n\t\t\tif (tween.ef > this.endFrame) tween.ef = this.endFrame;\n\t\t}\n\t}\n}","class UILayer extends UICollection {\n\tconstructor(params, layer) {\n\t\tsuper(params);\n\t\tthis.addClass('layer');\n\t\tthis.layer = layer;\n\n\t\tthis.toggle = new UIToggle({\n\t\t\ttype: 'layer-toggle',\n\t\t\ttext: `${layer.d}`,\n\t\t\tcallback: params.callback\n\t\t});\n\n\t\tthis.edit = new UIButton({\n\t\t\ttype: 'layer-edit',\n\t\t\ttext: \"✎\",\n\t\t\tcallback: () => {\n\t\t\t\tconst modal = new UIModal('Edit Layer', lns, this.position, () => {\n\t\t\t\t\tthis.update();\n\t\t\t\t\tlns.ui.update();\n\t\t\t\t});\n\n\t\t\t\tmodal.add(new UIButton({ \n\t\t\t\t\ttext: \"Cut Segment\",\n\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\tconst drawing = lns.anim.drawings[layer.d];\n\t\t\t\t\t\tdrawing.pop(); /* remove \"end\" */\n\t\t\t\t\t\tdrawing.pop(); /* remove segment */\n\t\t\t\t\t\tdrawing.push('end'); /* new end */\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tmodal.add(new UIButton({\n\t\t\t\t\ttext: \"Cut Line\",\n\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\tconst drawing = lns.anim.drawings[layer.d];\n\t\t\t\t\t\tdrawing.pop(); /* remove \"end\" */\n\t\t\t\t\t\tfor (let i = drawing.length - 1; i > 0; i--) {\n\t\t\t\t\t\t\tif (drawing[i] != 'end') drawing.pop();\n\t\t\t\t\t\t\telse break;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tmodal.add(new UIButton({\n\t\t\t\t\ttext: \"Clone\",\n\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\tconst newLayer = new Layer(_.cloneDeep(layer));\n\t\t\t\t\t\tnewLayer.startFrame = newLayer.endFrame = layer.endFrame + 1;\n\t\t\t\t\t\tlns.anim.layers.splice(lns.anim.layers.length - 1, 0, newLayer);\n\t\t\t\t\t\tlns.ui.play.setFrame(layer.endFrame + 1);\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tmodal.add(new UIButton({\n\t\t\t\t\ttext: \"Split\",\n\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\tconst newLayer = new Layer(_.cloneDeep(layer));\n\t\t\t\t\t\tnewLayer.startFrame = lns.anim.currentFrame + 1;\n\t\t\t\t\t\tlayer.endFrame = lns.anim.currentFrame;\n\t\t\t\t\t\tlns.anim.layers.splice(lns.anim.layers.length - 1, 0, newLayer);\n\t\t\t\t\t\tlns.ui.play.setFrame(layer.endFrame + 1);\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tmodal.add(new UIElement({class: 'break'}));\n\t\t\t\tmodal.add(new UILabel({ text: \"Start Frame:\"}));\n\t\t\t\tmodal.add(new UIBlur({\n\t\t\t\t\tvalue: layer.startFrame,\n\t\t\t\t\tcallback: function(value) {\n\t\t\t\t\t\tlayer.startFrame = +value;\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tmodal.add(new UIElement({class: 'break'}));\n\t\t\t\tmodal.add(new UILabel({ text: \"End Frame:\"}));\n\t\t\t\tmodal.add(new UIBlur({\n\t\t\t\t\tvalue: layer.endFrame,\n\t\t\t\t\tcallback: function(value) {\n\t\t\t\t\t\tlayer.endFrame = +value;\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\t\t});\n\n\t\tthis.tween = new UIButton({\n\t\t\ttext: \"⧉\",\n\t\t\ttype: 'layer-tween',\n\t\t\tcallback: () => {\n\t\t\t\t\n\t\t\t\tconst tween = {\n\t\t\t\t\tprop: 'e',\n\t\t\t\t\tsf: lns.anim.currentFrame,\n\t\t\t\t\tef: lns.anim.currentFrame + 10,\n\t\t\t\t\tsv: 0,\n\t\t\t\t\tev: 'end'\n\t\t\t\t};\n\n\t\t\t\tconst modal = new UIModal('Add Tween', lns, this.position, function() {\n\t\t\t\t\ttween.ev = lns.anim.drawings[layer.d].length;\n\t\t\t\t\tlayer.addTween(tween);\n\t\t\t\t\tlns.ui.update();\n\t\t\t\t});\n\n\t\t\t\tmodal.add(new UILabel({ text: 'Property:' }));\n\t\t\t\tmodal.add(new UISelect({\n\t\t\t\t\toptions: ['e', 's', 'n', 'r', 'w', 'v', 'x', 'y'],\n\t\t\t\t\tvalue: 'e',\n\t\t\t\t\tselected: 'e',\n\t\t\t\t\tcallback: function(value) {\n\t\t\t\t\t\ttween.prop = value;\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tmodal.add(new UILabel({ text: 'Start Frame:' }));\n\t\t\t\tmodal.add(new UIBlur({\n\t\t\t\t\tvalue: tween.sf,\n\t\t\t\t\tcallback: function(value) {\n\t\t\t\t\t\ttween.sf = +value;\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tmodal.add(new UILabel({ text: 'End Frame:' }));\n\t\t\t\tmodal.add(new UIBlur({\n\t\t\t\t\tvalue: tween.ef,\n\t\t\t\t\tcallback: function(value) {\n\t\t\t\t\t\ttween.ef = +value;\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tmodal.add(new UILabel({ text: 'Start Value:' }));\n\t\t\t\tmodal.add(new UIBlur({\n\t\t\t\t\tvalue: tween.sv,\n\t\t\t\t\tcallback: function(value) {\n\t\t\t\t\t\ttween.sv = +value;\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tmodal.add(new UILabel({ text: 'End Value:' }));\n\t\t\t\tmodal.add(new UIBlur({\n\t\t\t\t\tvalue: tween.ev,\n\t\t\t\t\tcallback: function(value) {\n\t\t\t\t\t\ttween.ev = +value;\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\t\t});\n\n\t\tthis.remove = new UIButton({\n\t\t\ttype: 'remove',\n\t\t\ttext: '🗑',\n\t\t\tcallback: () => {\n\t\t\t\tlns.anim.layers.splice(lns.anim.layers.indexOf(this), 1);\n\t\t\t\tlns.ui.update();\n\t\t\t}\n\t\t});\n\n\t\tthis.left = new UIDragButton({\n\t\t\ttext: '⬗',\n\t\t\ttype: 'left',\n\t\t\tcallback: (dir, num) => {\n\t\t\t\tlayer.startFrame += (dir ? dir : -1) * (num ? num : 1);\n\t\t\t\tthis.update();\n\t\t\t\tlns.ui.update();\n\t\t\t}\t\t\n\t\t});\n\n\t\tthis.right = new UIDragButton({\n\t\t\ttext: '⬖',\n\t\t\ttype: 'right',\n\t\t\tcallback: (dir, num) => {\n\t\t\t\tconsole.log(dir, num);\n\t\t\t\tlayer.endFrame += (dir ? dir : 1) * (num ? num : 1);\n\t\t\t\tthis.update();\n\t\t\t\tlns.ui.update();\n\t\t\t}\t\t\n\t\t});\n\n\t\tthis.append(this.toggle);\n\t\tthis.append(this.edit);\n\t\tthis.append(this.tween);\n\t\tthis.append(this.remove);\n\t\tthis.append(this.left);\n\t\tthis.append(this.right);\n\t}\n\n\tget html() {\n\t\treturn this.el;\n\t}\n}","class UITween extends UICollection {\n\tconstructor(params, tween, layer) {\n\t\tsuper(params);\n\t\tthis.addClass('tween');\n\t\tthis.tween = tween;\n\n\t\tthis.edit = new UIButton({\n\t\t\ttext: '✎',\n\t\t\ttype: 'tween-edit',\n\t\t\tcallback: () => {\n\t\t\t\tconst modal = new UIModal('Edit Tween', lns, this.position, function() {\n\t\t\t\t\tlns.ui.update();\n\t\t\t\t});\t\n\n\t\t\t\t/* not DRY maybe make an animate class tween-modal */\n\n\t\t\t\tmodal.add(new UILabel({ text: 'Start Frame:' }));\n\t\t\t\tmodal.add(new UIBlur({\n\t\t\t\t\tvalue: tween.sf,\n\t\t\t\t\tcallback: function(value) {\n\t\t\t\t\t\ttween.sf = +value;\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tmodal.add(new UILabel({ text: 'End Frame:' }));\n\t\t\t\tmodal.add(new UIBlur({\n\t\t\t\t\tvalue: tween.ef,\n\t\t\t\t\tcallback: function(value) {\n\t\t\t\t\t\tconsole.log(tween);\n\t\t\t\t\t\ttween.ef = +value;\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tmodal.add(new UILabel({ text: 'Start Value:' }));\n\t\t\t\tmodal.add(new UIBlur({\n\t\t\t\t\tvalue: tween.sv,\n\t\t\t\t\tcallback: function(value) {\n\t\t\t\t\t\ttween.sv = +value;\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tmodal.add(new UILabel({ text: 'End Value:' }));\n\t\t\t\tmodal.add(new UIBlur({\n\t\t\t\t\tvalue: tween.ev,\n\t\t\t\t\tcallback: function(value) {\n\t\t\t\t\t\ttween.ev = +value;\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\t\t});\n\n\t\tthis.left = new UIDragButton({\n\t\t\ttext: '⬗',\n\t\t\ttype: 'left',\n\t\t\tcallback: (dir, num) => {\n\t\t\t\ttween.sf += (dir ? dir : -1) * (num ? num : 1);\n\t\t\t\tlns.ui.update();\n\t\t\t}\t\t\n\t\t});\n\n\t\tthis.right = new UIDragButton({\n\t\t\ttext: '⬖',\n\t\t\ttype: 'right',\n\t\t\tcallback: (dir, num) => {\n\t\t\t\tthis.tween.ef += (dir ? dir : 1) * (num ? num : 1);\n\t\t\t\tlns.ui.update();\n\t\t\t}\t\t\n\t\t});\n\n\t\tthis.remove = new UIButton({\n\t\t\ttype: 'remove',\n\t\t\ttext: '🗑',\n\t\t\tcallback: () => {\n\t\t\t\tlayer.t.splice(layer.t.indexOf(this), 1);\n\t\t\t\tlns.ui.update();\n\t\t\t}\n\t\t});\n\n\t\tthis.append(this.edit);\n\t\tthis.append(this.remove);\n\t\tthis.append(this.left);\n\t\tthis.append(this.right);\n\t}\n\n\tget html() {\n\t\treturn this.el;\n\t}\n\n}","function Capture() {\n\tconst self = this;\n\n\tthis.ready = true; /* ready to start */\n\tthis.prev = { f: undefined, n: 0 }; /* keeps track of image names */\n\n\tthis.frames = 0; // set by canvas, makes the draw loop capture canvas for a number of frames\n\tthis.bg = true; /*  n key  default capture bg */\n\tthis.isCapturing = false;\n\n\tthis.isVideo = false;\n\tthis.videoLoops = 0;\n\t\n\tthis.one = function() {\n\t\tself.frames = 1;\n\t\tself.start();\n\t}; /* k key */\n\n\tthis.multiple = function() {\n\t\tself.frames = +prompt(\"Capture how many frames?\");\n\t\tself.start();\n\t}; /* shift k */\n\n\tthis.start = function() {\n\t\tlns.anim.onDraw = function() {\n\t\t\tif (self.frames > 0) {\n\t\t\t\tself.capture();\n\t\t\t\tself.frames--;\n\t\t\t\tself.isCapturing = true;\n\t\t\t} else if (self.isCapturing) {\n\t\t\t\tself.isCapturing = false;\n\t\t\t\tlns.anim.isPlaying = false;\n\t\t\t\tlns.anim.onDraw = undefined;\n\t\t\t}\n\t\t};\n\t};\n\n\tthis.cycle = function() {\n\t\tlns.draw.reset();\n\t\t/* set animation to last frame because it updates frames before draw */\n\t\tlns.anim.frame = lns.anim.endFrame;\n\t\tlns.anim.isPlaying = true;\n\t\t// capture as many frames as necessary for lines ratio or 1 of every frame\n\t\tself.frames = lns.anim.endFrame * Math.max(1, lns.render.lps / lns.anim.fps) + 1;\n\t\tself.start();\n\t}; /* ctrl-k - start at beginning and capture one of every frame */\n\n\tthis.capture = function() {\n\t\tif (lns.files.saveFilesEnabled) {\n\t\t\tlns.canvas.canvas.toBlob(blob =>  {\n\t\t\t\tconst title = lns.ui.faces.title.value; // this is a UI\n\t\t\t\tconst frm = Cool.padNumber(lns.anim.currentFrame, 3);\n\n\t\t\t\t\n\t\t\t\tif (frm == self.prev.f) self.prev.n += 1;\n\t\t\t\telse self.prev.n = 0;\n\n\t\t\t\tlet fileName = `${title}-${frm}-${self.prev.n}.png`;\n\t\t\t\tself.prev.f = frm;\n\n\t\t\t\tconst f = saveAs(blob, fileName);\n\t\t\t\tf.onwriteend = function() { \n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\twindow.requestAnimFrame(() => {\n\t\t\t\t\t\t\tlns.render.update('cap'); \n\t\t\t\t\t\t});\n\t\t\t\t\t}, 100); // delay fixes bug where is stops after 10-12 frames\n\t\t\t\t};\n\t\t\t\t\t\n\t\t\t});\n\t\t} else {\n\t\t\tconst cap = self.canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\n\t\t\twindow.location.href = cap;\n\t\t}\n\t};\n\t\n\tthis.startVideo = function() {\n\t\tlns.anim.isPlaying = false;\n\t\tlns.anim.frame = 0;\n\n\t\tself.videoLoops = +prompt(\"Number of loops?\");\n\t\tlns.anim.onPlayedState = function() {\n\t\t\tif (self.videoLoops > 1) {\n\t\t\t\tself.videoLoops--;\n\t\t\t} else if (self.isVideo) {\n\t\t\t\tself.video();\n\t\t\t\tself.isVideo = false;\n\t\t\t\tlns.anim.isPlaying = false;\n\t\t\t\tlns.anim.onPlayedState = undefined;\n\t\t\t}\n\t\t};\n\t\tself.isVideo = true\n\t\tself.bg = true;\n\t\tself.video();\n\t\t\n\t\tlns.anim.isPlaying = true;\n\t}; /* key? */\n\n\tthis.video = function() {\n\t\tif (self.ready) {\n\t\t\tself.ready = false;\n\t\t\tself.isVideo = true\n\t\t\tself.stream = lns.canvas.canvas.captureStream();\n\t\t\tself.rec = new MediaRecorder(self.stream);\n\t\t\tself.rec.start();\n\t\t\tself.rec.addEventListener('dataavailable', e => {\n\t\t\t\tconst blob = new Blob([ e.data ], { 'type': 'video/webm' });\n\t\t\t\tconst url = URL.createObjectURL(blob);\n\t\t\t\tconst a = document.createElement('a');\n\t\t\t\tdocument.body.appendChild(a);\n\t\t\t\ta.href = url;\n\t\t\t\ta.download = `${lns.ui.faces.title.value}.webm` || 'lines.webm';\n\t\t\t\ta.click();\n\t\t\t\t// window.URL.revokeObjectURL(url);\n\t\t\t});\n\t\t} else {\n\t\t\tself.isVideo = false\n\t\t\tself.ready = true;\n\t\t\tself.rec.stop();\n\t\t}\n\t};\n}","function Drawings() {\n\tconst self = this;\n\n\tthis.getLayer = function(index) {\n\t\tconst layers = [];\n\t\t// - 1 for draw layer\n\t\tfor (let i = 0; i < lns.anim.layers.length - 1; i++) {\n\t\t\tif (lns.anim.layers[i].d == index) layers.push(lns.anim.layers[i]);\n\t\t}\n\n\t\tif (layers.length == 0) return false;\n\t\telse if (layers.length == 1) return layers[0];\n\t\telse {\n\t\t\tfor (let i = 0; i < layers.length; i++) {\n\t\t\t\tif (layers[i].isInFrame(lns.anim.currentFrame)) {\n\t\t\t\t\treturn layers[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn layers[0];\n\t\t}\n\t};\n\n\tthis.update = function() {\n\t\t// -1 to ignore draw drawing\n\t\tfor (let i = 0; i < lns.anim.drawings.length - 1; i++) {\n\t\t\tif (lns.anim.drawings[i]) {\n\t\t\t\tconst drawing = lns.anim.drawings[i];\n\t\t\t\tlet layer = self.getLayer(i); /* check for existing layer */\n\t\t\t\tlet inFrame = layer ? layer.isInFrame(lns.anim.currentFrame) : false;\n\t\t\t\tif (!self.panel.drawings[i]) {\n\t\t\t\t\tlet props;\n\t\t\t\t\tif (layer) {\n\t\t\t\t\t\t// user layer.props ?? \n\t\t\t\t\t\tprops = {\n\t\t\t\t\t\t\tn: layer.n,\n\t\t\t\t\t\t\tr: layer.r,\n\t\t\t\t\t\t\tw: layer.w, \n\t\t\t\t\t\t\tv: layer.v,\n\t\t\t\t\t\t\tc: layer.c,\n\t\t\t\t\t\t\tx: layer.x,\n\t\t\t\t\t\t\ty: layer.y\n\t\t\t\t\t\t} /* prob a better way to do this ... \n\t\t\t\t\t\t\tthis stops existing when updating interface */\n\t\t\t\t\t}\n\n\t\t\t\t\t// console.log(i);\n\t\t\t\t\tself.panel.drawings.append(new UIToggle({\n\t\t\t\t\t\ttext: i,\n\t\t\t\t\t\tisOn: inFrame,\n\t\t\t\t\t\tcallback: function() {\n\t\t\t\t\t\t\tlet layer = self.getLayer(i);\n\n\t\t\t\t\t\t\t/* add */\n\t\t\t\t\t\t\tif (!this.isOn) {\n\t\t\t\t\t\t\t\tif (layer) {\n\t\t\t\t\t\t\t\t\tlayer = layer.addIndex(lns.anim.currentFrame);\n\t\t\t\t\t\t\t\t\tif (lns.anim.layers.indexOf(layer) == -1) {\n\t\t\t\t\t\t\t\t\t\tlns.anim.layers.splice(lns.anim.layers.length - 1, 0, layer);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tlayer = new Layer({\n\t\t\t\t\t\t\t\t\t\t...props,\n\t\t\t\t\t\t\t\t\t\td: i,\n\t\t\t\t\t\t\t\t\t\tf: { s: lns.anim.currentFrame, e: lns.anim.currentFrame },\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tlns.anim.layers.splice(lns.anim.layers.length - 1, 0, layer);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (layer) {\n\t\t\t\t\t\t\t\t\tif (layer.isInFrame(lns.anim.currentFrame)) {\n\t\t\t\t\t\t\t\t\t\tconst newLayer = layer.removeIndex(lns.anim.currentFrame);\n\t\t\t\t\t\t\t\t\t\tif (newLayer) {\n\t\t\t\t\t\t\t\t\t\t\tif (lns.anim.layers.indexOf(layer) == -1) {\n\t\t\t\t\t\t\t\t\t\t\t\tlns.anim.layers.splice(lns.anim.layers.length - 1, 0, layer);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tlns.ui.layers.remove(lns.anim.layers.indexOf(layer));\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tlns.ui.layers.update();\n\t\t\t\t\t\t}\n\t\t\t\t\t}), i);\n\t\t\t\t} else {\n\t\t\t\t\tif (inFrame) self.panel.drawings[i].on();\n\t\t\t\t\telse self.panel.drawings[i].off();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.clear = function() {\n\t\tself.panel.drawings.clear();\n\t};\n}","function Palette() {\n\tconst self = this;\n\tthis.palettes = {};\n\n\tthis.add = function() {\n\t\tlns.draw.reset();\n\t\tconst name = self.current = prompt('Name this palette.');\n\t\tif (name) {\n\t\t\tself.palettes[name] = {\n\t\t\t\tc: lns.draw.layer.c,\n\t\t\t\tn: lns.draw.layer.n,\n\t\t\t\tr: lns.draw.layer.r,\n\t\t\t\tw: lns.draw.layer.w,\n\t\t\t\tv: lns.draw.layer.v,\n\t\t\t\tlineWidth: lns.canvas.ctx.lineWidth,\n\t\t\t\tmouseInterval: lns.draw.mouseInterval,\n\t\t\t\tbrush: lns.draw.brush,\n\t\t\t\tbrushSpread: lns.draw.brushSpread,\n\t\t\t\tdots: lns.draw.dots,\n\t\t\t\tgrass: lns.draw.grass\n\t\t\t};\n\t\t\tself.addUI(name);\n\t\t}\n\t};\n\n\tthis.addUI = function(name) {\n\t\tself.panel.add(new UIButton({\n\t\t\ttext: name,\n\t\t\tcallback: function() {\n\t\t\t\tself.load(name);\n\t\t\t}\n\t\t}));\n\t};\n\n\tthis.setup = function(palettes) {\n\t\tfor (const key in palettes) {\n\t\t\tif (key != 'current') {\n\t\t\t\tself.addUI(key);\n\t\t\t\tself.palettes[key] = palettes[key];\n\t\t\t}\n\t\t}\n\t\tif (palettes.current) self.load(palettes.current);\n\t};\n\n\tthis.load = function(name) {\n\t\t/* this is crazy ... */\n\t\tlns.draw.reset();\n\t\tself.palettes.current = name;\n\n\t\tconst palette = self.palettes[name];\n\t\tfor (prop in palette) {\n\t\t\tif (lns.ui.faces[prop] !== undefined) {\n\t\t\t\tlns.ui.faces[prop].update(palette[prop]);\n\t\t\t} else {\n\t\t\t\tconsole.log(' no face', prop)\n\t\t\t}\n\t\t};\n\t};\n\n\tthis.buildFromAnimation = function() {\n\t\tfor (let i = 0; i < lns.anim.layers.length; i++) {\n\t\t\tconst name = `Layer ${i}`;\n\t\t\tconst layer = lns.anim.layers[i];\n\t\t\tself.palettes[name] = {\n\t\t\t\tc: layer.c,\n\t\t\t\tn: layer.n,\n\t\t\t\tr: layer.r,\n\t\t\t\tw: layer.w,\n\t\t\t\tv: layer.v,\n\t\t\t\tlineWidth: lns.canvas.ctx.lineWidth,\n\t\t\t\tmouseInterval: lns.draw.mouseInterval,\n\t\t\t\tbrush: 0,\n\t\t\t\tbrushSpread: lns.draw.brushSpread,\n\t\t\t\tdots: lns.draw.dots,\n\t\t\t\tgrass: lns.draw.grass\n\t\t\t};\n\t\t\tself.addUI(name);\n\t\t}\n\t};\n}","function Play() {\n\tconst self = this;\n\n\tthis.setFrame = function(f) {\n\t\tif (+f <= lns.anim.endFrame + 1 && +f >= 0) {\n\t\t\t// no before ?? \n\t\t\tlns.anim.frame = +f;\n\t\t\tlns.draw.layer.startFrame = lns.anim.currentFrame;\n\t\t\tlns.draw.layer.endFrame = lns.anim.currentFrame;\n\t\t\tlns.ui.update();\n\t\t}\n\t}; /* f key */\n\n\t// fix for playing animation with nothing in the final frame\n\tthis.checkEnd = function() {\n\t\tif (lns.anim.currentFrame == lns.anim.endFrame && \n\t\t\t!lns.draw.hasDrawing()) \n\t\t\tself.next(-1);\n\t};\n\n\t/* call before changing a frame */\n\tthis.next = function(dir) {\n\n\t\tconst next = lns.anim.currentFrame + dir;\n\t\t\n\t\tif (lns.anim.isPlaying) lns.ui.faces.play.update();\n\t\tlns.draw.isDrawing = false; /* prototype here with render, anim, draw, isActive or something ? */\n\t\t\n\t\tif (lns.draw.drawing.length > 0) {\n\t\t\t// drawing to save - can add frame\n\t\t\tlns.draw.reset(next);\n\t\t\tlns.anim.frame = next;\n\t\t} else {\n\t\t\t// put in reset? \n\t\t\tif (dir > 0) {\n\t\t\t\tif (lns.anim.currentFrame < lns.anim.state.end  || \n\t\t\t\t\t(lns.anim.stateName == 'default' && lns.draw.hasDrawing())) {\n\t\t\t\t\tlns.draw.layer.startFrame = next;\n\t\t\t\t\tlns.draw.layer.endFrame = next;\t\n\t\t\t\t\tlns.anim.frame = next;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (dir < 0 && lns.anim.currentFrame > lns.anim.state.start) {\n\t\t\t\tlns.draw.layer.startFrame = next;\n\t\t\t\tlns.draw.layer.endFrame = next;\n\t\t\t\tlns.anim.frame = next;\n\t\t\t}\n\t\t}\n\n\t\tlns.data.saveState();\n\t\tlns.ui.update();\n\t}; /* e/w key - got to next/previous frame */\n\n\tthis.plus = function() {\n\t\tself.setFrame(lns.anim.endFrame);\n\t\tself.next(1);\n\t}; /* + key */\n}","function setupAnimateInterface(ui) {\n\n\tui.toggleRL = function() {\n\t\tif (this.isOn) lns.canvas.canvas.parentElement.classList.add('right');\n\t\telse lns.canvas.canvas.parentElement.classList.remove('right');\n\t};\n\n\tui.cursorToggle = function() {\n\t\tif (lns.canvas.canvas.classList.contains('no-cursor')) \n\t\t\tlns.canvas.canvas.classList.remove('no-cursor');\n\t\telse \n\t\t\tlns.canvas.canvas.classList.add('no-cursor');\n\t};\n\n\tui.baseFontSize = 11; \n\tui.updateScale = function(n) {\n\t\tui.baseFontSize = +n;\n\t\tdocument.body.style.setProperty('--base-font-size', ui.baseFontSize);\n\t};\n\n\tui.updateFIO = function(data, params) {\n\n\t\tui.faces.title.value = lns.files.fileName.split('/').pop().replace('.json', '');\n\t\tui.faces.fps.value = data.fps;\n\n\t\tui.faces.width.value = data.w;\n\t\tui.faces.height.value = data.h;\n\n\t\tlns.anim.layers.forEach(layer => {\n\t\t\tif (layer) {\n\t\t\t\tui.faces.c.addColor(layer.c);\n\t\t\t\tui.faces.c.value = layer.c;\n\t\t\t}\n\t\t});\n\n\t\tif (data.bg) ui.faces.bgColor.value = data.bg;\n\t\tui.update();\n\t};\n\n\tui.update = function() {\n\t\tui.timeline.update();\n\t\tui.drawings.update();\n\t\tui.states.update(); \n\t};\n}\n","function States() {\n\tconst self = this;\n\n\t/* could be module, could be state ui class */\n\n\tthis.update = function() {\n\t\tfor (const key in lns.anim.states) {\n\t\t\tconst state = lns.anim.states[key];\n\t\t\tconst ui = self.panel[key] ? self.panel[key] : self.addUI(key, state, false);\n\t\t\tfor (const part in state) {\n\t\t\t\tif (ui[part].value != state[part])\n\t\t\t\t\tui[part].value = state[part];\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.addUI = function(name, state, focus) {\n\n\t\tconst row = self.panel.addRow(name);\n\t\tlns.anim.states[name] = state;\n\t\tlns.ui.faces.stateSelector.addOption(name);\n\n\t\tself.panel.add(new UILabel({\n\t\t\ttext: name\n\t\t}), row);\n\n\t\tself.panel.add(new UIBlur({\n\t\t\ttext: \"Start\",\n\t\t\tvalue: state.start,\n\t\t\tcallback: function(n) {\n\t\t\t\tstate.start = +n;\n\t\t\t}\n\t\t}), row, 'start');\n\n\t\tself.panel.add(new UIBlur({\n\t\t\ttext: \"End\",\n\t\t\tvalue: state.end,\n\t\t\tcallback: function(n) {\n\t\t\t\tstate.end = +n;\n\t\t\t}\n\t\t}), row, 'end');\n\n\t\tself.panel.add(new UIButton({\n\t\t\ttext: \"x\",\n\t\t\tcallback: function() {\n\t\t\t\tdelete lns.anim.states[name];\n\t\t\t\tself.panel.removeRow(row);\n\t\t\t\tlns.ui.faces.stateSelector.removeOption(name);\n\t\t\t\tlns.anim.state = 'default';\n\t\t\t\tlns.ui.faces.stateSelector.value = 'default';\n\t\t\t}\n\t\t}), row);\n\t\treturn row;\n\t};\n\n\tthis.set = function(state) {\n\t\tlns.anim.state = state;\n\t\tlns.ui.update();\n\t};\n\n\tthis.create = function() {\n\t\tconst name = prompt('Name?');\n\t\tself.addUI(name, { \n\t\t\tstart: lns.anim.currentFrame, \n\t\t\tend: lns.anim.currentFrame \n\t\t}, true);\n\t\tlns.anim.state = name;\n\t\tlns.ui.faces.stateSelector.value = name;\n\t};\n}","function Timeline() {\n\tconst self = this;\n\tthis.frameWidth = 40;\n\n\tthis.init = function() {\n\t\tself.panel.el.addEventListener('wheel', ev => {\n\t\t\tev.preventDefault();\n\t\t\tself.frameWidth += (ev.deltaY > 0 ? 1 : -1) * (ev.altKey ? 10 : 1);\n\t\t\tself.panel.timeline.setProp('--frame-width', self.frameWidth);\n\t\t});\n\n\t\tself.panel.el.addEventListener('mousedown', ev => {\n\t\t\tev.preventDefault();\n\t\t});\n\n\t\tself.panel.el.addEventListener('mouseup', ev => {\n\t\t\tev.preventDefault();\n\t\t});\n\n\t\tself.panel.el.addEventListener('mousemove', ev => {\n\t\t\tif (ev.which == 1 && ev.target.classList.contains('frame') && \n\t\t\t\tlns.anim.currentFrame != +ev.target.textContent) {\n\t\t\t\tlns.draw.reset();\n\t\t\t\tlns.ui.play.setFrame(+ev.target.textContent);\n\t\t\t\tlns.ui.update();\n\t\t\t}\n\t\t});\n\n\t\tself.panel.el.oncontextmenu = function() {\n  \t\t\treturn false;\n\t\t};\n\t};\n\n\tthis.fit = function() {\n\t\tconst f = lns.anim.endFrame + 1;\n\t\tconst w = lns.ui.timeline.panel.el.clientWidth - 11; /* 11 for padding */\n\t\tself.frameWidth = (w - 2 * f) / f; \n\t\tself.panel.timeline.setProp('--frame-width', self.frameWidth);\n\t};\n\n\tthis.update = function() {\n\n\t\tlns.ui.faces.frameDisplay.value = lns.anim.currentFrame; // eek\n\n\t\tself.panel.timeline.setProp('--num-frames', lns.anim.endFrame + 1);\n\t\tself.panel.timeline.setProp('--num-layers', lns.anim.layers.length - 1);\n\t\tself.panel.timeline.setProp('--num-tweens', lns.anim.layers.reduce((n, l) => n + l.t.length, 0));\n\n\t\tself.panel.timeline.clear();\n\n\t\tconst numFrames = lns.anim.endFrame + 1;\n\t\tfor (let i = 0; i < numFrames; i++) {\n\t\t\tconst frameBtn = new UIButton({\n\t\t\t\ttype: \"frame\",\n\t\t\t\ttext: `${i}`,\n\t\t\t\tcss: {\n\t\t\t\t\tgridColumnStart:  1 + (i * 2),\n\t\t\t\t\tgridColumnEnd:  3 + (i * 2)\n\t\t\t\t},\n\t\t\t\tclass: i == lns.anim.currentFrame ? 'current' : '',\n\t\t\t\tcallback: function() {\n\t\t\t\t\tlns.draw.reset();\n\t\t\t\t\tlns.ui.play.setFrame(i);\n\t\t\t\t\tlns.ui.update();\n\t\t\t\t}\t\n\t\t\t});\n\t\t\t// lns.ui.keys[i] = frameBtn;\n\t\t\tself.panel.timeline.append(frameBtn, `frm-${i}`);\n\t\t}\n\n\n\t\tlet gridRowStart = 2;\n\t\tlet gridRowEnd = 3;\n\t\tfor (let i = 0; i < lns.anim.layers.length - 1; i++) {\n\t\t\tconst layer = lns.anim.layers[i];\n\t\t\tif (layer.toggled) layer.toggle();  // for rebuilding interface cnstantly\n\t\t\tconst ui = new UILayer({\n\t\t\t\ttype: 'layer',\n\t\t\t\tcss: {\n\t\t\t\t\tgridRowStart: gridRowStart, // 2 + (i * 2),\n\t\t\t\t\tgridRowEnd: gridRowEnd, \t// 3 + (i * 2),\n\t\t\t\t\tgridColumnStart: layer.startFrame * 2 + 1,\n\t\t\t\t\tgridColumnEnd: layer.endFrame * 2 + 3\n\t\t\t\t},\n\t\t\t\tcallback: function() {\n\t\t\t\t\tlayer.toggle();\n\t\t\t\t\tlns.draw.setProperties(layer.props);\n\t\t\t\t}\n\t\t\t}, layer);\n\t\t\t\n\t\t\tgridRowStart += 2;\n\t\t\tgridRowEnd += 2;\n\t\t\tself.panel.timeline.append(ui, `layer-${i}`);\n\n\t\t\t/* add tweens */\n\t\t\tfor (let j = 0; j < layer.t.length; j++) {\n\t\t\t\tconst tween = layer.t[j]\n\t\t\t\tconst tweenUI = new UITween({\n\t\t\t\t\ttype: 'tween',\n\t\t\t\t\tcss: {\n\t\t\t\t\t\tgridRowStart: gridRowStart, \n\t\t\t\t\t\tgridRowEnd: gridRowEnd, \t\n\t\t\t\t\t\tgridColumnStart: tween.sf * 2 + 1,\n\t\t\t\t\t\tgridColumnEnd: tween.ef * 2 + 3\n\t\t\t\t\t},\n\t\t\t\t}, tween, layer);\n\t\t\t\t\n\t\t\t\tself.panel.timeline.append(tweenUI, `tween-${j}-layer-${i}`);\n\t\t\t\t\n\t\t\t\tgridRowStart += 2;\n\t\t\t\tgridRowEnd += 2;\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.toggleLayerView = function() {\n\t\tif (!self.panel.timeline.el.classList.contains('collapse')) {\n\t\t\tself.panel.timeline.addClass('collapse');\n\t\t} else {\n\t\t\tself.panel.timeline.removeClass('collapse');\n\t\t}\n\t};\n\n\tthis.split = function() {\n\t\tfor (let i = 0, len = lns.anim.layers.length - 1; i < len; i++) {\n\t\t\tconst layer = lns.anim.layers[i];\n\t\t\tif (layer.isInFrame(lns.anim.currentFrame)) {\n\t\t\t\t/* this is repeated in ui layer */\n\t\t\t\tconst newLayer = new Layer(_.cloneDeep(layer));\n\t\t\t\tnewLayer.startFrame = lns.anim.currentFrame + 1;\n\t\t\t\tlayer.endFrame = lns.anim.currentFrame;\n\t\t\t\t// this must be to put new layer in front of draw layer\n\t\t\t\tlns.anim.layers.splice(lns.anim.layers.length - 1, 0, newLayer); /* func ? */\n\t\t\t}\n\t\t}\n\t\tlns.ui.play.setFrame(lns.anim.currentFrame + 1);\n\t};\n\n\t// select in frame\n\tthis.select = function() {\n\t\tfor (let i = 0, len = lns.anim.layers.length - 1; i < len; i++) {\n\t\t\tconst layer = lns.anim.layers[i];\n\t\t\tif (layer.isInFrame(lns.anim.currentFrame)) {\n\t\t\t\tif (!layer.toggled) {\n\t\t\t\t\tself.panel.timeline[`layer-${i}`].toggle.handler(); // this is weird\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t// select all\n\tthis.selectAll = function() {\n\t\tconst allToggled = lns.anim.layers.filter(layer => layer.toggled).length == lns.anim.layers.length - 1;\n\t\t\n\t\tfor (let i = 0, len = lns.anim.layers.length - 1; i < len; i++) {\n\t\t\tconst layer = lns.anim.layers[i];\n\t\t\tif (allToggled && layer.toggled) {\n\t\t\t\tself.panel.timeline[`layer-${i}`].toggle.on();\n\t\t\t\tlns.anim.layers[i].toggle();\n\t\t\t} else if (!layer.toggled) {\n\t\t\t\tlns.anim.layers[i].toggle();\n\t\t\t\tself.panel.timeline[`layer-${i}`].toggle.off(); // this is weird\n\t\t\t}\n\t\t}\n\t};\n}","window.addEventListener(\"load\", function() {\n\n\twindow.lns = {};\n\n\t// modules\n\tlns.canvas = new Canvas(\"lines\", 512, 512, \"#ffffff\", true);\n\tlns.render = new Render(10); // (lps)\n\n\tlns.anim = new LnsAnim(lns.canvas.ctx);\n\n\tlns.draw = new Draw({ n: 2, r: 1, w: 1, v: 0.1, c: '#000000' }); // defaults\n\tlns.bgImage = new Background();\n\tlns.data = new Data(lns.anim);\n\tlns.files = new Files({\n\t\tfit: false, /* fit to canvas when saving */\n\t\tsave: false, /* save settings on unload  */\n\t\tload: true, /* load setttings after file load */\n\t\treload: false, /* confirm reload */\n\t\tbg: true /* bg color */\n\t});\n\t\n\tlns.ui = new Interface(lns);\n\tlns.ui.capture = new Capture();\n\tlns.ui.states = new States();\n\tlns.ui.palette = new Palette();\n\tlns.ui.drawings = new Drawings();\n\tlns.ui.play = new Play();\n\tlns.ui.timeline = new Timeline();\n\tsetupAnimateInterface(lns.ui);\n\tlns.ui.settings = new Settings(lns, 'lns', appSave);\n\n\tlns.ui.load('./interface/interface.json', function() {\n\t\tlns.draw.setDefaults();\n\t\tlns.ui.settings.load(appLoad);\n\t\tconst url = location.search.split('=')[1]\n\t\tif (url) lns.files.loadFile(url.split('.')[0], lns.ui.updateFIO);\n\t\tlns.ui.update();\n\t\tlns.render.start();\n\n\t\tlns.ui.timeline.init();\n\t});\n});\n\nfunction appSave() {\n\treturn {\n\t\tcanvasColor: lns.canvas.bgColor,\n\t\tlineWidth: lns.canvas.ctx.lineWidth,\n\t\tc: lns.draw.layer.c,\n\t\twidth: lns.canvas.width,\n\t\theight: lns.canvas.height,\n\t\tfps: lns.anim.fps,\n\t\tlps: lns.render.lps,\n\t\tonionSkinIsVisible: lns.render.onionSkinIsVisible,\n\t\tonionSkinNum: lns.render.onionSkinNum,\n\t\tmouseInterval: lns.draw.mouseInterval,\n\t\tpalettes: lns.ui.palette.palettes,\n\t\trl: lns.ui.faces.rl.value,\n\t\ttimelineView: lns.ui.faces.timelineView.value,\n\t\tcanvasScale: lns.ui.faces.canvasScale.value,\n\t\tinterfaceScale: lns.ui.faces.interfaceScale.value\n\t};\n}\n\nfunction appLoad(settings) {\n\n\t/* environment + ui + lns.anim */\n\tlns.ui.faces.lps.update(settings.lps);\n\n\t/* environment + ui */\n\tlns.ui.faces.onionSkinNum.update(settings.onionSkinNum);\n\tlns.ui.faces.mouseInterval.update(settings.mouseInterval);\n\tlns.ui.faces.width.update(settings.width);\n\tlns.ui.faces.height.update(settings.height);\n\tlns.ui.faces.bgColor.update(settings.canvasColor);\t\n\tlns.ui.faces.timelineView.update(settings.timelineView);\n\n\tlns.ui.faces.canvasScale.update(settings.canvasScale);\n\tlns.ui.faces.interfaceScale.update(settings.interfaceScale);\n\n\tlns.ui.faces.lineWidth.update(settings.lineWidth); // has to be called last bc of reset ... \n\n\t/* lns.anim + ui */\n\tlns.ui.faces.fps.update(settings.fps);\n\tlns.ui.faces.c.update(settings.c);\n\n\t// palettes - no need to separate module from ui bc its all ui \n\t// - only one not a ui with update ... \n\tlns.ui.palette.setup(settings.palettes);\n\n\t/* ui only */\n\tlns.ui.faces.rl.update(settings.rl);  // toggle not dependent on another value\n}\n"]}