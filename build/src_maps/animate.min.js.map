{"version":3,"sources":["background.js","canvas.js","data.js","draw.js","files.js","render.js","LnsAnim.js","layer.js","ui-layer.js","ui-tween.js","interface.js","settings.js","lines.js"],"names":["Background","self","this","show","img","Image","x","y","width","height","size","loadImage","url","src","onload","toggle","display","lns","canvas","ctx","drawImage","Canvas","id","_width","_height","color","checkRetina","document","getElementById","dpr","window","devicePixelRatio","scale","getContext","miterLimit","lineWidth","setBGColor","bgColor","style","backgroundColor","setLineWidth","n","setScale","setWidth","setHeight","reset","zoom","fitCanvasToDrawing","draw","tolerance","min","max","i","anim","layers","length","layer","drawing","drawings","d","j","point","Math","r","ui","faces","update","Data","copyFrame","pasteFrames","saveStates","current","undefined","prev","saveState","_","cloneDeep","undo","console","log","clear","copy","isInFrame","currentFrame","push","paste","addIndex","clearSelected","selectFrame","elem","classList","contains","splice","indexOf","textContent","remove","add","selectAll","someSelected","Array","from","frames","children","filter","looper","selectRange","start","prompt","end","copyFrameElems","getElementsByClassName","clearLines","clearLayers","removeIndex","cutTopLayer","cutBottomLayer","clearFrame","deleteFrame","_index","index","shiftIndex","deleteFrameRange","startFrame","endFrame","cutEnd","setFrame","cutLastSegment","cutLayerSegment","pop","cutLastLine","cutLayerLine","popOff","insert","args","len","dir","addLayer","frame","addMultipleCopies","play","next","offsetDrawing","offset","_layers","togs","some","toggled","Cool","Vector","explode","params","currentState","type","addTween","prop","sf","f","s","ef","e","sv","ev","mid","floor","Draw","defaults","Object","defineProperty","get","set","Layer","setProperties","props","setProperty","value","updateProperty","setDefaults","w","v","c","data","hasDrawing","brush","brushSpread","startDots","dots","grass","mouseTimer","performance","now","mouseInterval","isDrawing","outSideCanvas","toElement","addLine","round","offsetX","offsetY","addBrush","b","_y","origin","randomInt","dist","divide","points","which","render","isPlaying","altKey","abs","h","ratio","startX","endX","startY","endY","_x","PointerEvent","addEventListener","lastTouch","toucher","callback","preventDefault","touches","rect","target","getBoundingClientRect","targetTouches","pageX","left","scrollX","pageY","top","scrollY","Files","saveFilesEnabled","saveSettingsOnUnload","save","fileName","saveFile","checkEnd","title","fit","confirm","json","fps","bg","colors","map","Set","mc","single","clean","l","drawingIndexes","drawingIndex","includes","keys","states","default","jsonfile","JSON","stringify","blob","Blob","saveAs","loadFile","slice","fetch","then","response","loadJSON","catch","error","alert","message","loadData","reOpenFile","location","href","openFile","createElement","click","onchange","readFile","files","updateFIO","match","reader","FileReader","name","split","parse","result","readAsText","File","FileList","stopPropagation","dataTransfer","settings","saveSettings","reload","returnValue","Render","lps","interval","timer","onionSkinNum","onionSkinIsVisible","setOnionSkin","timeline","setLps","time","clearRect","capture","isVideo","fillStyle","fillRect","bgImage","temp","o","overrideProperty","cancelOverride","isCapturing","requestAnimFrame","LnsAnim","LinesAnimation","[object Object]","t","ws","resetTweens","pc","tween","UILayer","UICollection","super","addClass","UIToggle","text","edit","UIButton","modal","UIModal","position","newLayer","UIElement","class","UILabel","UIBlur","UISelect","options","selected","UIDragButton","num","right","append","html","el","UITween","Interface","app","uiTypes","UIRange","UIText","UITextRange","UIColor","UISelectButton","UIList","UIRow","body","mobilecheck","panels","keyDown","k","shiftKey","ctrlKey","key","activeElement","metaKey","handler","onPress","toolTip","appendChild","load","file","createPanel","addSelect","panelList","dock","btn","panel","UIPanel","label","uis","mod","sub","module","list","createUI","fromModule","number","row","addRow","face","Settings","appSave","p","open","isOpen","docked","isDocked","order","block","isBlock","headless","isHeadless","localStorage","appLoad","toggleSaveSettings","canvasColor","palettes","palette","rl","timelineView","canvasScale","interfaceScale","setup","Capture","States","Palette","Drawings","Play","Timeline","setupAnimateInterface","search","init"],"mappings":"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","file":"../animate.min.js","sourcesContent":["function Background() {\n\tconst self = this;\n\n\tthis.show = true;\n\tthis.img = new Image();\n\tthis.x = 0;\n\tthis.y = 0;\n\tthis.width = 0;\n\tthis.height = 0;\n\tthis.size = 1;\n\n\tthis.loadImage = function(url) {\n\t\tself.img.src = url;\n\t\tself.img.onload = function() {\n\t\t\tself.width = self.img.width;\n\t\t\tself.height = self.img.height;\n\t\t}\n\t};\n\n\t/* b key */\n\tthis.toggle = function() {\n\t\tself.show = !self.show;\n\t};\n\n\tthis.display = function() {\n\t\tif (this.img.src && this.show)\n\t\t\tlns.canvas.ctx.drawImage(this.img, this.x, this.y, this.size * this.width, this.height * this.size);\n\t};\n}","function Canvas(id, _width, _height, color, checkRetina) {\n\tconst self = this;\n\n\t/* width and height are pixel dimensions\n\t\tcanvas width and height are dependent on dpr */\n\tthis.canvas = document.getElementById(id); // lns.canvas.canvas is html elem\n\tthis.dpr = checkRetina ? window.devicePixelRatio || 1 : 1;\n\tthis.scale = 1;\n\n\tthis.ctx = this.canvas.getContext('2d');\n\tthis.ctx.miterLimit = 1;\n\tthis.lineWidth = 1; // to keep value from getting reset\n\n\tthis.setBGColor = function(color) {\n\t\tself.bgColor = color;\n\t\tself.canvas.style.backgroundColor = color;\n\t};\n\n\tthis.setBGColor(color);\n\n\tthis.setLineWidth = function(n) {\n\t\tself.ctx.lineWidth = self.lineWidth = +n;\n\t\tself.ctx.miterLimit = 1;\n\t};\n\n\tthis.setScale = function(n) {\n\t\tself.scale = +n;\n\t\tself.setWidth(self.width);\n\t\tself.setHeight(self.height);\n\t};\n\n\t/* update canvas width */\n\tthis.setWidth = function(width) {\n\t\tself.width = +width;\n\t\tself.canvas.width = +width * self.dpr * self.scale;\n\t\tself.reset();\n\t};\n\n\t/* update canvas height */\n\tthis.setHeight = function(height) {\n\t\tself.height = +height;\n\t\tself.canvas.height = +height * self.dpr * self.scale;\n\t\tself.reset();\n\t};\n\n\tthis.reset = function() {\n\t\t// https://www.html5rocks.com/en/tutorials/canvas/hidpi/\n\t\tself.ctx.scale(1, 1); // prevent multiple scales\n\t\tself.ctx.scale(this.dpr * self.scale, self.dpr * self.scale);\n\t\tself.canvas.style.zoom = 1 / self.dpr;\n\t\tself.ctx.lineWidth = self.lineWidth;\n\t\tself.ctx.miterLimit = 1;\n\t};\n\t\n\t/* set initial width and height */\n\tthis.setWidth(_width);\n\tthis.setHeight(_height);\n\n\t/* shift-f key */\n\tthis.fitCanvasToDrawing = function() {\n\t\tlns.draw.reset();\n\t\t\n\t\tlet tolerance = 0;\n\t\tlet min = { x: 10000, y: 10000 }; // min max size of canvas\n\t\tlet max = { x: 0, y: 0 };\n\n\t\tfor (let i = 0; i < lns.anim.layers.length; i++) {\n\t\t\tconst layer = lns.anim.layers[i];\n\t\t\tconst drawing = lns.anim.drawings[layer.d];\n\t\t\tfor (let j = 0; j < drawing.length; j++) {\n\t\t\t\tconst point = drawing[j];\n\t\t\t\tif (point != 'end') {\n\t\t\t\t\ttolerance = Math.max(tolerance, layer.r * 4); /* account for random jiggle */\n\t\t\t\t\tmin.x = Math.min(min.x, point.x + layer.x);\n\t\t\t\t\tmin.y = Math.min(min.y, point.y + layer.y);\n\t\t\t\t\tmax.x = Math.max(max.x, point.x + layer.x);\n\t\t\t\t\tmax.y = Math.max(max.y, point.y + layer.y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// example of this syntax being counter intuitive/annoying\n\t\tlns.ui.faces.width.update((max.x - min.x) + tolerance * 2);\n\t\tlns.ui.faces.height.update((max.y - min.y) + tolerance * 2);\n\n\t\tfor (let i = 0; i < lns.anim.layers.length - 1; i++) {\n\t\t\tlns.anim.layers[i].x -= min.x - tolerance > 0 ? min.x - tolerance : 0;\n\t\t\tlns.anim.layers[i].y -= min.y - tolerance > 0 ? min.y - tolerance : 0;\n\t\t}\n\t};\n}","function Data(anim) {\n\tconst self = this;\n\n\tthis.copyFrame = []; // copy layers in frame\n\tthis.pasteFrames = []; // frame indexes to paste\n\n\tthis.saveStates = {\n\t\tcurrent: {\n\t\t\tdrawings: undefined,\n\t\t\tlayers: undefined\n\t\t},\n\t\tprev: {\n\t\t\tdrawings: undefined,\n\t\t\tlayers: undefined\n\t\t}\n\t};\n\n\t/* save current state of frames and drawing - one undo */\n\tthis.saveState = function() {\n\t\t/*\n\t\t\tif save state already exists, save current to previous state\n\t\t\tif not save previous to new\n\t\t\talways save current to new\n\t\t*/\n\t\tif (self.saveStates.current.drawings) {\n\t\t\tself.saveStates.prev.drawings = _.cloneDeep(self.saveStates.current.drawings);\n\t\t\tself.saveStates.prev.layers = _.cloneDeep(self.saveStates.current.layers);\n\t\t} else {\n\t\t\tself.saveStates.prev.drawings = _.cloneDeep(anim.drawings);\n\t\t\tself.saveStates.prev.layers = _.cloneDeep(anim.layers);\n\t\t}\n\n\t\tself.saveStates.current.drawings = _.cloneDeep(anim.drawings);\n\t\tself.saveStates.current.layers = _.cloneDeep(anim.layers);\n\t};\n\n\t/* ctrl z - undo one save state */\n\tthis.undo = function() {\n\n\t\tif (self.saveStates.prev.drawings) {\n\t\t\tanim.drawings = _.cloneDeep(self.saveStates.prev.drawings);\n\t\t\tanim.layers = _.cloneDeep(self.saveStates.prev.layers);\n\t\t\t\n\t\t\tself.saveStates.current.drawings = _.cloneDeep(self.saveStates.prev.drawings);\n\t\t\tself.saveStates.current.layers = _.cloneDeep(self.saveStates.prev.layers);\n\n\t\t\tself.saveStates.prev.drawings = undefined;\n\t\t\tself.saveStates.prev.layers = undefined;\n\t\t} else {\n\t\t\tconsole.log(\"%c Can't undo \", \"color:lightblue;background:gray;\");\n\t\t}\n\n\t\t/* these functions just call one function, should just call directly .. but this is still being worked on*/\n\t\tlns.ui.drawings.clear();\n\t\tlns.ui.layers.clear();\n\t\tlns.ui.update();\n\t};\n\n\tthis.copy = function() {\n\t\tlns.draw.reset();\n\t\tself.copyFrame = [];\n\n\t\t// -1 dont copy draw frame \n\t\tfor (let i = 0; i < anim.layers.length - 1; i++) {\n\t\t\tif (anim.layers[i].isInFrame(anim.currentFrame))\n\t\t\t\tself.copyFrame.push(anim.layers[i]);\n\t\t}\n\t}; /* c key */\n\n\tthis.paste = function() {\n\t\tself.saveState();\n\n\t\tif (self.pasteFrames.length == 0)\n\t\t\tself.pasteFrames.push(anim.currentFrame); \n\n\t\t/* copy one frame onto multiple */\n\t\tfor (let i = 0; i < self.pasteFrames.length; i++) {\n\t\t\tfor (let j = 0; j < self.copyFrame.length; j++) {\n\t\t\t\tself.copyFrame[j].addIndex(self.pasteFrames[i]);\n\t\t\t}\n\t\t}\n\n\t\tself.clearSelected();\n\t\tlns.draw.reset();\n\t\tlns.ui.update();\n\t}; /* v key */\n\n\tthis.selectFrame = function(elem) {\n\t\tif (!elem.classList.contains(\"selected\")) {\n\t\t\telem.classList.add(\"selected\");\n\t\t\tself.pasteFrames.push(+elem.textContent);\n\t\t} else {\n\t\t\tself.pasteFrames.splice(self.pasteFrames.indexOf(+elem.textContent), 1);\n\t\t\telem.classList.remove(\"selected\");\n\t\t}\n\t};\n\n\tthis.selectAll = function() {\n\t\t/* if less than all are selected deselect those first */\n\t\tconst someSelected = Array.from(lns.ui.frames.children).filter(elem => elem.classList.contains('selected')).length < lns.ui.frames.children.length - 1;\n\t\tlns.ui.frames.looper(elem => {\n\t\t\tif (someSelected) elem.classList.remove('selected');\n\t\t\tself.selectFrame(elem);\n\t\t});\n\t}; /* shift v */\n\n\tthis.selectRange = function() {\n\t\tconst start = prompt(\"Start frame:\");\n\t\tconst end = prompt(\"end frame:\");\n\t\tlns.ui.frames.looper(elem => {\n\t\t\tself.selectFrame(elem);\n\t\t}, start, end);\n\t}; /* alt v */\n\n\tthis.clearSelected = function() {\n\t\tself.pasteFrames = [];\n\n\t\t/* this is a ui thing ... */\n\t\tconst copyFrameElems = document.getElementsByClassName(\"selected\");\n\t\tfor (let i = copyFrameElems.length - 1; i >= 0; i--) {\n\t\t\tcopyFrameElems[i].classList.remove(\"selected\");\n\t\t}\n\t}; /* ctrl v */\n\n\tthis.clearLines = function() {\n\t\tlns.draw.drawing = [];\n\t}; /* x key */\n\n\tthis.clearLayers = function() {\n\t\tself.saveState(); /* will save lines ... */\n\t\tfor (let i = anim.layers.length - 2; i >= 0; i--) {\n\t\t\tif (anim.layers[i].isInFrame(anim.currentFrame)) {\n\t\t\t\tconst layer = anim.layers[i].removeIndex(anim.currentFrame);\n\t\t\t\tif (!layer) lns.ui.layers.remove(i);\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.cutTopLayer = function() {\n\t\tfor (let i = anim.layers.length - 2; i >= 0; i--) {\n\t\t\tif (anim.layers[i].isInFrame(anim.currentFrame)) {\n\t\t\t\tconst layer = anim.layers[i].removeIndex(anim.currentFrame);\n\t\t\t\tif (!layer) lns.ui.layers.remove(i);\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}; /* ctrl - x */\n\n\tthis.cutBottomLayer = function() {\n\t\tfor (let i = 0; i < anim.layers.length; i++) {\n\t\t\tif (anim.layers[i].isInFrame(anim.currentFrame)) {\n\t\t\t\tconst layer = anim.layers[i].removeIndex(anim.currentFrame);\n\t\t\t\tif (!layer) lns.ui.layers.remove(i);\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}; /* alt - x */\n\n\tthis.clearFrame = function() {\n\t\tself.clearLines();\n\t\tself.clearLayers();\n\t};\t/* shift - x */\n\n\tthis.deleteFrame = function(_index) {\n\t\tconst index = _index !== undefined ? _index : lns.anim.currentFrame;\n\t\tself.saveState();\n\n\t\t// -2 to skip draw layer\n\t\tfor (let i = anim.layers.length - 2; i >= 0; i--) {\n\t\t\tlayer = anim.layers[i].shiftIndex(index, -1);\n\t\t\tif (!layer) lns.ui.layers.remove(i);\n\t\t}\n\t\tlns.ui.update();\n\t}; /* d key */\n\n\tthis.deleteFrameRange = function() {\n\t\tself.saveState();\n\t\tconst startFrame = +prompt(\"Start frame:\");\n\t\tconst endFrame = +prompt(\"End frame:\");\n\n\t\tif (endFrame > 0) {\n\t\t\tfor (let i = endFrame; i >= startFrame; i--) {\n\t\t\t\tself.deleteFrame(i);\n\t\t\t}\n\n\t\t\tlns.draw.cutEnd();\n\t\t\tlns.ui.setFrame(0);\n\t\t}\n\t}; /* shift-d */\n\n\tthis.cutLastSegment = function() {\n\t\tlns.ui.layers.cutLayerSegment();\n\t\tlns.draw.pop(); \n\t}; /* z key */\n\n\tthis.cutLastLine = function() {\n\t\tlns.ui.layers.cutLayerLine(); \n\t\tlns.draw.popOff();\n\t}; /* shift z */\n\n\tthis.insert = function(args) {\n\t\tlns.draw.reset();\n\t\tself.saveState();\n\t\tfor (let i = 0, len = anim.layers.length - 1; i < len; i++) {\n\t\t\t// insert before args.dir  0, after 1\n\t\t\tanim.layers[i].shiftIndex(anim.currentFrame + args.dir, 1);\n\t\t\tlns.anim.addLayer(anim.layers[i].removeIndex(anim.currentFrame + args.dir));\n\t\t\tanim.frame = anim.currentFrame + args.dir;\n\t\t}\n\t\tlns.ui.update();\n\t}; /* i, shift-i key */\n\n\tthis.addMultipleCopies = function() {\n\t\tself.copyFrame = [];\n\t\tself.clearSelected();\n\t\tlet n = +prompt(\"Number of copies: \");\n\t\tself.copy();\n\t\tif (n) {\n\t\t\tfor (let i = 0; i < n; i++) {\n\t\t\t\tlns.ui.play.next(1);\n\t\t\t\tself.paste();\n\t\t\t}\n\t\t}\n\t\tlns.ui.update();\n\t}; /* shift -c  */\n\n\tthis.offsetDrawing = function(offset) {\n\t\tlns.draw.reset();\n\t\tconst _layers = [];\n\t\tconst togs = lns.anim.layers.some(layer => { return layer.toggled });\n\t\tfor (let i = 0; i < anim.layers.length - 1; i++) {\n\t\t\tconst layer = anim.layers[i];\n\t\t\tif (layer.isInFrame(anim.currentFrame) && !togs || togs && layer.toggled) \n\t\t\t\t\t_layers.push(anim.layers[i]);\n\t\t}\n\t\tif (_layers) {\n\t\t\tself.saveState();\n\t\t\tif (!offset) offset = new Cool.Vector(+prompt(\"x\"), +prompt(\"y\"));\n\t\t\tif (offset) {\n\t\t\t\t// check to see if layers are selected\n\t\t\t\tlet layers = [];\n\t\t\t\tif (lns.ui.layers.length > 0) {\n\t\t\t\t\tfor (let i = 0; i < lns.ui.layers.length; i++) {\n\t\t\t\t\t\tif (lns.ui.layers[i].toggled)\n\t\t\t\t\t\t\tlayers.push(lns.ui.layers[i])\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlayers = _layers;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0; i < layers.length; i++) {\n\t\t\t\t\tlayers[i].x += offset.x;\n\t\t\t\t\tlayers[i].y += offset.y;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.log(\"%c No layers in frame \", \"color:yellow; background:black;\");\n\t\t}\n\t}; /* q key  */\n\n\tthis.explode = function(params) {\n\t\tlns.draw.reset();\n\t\tconst n = +prompt('Number of frames?');\n\t\tfor (let i = 0; i < anim.layers.length - 1; i++) {\n\t\t\tconst layer = anim.layers[i];\n\t\t\tif (layer.isInFrame(anim.currentFrame)) {\n\t\t\t\tlayer.endFrame = layer.startFrame + n;\n\t\t\t\tif (anim.currentState.end < layer.endFrame) anim.currentState.end = layer.endFrame;\n\t\t\t\tswitch(params.type) {\n\t\t\t\t\tcase \"Explode\":\n\t\t\t\t\t\tlayer.addTween({\n\t\t\t\t\t\t\tprop: 'e',\n\t\t\t\t\t\t\tsf: layer.f.s,\n\t\t\t\t\t\t\tef: layer.f.e,\n\t\t\t\t\t\t\tsv: 0,\n\t\t\t\t\t\t\tev: anim.drawings[layer.d].length\n\t\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Reverse\":\n\t\t\t\t\t\tlayer.addTween({\n\t\t\t\t\t\t\tprop: 's',\n\t\t\t\t\t\t\tsf: layer.f.s,\n\t\t\t\t\t\t\tef: layer.f.e,\n\t\t\t\t\t\t\tsv: 0,\n\t\t\t\t\t\t\tev: anim.drawings[layer.d].length\n\t\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"ExRev\":\n\t\t\t\t\t\tconst mid = Math.floor(n / 2);\n\t\t\t\t\t\tlayer.addTween({\n\t\t\t\t\t\t\tprop: 'e',\n\t\t\t\t\t\t\tsf: layer.f.s,\n\t\t\t\t\t\t\tef: layer.f.s + mid,\n\t\t\t\t\t\t\tsv: 0,\n\t\t\t\t\t\t\tev: anim.drawings[layer.d].length\n\t\t\t\t\t\t});\n\t\t\t\t\t\tlayer.addTween({\n\t\t\t\t\t\t\tprop: 's',\n\t\t\t\t\t\t\tsf: layer.f.s + mid,\n\t\t\t\t\t\t\tef: layer.f.e,\n\t\t\t\t\t\t\tsv: 0,\n\t\t\t\t\t\t\tev: anim.drawings[layer.d].length\n\t\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlns.ui.update();\n\t}; /* a key */\n}\n","function Draw(defaults) {\n\tconst self = this;\n\n\tObject.defineProperty(this, 'layer', {\n\t\tget: function() {\n\t\t\treturn lns.anim.layers[lns.anim.layers.length -1];\n\t\t}\n\t});\n\n\tObject.defineProperty(this, 'drawing', {\n\t\tget: function() {\n\t\t\treturn lns.anim.drawings[lns.anim.drawings.length - 1];\n\t\t},\n\t\tset: function(drawing) {\n\t\t\tlns.anim.drawings[lns.anim.drawings.length - 1] = drawing;\n\t\t}\n\t});\n\n\tlns.anim.drawings.push([]);\n\tlns.anim.layers.push(new Layer({ \n\t\t...defaults, \n\t\td: Math.max(lns.anim.drawings.length - 1, 0),  \n\t\tf: { s: lns.anim.currentFrame, e: lns.anim.currentFrame }\n\t}));\n\n\tthis.setProperties = function(props) {\n\t\tfor (const prop in props) {\n\t\t\tif (self.layer[prop] !== undefined) {\n\t\t\t\t// self.layer[prop] = props[prop];\n\t\t\t\tif (lns.ui) lns.ui.faces[prop].update(props[prop]);\n\t\t\t\t/* how to do this with ui, setter */\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.setProperty = function(value, args) {\n\t\tlns.anim.updateProperty(args.prop, value);\n\t\tself.layer[args.prop] = value;\n\t};\n\n\tthis.setDefaults = function() {\n\t\tself.setProperties(defaults);\n\t};\n\n\tthis.reset = function(f) {\n\t\tif (self.drawing.length > 0) {\n\t\t\tlns.anim.drawings.push([]);\n\t\t\t/* seems repetietive - settings class ... ? */\n\t\t\tlns.anim.layers.push(new Layer({ \n\t\t\t\tn: +lns.ui.faces.n.value,\n\t\t\t\tr: +lns.ui.faces.r.value,\n\t\t\t\tw: +lns.ui.faces.w.value,\n\t\t\t\tv: +lns.ui.faces.v.value,\n\t\t\t\tc: lns.ui.faces.c.value,\n\t\t\t\td: lns.anim.drawings.length - 1,  \n\t\t\t\tf: { s: +f || lns.anim.currentFrame, e: +f || lns.anim.currentFrame }\n\t\t\t}));\n\t\t\tlns.data.saveState();\n\t\t}\n\t\tlns.ui.update();\n\t}; /* r key */\n\n\tthis.cutEnd = function() {\n\t\t/* make sure draw layer doesn't extend to far */\n\t\tlet endFrame = 0;\n\t\tfor (let i = 0; i < lns.anim.layers.length - 1; i++) {\n\t\t\tconst layer = lns.anim.layers[i];\n\t\t\tif (layer.endFrame > endFrame) endFrame = layer.endFrame;\n\t\t}\n\t\tif (lns.draw.layer.endFrame > endFrame) \n\t\t\tlns.draw.layer.endFrame = endFrame;\n\t\t/* layer loop function?? its called forEach dumbass */\n\t};\n\n\tthis.hasDrawing = function() {\n\t\treturn lns.anim.layers.some(layer => {\n\t\t\treturn layer.isInFrame(lns.anim.currentFrame) && \n\t\t\t\tlns.anim.drawings[layer.d].length > 0; \n\t\t\t});\n\t};\n\n\tthis.brush = 0;\n\tthis.brushSpread = 1;\n\tthis.startDots = false;\n\tthis.dots = 10;\n\tthis.grass = 0;\n\n\t// how often the mousemove records, default 30ms\n\tthis.mouseTimer = performance.now();  //  independent of draw timer\n\tthis.mouseInterval = 30;\n\tthis.isDrawing = false; // for drawStart to drawEnd so its not always moving\n\n\tthis.outSideCanvas = function(ev) {\n\t\tif (ev.toElement != lns.canvas.canvas) {\n\t\t\tif (self.isDrawing) self.reset();\n\t\t\tself.isDrawing = false;\n\t\t}\n\t};\n\n\tthis.pop = function() {\n\t\tif (self.drawing.length > 0) {\n\t\t\tif (self.drawing.pop() == 'end')\n\t\t\t\tself.drawing.pop();\n\t\t\tself.drawing.push('end');\n\t\t}\n\t};\n\n\t/* could be drawing class */\n\tthis.popOff = function() {\n\t\tif (self.drawing.length > 0) {\n\t\t\tself.drawing.pop(); // remove end\n\t\t\tfor (let i = self.drawing.length - 1; i > 0; i--) {\n\t\t\t\tif (self.drawing[i] != 'end') self.drawing.pop();\n\t\t\t\telse break;\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.update = function(ev) {\n\t\tif (performance.now() > self.mouseInterval + self.mouseTimer) {\n\t\t\tself.mouseTimer = performance.now();\n\t\t\tif (self.isDrawing)\n\t\t\t\tif (self.brush <= 0)\n\t\t\t\t\tself.addLine(Math.round(ev.offsetX), Math.round(ev.offsetY));\n\t\t\t\telse\n\t\t\t\t\tself.addBrush(Math.round(ev.offsetX), Math.round(ev.offsetY));\n\t\t}\n\t};\n\n\tthis.addBrush = function(x, y) {\n\t\tconst b = self.brush * self.brush * self.brushSpread;\n\t\tlet _y = 1;\n\t\tif (self.grass > 0) _y *= self.grass;\n\t\tlet origin = new Cool.Vector(x, y);\n\t\tfor (let i = 0; i < self.brush; i++) {\n\t\t\tlet point = new Cool.Vector(x + Cool.randomInt(-b, b), y + Cool.randomInt(-b, b));\n\t\t\twhile (point.dist(origin) > b){\n\t\t\t\tpoint = new Cool.Vector(x + Cool.randomInt(-b, b), y + Cool.randomInt(-b, b));\n\t\t\t}\n\t\t\tpoint.divide(lns.canvas.scale);\n\t\t\tif (point.x > 0 && point.x < lns.canvas.width && \n\t\t\t\tpoint.y > 0 && point.y < lns.canvas.height) {\n\t\t\t\tself.drawing.push(point);\n\t\t\t}\n\t\t\tconst points = Cool.randomInt(1,3);\n\t\t\tfor (let i = 0; i < points; i ++) {\n\t\t\t\tif (point.x > 0 && point.x < lns.canvas.width && \n\t\t\t\t\tpoint.y > 0 && point.y < lns.canvas.height) {\n\t\t\t\t\tself.drawing.push(new Cool.Vector(\n\t\t\t\t\t\tpoint.x + Cool.randomInt(-1, 1),\n\t\t\t\t\t\tpoint.y + Cool.randomInt(_y)\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t}\n\t\t\tself.drawing.push('end');\n\t\t}\n\t}\n\n\tthis.addLine = function(x, y) {\n\t\tself.drawing.push(new Cool.Vector(x, y).divide(lns.canvas.scale));\n\t};\n\n\tthis.start = function(ev) {\n\t\tif (ev.which == 1 && !lns.render.isPlaying && !ev.altKey) {\n\t\t\tself.isDrawing = true;\n\t\t\tself.mouseTimer = performance.now();\n\t\t\tif (self.brush <= 0)\n\t\t\t\tself.addLine(Math.round(ev.offsetX), Math.round(ev.offsetY));\n\t\t\telse\n\t\t\t\tself.addBrush(Math.round(ev.offsetX), Math.round(ev.offsetY));\n\t\t} else if (ev.altKey) {\n\t\t\tself.startDots = new Cool.Vector(Math.round(ev.offsetX), Math.round(ev.offsetY));\n\t\t}\n\t};\n\n\tthis.end = function(ev) {\n\t\tif (self.startDots) {\n\t\t\tconst w = Math.abs(self.startDots.x - ev.offsetX);\n\t\t\tconst h = Math.abs(self.startDots.y - ev.offsetY);\n\t\t\tconst ratio =  w / h;\n\t\t\tconst c = w / (ratio * self.dots/2);\n\t\t\tconst r = h / (1/ratio * self.dots/2);\n\t\t\tlet [startX, endX] = self.startDots.x < ev.offsetX ? [self.startDots.x, ev.offsetX] : [ev.offsetX, self.startDots.x];\n\t\t\tlet [startY, endY] = self.startDots.y < ev.offsetY ? [self.startDots.y, ev.offsetY] : [ev.offsetY, self.startDots.y];\n\t\t\tfor (let x = startX; x < endX; x += c) {\n\t\t\t\tfor (let y = startY; y < endY; y += r) {\n\t\t\t\t\tconst _x = Math.round(x) + Cool.randomInt(-c/2, c/2);\n\t\t\t\t\tconst _y = Math.round(y) + Cool.randomInt(-r/2, r/2);\n\t\t\t\t\tconst points = Cool.randomInt(1,3);\n\t\t\t\t\tfor (let i = 0; i < points; i ++) {\n\t\t\t\t\t\tself.drawing.push(new Cool.Vector(\n\t\t\t\t\t\t\t_x + Cool.randomInt(-1, 1),\n\t\t\t\t\t\t\t_y + Cool.randomInt(-1, 1)\n\t\t\t\t\t\t));\n\t\t\t\t\t}\n\t\t\t\t\tself.drawing.push('end');\n\t\t\t\t}\n\t\t\t}\n\t\t\tself.startDots = false;\n\t\t} else if (ev.which == 1) {\n\t\t\tself.isDrawing = false;\n\t\t\t/* prevent saving single point drawing segments */\n\t\t\tif (self.drawing[self.drawing.length-2] != 'end' &&\n\t\t\t\tself.drawing.length > 1) {\n\t\t\t\tself.drawing.push(\"end\");\n\t\t\t} else {\n\t\t\t\tself.drawing.pop();\n\t\t\t}\n\t\t}\n\t}\n\n\tif (window.PointerEvent) {\n\t\tlns.canvas.canvas.addEventListener('pointermove', self.update);\n\t\tlns.canvas.canvas.addEventListener('pointerdown', self.start);\n\t\tlns.canvas.canvas.addEventListener('pointerup', self.end);\n\t} else {\n\t\tlns.canvas.canvas.addEventListener('mousemove', self.update);\n\t\tlns.canvas.canvas.addEventListener('mousedown', self.start);\n\t\tlns.canvas.canvas.addEventListener('mouseup', self.end);\n\n\t\tconst lastTouch = { which: 1 };\n\n\t\tfunction toucher(ev, callback) {\n\t\t\tev.preventDefault();\n\t\t\tif (ev.touches[0]) {\n\t\t\t\tconst rect = ev.target.getBoundingClientRect();\n\t\t\t\tlastTouch.offsetX = ev.targetTouches[0].pageX - rect.left - window.scrollX;\n\t\t\t\tlastTouch.offsetY = ev.targetTouches[0].pageY - rect.top - window.scrollY;\n\t\t\t\tlastTouch.which = 1;\n\t\t\t\tcallback(lastTouch);\n\t\t\t}\n\t\t}\n\n\t\t/* apple pencil - safari doesn't support pointer event */\n\t\tlns.canvas.canvas.addEventListener('touchstart', ev => {\n\t\t\ttoucher(ev, self.start);\n\t\t});\n\t\tlns.canvas.canvas.addEventListener('touchmove', ev => {\n\t\t\ttoucher(ev, self.update);\n\t\t});\n\t\tlns.canvas.canvas.addEventListener('touchend', ev => {\n\t\t\tself.end(lastTouch);\n\t\t});\n\t}\n\tdocument.addEventListener('mousemove', self.outSideCanvas);\n}\n","function Files(params) {\n\tconst self = this;\n\n\tthis.saveFilesEnabled = false;\n\tthis.saveSettingsOnUnload = params.save || false;\n\tthis.fileName = undefined;\n\n\t/* s key - shift-s for single */\n\tthis.saveFile = function(args, callback) {\n\n\t\tlns.draw.reset();\n\t\tlns.ui.play.checkEnd();\n\t\t\n\t\tlns.anim.drawings.pop();\n\t\tlns.anim.layers.pop();\n\n\t\tself.fileName = lns.ui.faces.title.value || prompt(\"Name this file:\");\n\n\t\tif (params.fit && confirm(\"Fit canvas?\"))\n\t\t\tlns.canvas.fitCanvasToDrawing();\n\n\t\tconst json = {};\n\t\tjson.v = \"2.4\";\n\t\tjson.w = +lns.canvas.width;\n\t\tjson.h = +lns.canvas.height;\n\t\tjson.fps = +lns.anim.fps;\n\t\tif (params.bg) json.bg = lns.canvas.bgColor;\n\t\tlet colors = lns.anim.layers.map(layer => layer.c);\n\t\tcolors = [...new Set(colors)];\n\t\tjson.mc = colors.length > 1 ? true : false;\n\n\t\t/* save current frame */\n\t\tlet layers = [];\n\t\tif (args.single) {\n\t\t\tfor (let i = 0; i < lns.anim.layers.length; i++) {\n\t\t\t\tif (lns.anim.layers[i].isInFrame(lns.anim.currentFrame)) {\n\t\t\t\t\tconst layer = _.cloneDeep(lns.anim.layers[i]);\n\t\t\t\t\tlayer.startFrame = 0;\n\t\t\t\t\tlayer.endFrame = 0;\n\t\t\t\t\tlayers.push(layer);;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tlayers = lns.anim.layers;\n\t\t}\n\n\t\tfor (let i = 0; i < layers.length; i++) {\n\t\t\tlayers[i].clean();\n\t\t}\n\t\tjson.l = layers;\n\n\t\t/* search frames for layers and drawings used */\n\t\tconst drawingIndexes = [];\n\t\tfor (let i = 0; i < layers.length; i++) {\n\t\t\tconst drawingIndex = layers[i].d;\n\t\t\tif (!drawingIndexes.includes(drawingIndex))\n\t\t\t\tdrawingIndexes.push(drawingIndex);\n\t\t}\n\n\t\tjson.d = [];\n\t\tfor (let i = 0; i < drawingIndexes.length; i++) {\n\t\t\tconst index = drawingIndexes[i];\n\t\t\tconst drawing = lns.anim.drawings[index];\n\t\t\tconst d = [];\n\t\t\tfor (let j = 0; j < drawing.length; j++) {\n\t\t\t\tconst point = drawing[j];\n\t\t\t\tif (point == 'end') d.push(0);\n\t\t\t\telse d.push([point.x, point.y]);\n\t\t\t}\n\t\t\tjson.d[index] = d;\n\t\t}\n\n\t\t/* don't save default state */\n\t\tif (Object.keys(lns.anim.states).length > 1) {\n\t\t\tjson.s = _.cloneDeep(lns.anim.states);\n\t\t\tdelete json.s.default;\n\t\t}\n\n\t\tconst jsonfile = JSON.stringify(json);\n\n\t\tif (self.fileName) {\n\t\t\tconst blob = new Blob([jsonfile], { type: \"application/x-download;charset=utf-8\" });\n\t\t\tsaveAs(blob, `${self.fileName}.json`);\n\t\t\tif (callback) callback(self.fileName); /* to set values ... */\n\t\t\t// lns.ui.updateFIO();\n\t\t\tlns.ui.faces.title.value = self.fileName;\n\t\t}\n\t};\n\n\t/* loads from src url */\n\tthis.loadFile = function(fileName, callback) {\n\t\tself.fileName = fileName;\n\t\tif (self.fileName) {\n\t\t\tif (self.fileName.slice(self.fileName.length - 5) != '.json') \n\t\t\t\tself.fileName += '.json';\n\t\t\tfetch(self.fileName)\n\t\t\t\t.then(response => { return response.json() })\n\t\t\t\t.then(data => { self.loadJSON(data, callback); })\n\t\t\t\t.catch(error => {\n\t\t\t\t\talert('File not found: ' + error.message);\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t});\n\t\t}\n\t};\n\n\tthis.loadJSON = function(data, callback) {\n\n\t\tlns.anim.drawings = [];\n\t\tlns.anim.layers = [];\n\t\tlns.anim.loadData(data, function() {\n\t\t\t// set layers to classes \n\t\t\tfor (let i = 0; i < data.l.length; i++) {\n\t\t\t\t// console.log(data.l[i])\n\t\t\t\tlns.anim.layers[i] = new Layer(data.l[i]);\n\t\t\t}\n\t\t\tlns.canvas.setWidth(data.w);\n\t\t\tlns.canvas.setHeight(data.h);\n\t\t\tlns.ui.faces.fps.update(data.fps);\n\t\t\tif (data.bg) lns.canvas.setBGColor(data.bg);\n\t\t\tlns.draw.reset(); \n\t\t\tif (callback) callback(data, params); \n\t\t});\n\t};\n\n\t/* shift o */\n\tthis.reOpenFile = function() {\n\t\tself.saveFile({}, function(fileName) {\n\t\t\tlocation.href += `?src=/${ prompt(\"Enter location:\") }/${ fileName }.json`;\n\t\t});\n\t};\n\n\t/* o key */\n\tthis.openFile = function() {\n\t\tconst openFile = document.createElement('input');\n\t\topenFile.type = \"file\";\n\t\topenFile.click();\n\t\topenFile.onchange = function() {\n\t\t\tself.readFile(openFile.files, lns.ui.updateFIO);\n\t\t};\n\t};\n\n\tthis.readFile = function(files, callback) {\n\t\tfor (let i = 0, f; f = files[i]; i++) {\n\t\t\tif (!f.type.match('application/json')) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst reader = new FileReader();\n\t\t\treader.onload = (function(theFile) {\n\t\t\t\treturn function(e) {\n\t\t\t\tself.fileName = f.name.split('.')[0];\n\t\t\t\tself.loadJSON(JSON.parse(e.target.result), callback);\n\t\t\t};\n\t\t\t})(f);\n\t\t\treader.readAsText(f);\n\t\t}\n\t};\n\n\tif (window.File && window.FileReader && window.FileList && window.Blob) {\n\t\tself.saveFilesEnabled = true;\n\t\tconsole.log(\"%c Save file enabled \", \"color:lightgreen;background:black;\");\n\t\tlns.canvas.canvas.addEventListener('dragover', dragOverHandler);\n\t\tlns.canvas.canvas.addEventListener('drop', dropHandler);\n\t\t// https://gist.github.com/andjosh/7867934\n\t}\n\n\tfunction dropHandler(ev) {\n \t\tev.preventDefault();\n \t\tev.stopPropagation();\n \t\tself.readFile(ev.dataTransfer.files, lns.ui.updateFIO);\n\t}\n\n\tfunction dragOverHandler(ev) {\n\t\tev.preventDefault();\n\t}\n\n\twindow.addEventListener(\"beforeunload\", function(ev) {\n\t\tif (self.saveSettingsOnUnload) lns.ui.settings.saveSettings();\n\t\tif (params.reload) ev.returnValue = 'Did you save dumbhole?';\n\t});\n}\n","function Render(lps, color) {\n\tconst self = this;\n\n\tthis.lps = lps || 12; // lines per second all the time\n\tthis.interval = 1000 / this.lps;  // fps per one second, the line interval\n\tthis.timer = performance.now();\n\n\tthis.onionSkinNum = 0;\n\tthis.onionSkinIsVisible = false;\n\n\t/* l key */\n\tthis.setOnionSkin = function(n) {\n\t\tself.onionSkinNum = +n;\n\t\tself.onionSkinIsVisible = +n > 0 ? true : false;\n\t};\n\n\t/* just set drawing back to 0 but might do other things */\n\tthis.reset = function() {\n\t\tlns.anim.frame = 0;\n\t\tlns.anim.isPlaying = false;\n\t\tlns.canvas.ctx.miterLimit = 1; /* maybe not needed? happens in canvas reset*/\n\t\tlns.ui.update();\n\t};\n\n\t/* toggle play animation */\n\tthis.toggle = function() {\n\t\tif (!lns.anim.isPlaying) {\n\t\t\tlns.ui.play.checkEnd();\n\t\t\tlns.ui.timeline.update();\n\t\t}\n\t\tlns.anim.isPlaying = !lns.anim.isPlaying;\n\t};\n\n\t/* ' - lps is property of render engine, not individual animations */\n\tthis.setLps = function(lps) {\n\t\tself.lps = +lps;\n\t\tself.interval = 1000 / self.lps;\n\t\tlns.anim.lps = self.lps;\n\t};\n\n\tthis.update = function(time) {\n\t\tif (performance.now() > self.interval + self.timer || time == 'cap') {\n\t\t\tself.timer = performance.now();\n\n\t\t\t// what actually need to be update here ?\n\t\t\tif (lns.anim.isPlaying) lns.ui.timeline.update(); \n\n\t\t\tlns.canvas.ctx.clearRect(0, 0, lns.canvas.width, lns.canvas.height);\n\n\t\t\t/* in capture set animation onDraw */\n\t\t\tif (lns.ui.capture.bg && (lns.ui.capture.frames > 0 || lns.ui.capture.isVideo)) {\n\t\t\t\tlns.canvas.ctx.fillStyle = lns.canvas.bgColor;\n\t\t\t\tlns.canvas.ctx.fillRect(0, 0, lns.canvas.width, lns.canvas.height);\n\t\t\t}\n\n\t\t\tlns.bgImage.display();\n\n\t\t\tif (self.onionSkinNum > 0 && self.onionSkinIsVisible) {\n\t\t\t\tconst temp = lns.anim.currentFrame;\n\t\t\t\tfor (let o = 1; o <= self.onionSkinNum; o++){\n\t\t\t\t\tconst index = temp - o;\n\t\t\t\t\tif (index >= 0) {\n\t\t\t\t\t\tconst color = `rgba(105,150,255,${ 1.5 - (o / self.onionSkinNum) })`;\n\t\t\t\t\t\tlns.anim.currentFrame = index;\n\t\t\t\t\t\tlns.anim.overrideProperty('c', color);\n\t\t\t\t\t\tlns.anim.draw();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlns.anim.cancelOverride();\n\t\t\t\tlns.anim.currentFrame = temp;\n\t\t\t}\n\n\t\t\t/* draw before update is cool for now ... */\n\t\t\tlns.anim.draw();\n\t\t\tlns.anim.update();\n\t\t}\n\t\tif (!lns.ui.capture.isCapturing) \n\t\t\twindow.requestAnimFrame(self.update);\n\t};\n\n\tthis.start = function() {\n\t\twindow.requestAnimFrame(self.update);\n\t};\n}","class LnsAnim extends LinesAnimation {\n\t\n\tupdateProperty(prop, value) {\n\t\t/* args from ui */\n\t\tfor (let i = 0; i < this.layers.length - 1; i++) {\n\t\t\tif (this.layers[i].toggled) this.layers[i][prop] = value;\n\t\t}\n\t}\n\n\taddLayer(layer) {\n\t\t// add before draw layer\n\t\tif (this.layers.indexOf(layer) == -1)\n\t\t\tthis.layers.splice(lns.anim.layers.length - 1, 0, layer);\n\t}\n\n}","class Layer {\n\tconstructor(params) {\n\t\tthis.d =  params.d;\n\t\tthis.x =  params.x || 0;\n\t\tthis.y =  params.y || 0;\n\t\tthis.f =  params.f;\n\t\tthis.t =  params.t || [];\n\t\tthis.n =  params.n;\n\t\tthis.r =  params.r;\n\t\tthis.w =  params.w;\n\t\tthis.v =  params.v;\n\t\tthis.c =  params.c;\n\t\tthis.ws = params.ws || false; // wiggle segments \n\n\t\tthis.toggled = false;\n\t\tthis.resetTweens();\n\t}\n\n\tclean() {\n\t\tdelete this.toggled;\n\t\tdelete this.pc;\n\t}\n\n\ttoggle() {\n\t\tif (!this.toggled) {\n\t\t\tthis.pc = this.c;\n\t\t\tthis.c = \"#00CC96\";\n\t\t} else if (this.c == \"#00CC96\") {\n\t\t\tthis.c = this.pc;\n\t\t}\n\t\tthis.toggled = !this.toggled;\n\t}\n\n\tremove() {\n\t\tlns.anim.layers.splice(lns.anim.layers.indexOf(this), 1);\n\t}\n\n\taddTween(tween) {\n\t\tthis.t.push(tween);\n\t\tif (tween.sf < this.startFrame) this.startFrame = tween.sf;\n\t\tif (tween.ef > this.endFrame) this.endFrame = tween.ef;\n\t}\n\n\tget startFrame() {\n\t\treturn this.f.s;\n\t}\n\n\tset startFrame(f) {\n\t\tthis.f.s = Math.max(0, +f);\n\t\tthis.resetTweens();\n\t}\n\n\tget endFrame() {\n\t\treturn this.f.e;\n\t}\n\n\tset endFrame(f) {\n\t\tthis.f.e = Math.max(0, +f);\n\t\tthis.resetTweens();\n\t}\n\n\taddIndex(index) {\n\t\tif (!this.isInFrame(index)) {\n\t\t\tif (this.f.s - 1 == index) this.f.s -= 1;\n\t\t\telse if (this.f.e + 1 == index) this.f.e += 1;\n\t\t\telse {\n\t\t\t\treturn new Layer({\n\t\t\t\t\t...this,\n\t\t\t\t\tf: { s: index, e: index }\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tremoveIndex(index) {\n\t\tif (this.startFrame == index && this.endFrame == index) return undefined;\n\t\telse if (this.startFrame == index) this.startFrame += 1;\n\t\telse if (this.endFrame == index) this.endFrame -= 1;\n\t\telse if (index > this.startFrame && index < this.endFrame) {\n\t\t\tconst layer = _.cloneDeep(this);\n\t\t\tlayer.startFrame = index + 1;\n\t\t\tlayer.endFrame = this.endFrame;\n\t\t\tlayer.resetTweens();\n\n\t\t\tthis.endFrame = index - 1;\n\t\t\tthis.resetTweens();\n\n\t\t\treturn layer;\n\t\t}\n\t\t\n\t\tthis.resetTweens();\n\t\treturn this; // when is this used ? \n\t}\n\n\tshiftIndex(index, n) {\n\t\tconsole.log(index, n);\n\t\tif (!n) n = -1;\t/* n is shift num, negative or positive */\n\n\t\t/* what about insert ... i dont get this ... shift should not delete right */\n\t\t// if (this.startFrame == index)\n\t\t\t// return this.removeIndex(index);\n\n\t\tif (this.startFrame >= index) this.startFrame += n;\n\t\tif (this.endFrame >= index) this.endFrame += n;\n\n\t\tthis.resetTweens(); // can i check this somewhere else ? \n\t\treturn this;\n\t}\n\n\tisInFrame(index) {\n\t\tif (lns.anim.layers.indexOf(this) == -1) return false\n\t\telse if (index >= this.f.s && index <= this.f.e) return true;\n\t\telse return false;\n\t}\n\n\tget props() {\n\t\treturn {\n\t\t\tn: this.n,\n\t\t\tr: this.r,\n\t\t\tw: this.w,\n\t\t\tv: this.v\n\t\t}\n\t}\n\n\tresetTweens() {\n\t\tfor (let i = 0; i < this.t.length; i++) {\n\t\t\tconst tween = this.t[i];\n\t\t\tif (tween.sf < this.startFrame) tween.sf = this.startFrame;\n\t\t\tif (tween.ef > this.endFrame) tween.ef = this.endFrame;\n\t\t}\n\t}\n}","class UILayer extends UICollection {\n\tconstructor(params, layer) {\n\t\tsuper(params);\n\t\tthis.addClass('layer');\n\t\tthis.layer = layer;\n\n\t\tthis.toggle = new UIToggle({\n\t\t\ttype: 'layer-toggle',\n\t\t\ttext: `${layer.d}`,\n\t\t\tcallback: params.callback\n\t\t});\n\n\t\tthis.edit = new UIButton({\n\t\t\ttype: 'layer-edit',\n\t\t\ttext: \"✎\",\n\t\t\tcallback: () => {\n\t\t\t\tconst modal = new UIModal('Edit Layer', lns, this.position, () => {\n\t\t\t\t\tthis.update();\n\t\t\t\t\tlns.ui.update();\n\t\t\t\t});\n\n\t\t\t\tmodal.add(new UIButton({ \n\t\t\t\t\ttext: \"Cut Segment\",\n\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\tconst drawing = lns.anim.drawings[layer.d];\n\t\t\t\t\t\tdrawing.pop(); /* remove \"end\" */\n\t\t\t\t\t\tdrawing.pop(); /* remove segment */\n\t\t\t\t\t\tdrawing.push('end'); /* new end */\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tmodal.add(new UIButton({\n\t\t\t\t\ttext: \"Cut Line\",\n\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\tconst drawing = lns.anim.drawings[layer.d];\n\t\t\t\t\t\tdrawing.pop(); /* remove \"end\" */\n\t\t\t\t\t\tfor (let i = drawing.length - 1; i > 0; i--) {\n\t\t\t\t\t\t\tif (drawing[i] != 'end') drawing.pop();\n\t\t\t\t\t\t\telse break;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tmodal.add(new UIButton({\n\t\t\t\t\ttext: \"Clone\",\n\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\tconst newLayer = new Layer(_.cloneDeep(layer));\n\t\t\t\t\t\tnewLayer.startFrame = newLayer.endFrame = layer.endFrame + 1;\n\t\t\t\t\t\tlns.anim.layers.splice(lns.anim.layers.length - 1, 0, newLayer);\n\t\t\t\t\t\tlns.ui.play.setFrame(layer.endFrame + 1);\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tmodal.add(new UIButton({\n\t\t\t\t\ttext: \"Split\",\n\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\tconst newLayer = new Layer(_.cloneDeep(layer));\n\t\t\t\t\t\tnewLayer.startFrame = lns.anim.currentFrame + 1;\n\t\t\t\t\t\tlayer.endFrame = lns.anim.currentFrame;\n\t\t\t\t\t\tlns.anim.layers.splice(lns.anim.layers.length - 1, 0, newLayer);\n\t\t\t\t\t\tlns.ui.play.setFrame(layer.endFrame + 1);\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tmodal.add(new UIElement({class: 'break'}));\n\t\t\t\tmodal.add(new UILabel({ text: \"Start Frame:\"}));\n\t\t\t\tmodal.add(new UIBlur({\n\t\t\t\t\tvalue: layer.startFrame,\n\t\t\t\t\tcallback: function(value) {\n\t\t\t\t\t\tlayer.startFrame = +value;\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tmodal.add(new UIElement({class: 'break'}));\n\t\t\t\tmodal.add(new UILabel({ text: \"End Frame:\"}));\n\t\t\t\tmodal.add(new UIBlur({\n\t\t\t\t\tvalue: layer.endFrame,\n\t\t\t\t\tcallback: function(value) {\n\t\t\t\t\t\tlayer.endFrame = +value;\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\t\t});\n\n\t\tthis.tween = new UIButton({\n\t\t\ttext: \"⧉\",\n\t\t\ttype: 'layer-tween',\n\t\t\tcallback: () => {\n\t\t\t\t\n\t\t\t\tconst tween = {\n\t\t\t\t\tprop: 'e',\n\t\t\t\t\tsf: lns.anim.currentFrame,\n\t\t\t\t\tef: lns.anim.currentFrame + 10,\n\t\t\t\t\tsv: 0,\n\t\t\t\t\tev: 'end'\n\t\t\t\t};\n\n\t\t\t\tconst modal = new UIModal('Add Tween', lns, this.position, function() {\n\t\t\t\t\ttween.ev = lns.anim.drawings[layer.d].length;\n\t\t\t\t\tlayer.addTween(tween);\n\t\t\t\t\tlns.ui.update();\n\t\t\t\t});\n\n\t\t\t\tmodal.add(new UILabel({ text: 'Property:' }));\n\t\t\t\tmodal.add(new UISelect({\n\t\t\t\t\toptions: ['e', 's', 'n', 'r', 'w', 'v', 'x', 'y'],\n\t\t\t\t\tvalue: 'e',\n\t\t\t\t\tselected: 'e',\n\t\t\t\t\tcallback: function(value) {\n\t\t\t\t\t\ttween.prop = value;\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tmodal.add(new UILabel({ text: 'Start Frame:' }));\n\t\t\t\tmodal.add(new UIBlur({\n\t\t\t\t\tvalue: tween.sf,\n\t\t\t\t\tcallback: function(value) {\n\t\t\t\t\t\ttween.sf = +value;\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tmodal.add(new UILabel({ text: 'End Frame:' }));\n\t\t\t\tmodal.add(new UIBlur({\n\t\t\t\t\tvalue: tween.ef,\n\t\t\t\t\tcallback: function(value) {\n\t\t\t\t\t\ttween.ef = +value;\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tmodal.add(new UILabel({ text: 'Start Value:' }));\n\t\t\t\tmodal.add(new UIBlur({\n\t\t\t\t\tvalue: tween.sv,\n\t\t\t\t\tcallback: function(value) {\n\t\t\t\t\t\ttween.sv = +value;\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tmodal.add(new UILabel({ text: 'End Value:' }));\n\t\t\t\tmodal.add(new UIBlur({\n\t\t\t\t\tvalue: tween.ev,\n\t\t\t\t\tcallback: function(value) {\n\t\t\t\t\t\ttween.ev = +value;\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\t\t});\n\n\t\tthis.remove = new UIButton({\n\t\t\ttype: 'remove',\n\t\t\ttext: '🗑',\n\t\t\tcallback: () => {\n\t\t\t\tlns.anim.layers.splice(lns.anim.layers.indexOf(this), 1);\n\t\t\t\tlns.ui.update();\n\t\t\t}\n\t\t});\n\n\t\tthis.left = new UIDragButton({\n\t\t\ttext: '⬗',\n\t\t\ttype: 'left',\n\t\t\tcallback: (dir, num) => {\n\t\t\t\tlayer.startFrame += (dir ? dir : -1) * (num ? num : 1);\n\t\t\t\tthis.update();\n\t\t\t\tlns.ui.update();\n\t\t\t}\t\t\n\t\t});\n\n\t\tthis.right = new UIDragButton({\n\t\t\ttext: '⬖',\n\t\t\ttype: 'right',\n\t\t\tcallback: (dir, num) => {\n\t\t\t\tconsole.log(dir, num);\n\t\t\t\tlayer.endFrame += (dir ? dir : 1) * (num ? num : 1);\n\t\t\t\tthis.update();\n\t\t\t\tlns.ui.update();\n\t\t\t}\t\t\n\t\t});\n\n\t\tthis.append(this.toggle);\n\t\tthis.append(this.edit);\n\t\tthis.append(this.tween);\n\t\tthis.append(this.remove);\n\t\tthis.append(this.left);\n\t\tthis.append(this.right);\n\t}\n\n\tget html() {\n\t\treturn this.el;\n\t}\n}","class UITween extends UICollection {\n\tconstructor(params, tween, layer) {\n\t\tsuper(params);\n\t\tthis.addClass('tween');\n\t\tthis.tween = tween;\n\n\t\tthis.edit = new UIButton({\n\t\t\ttext: '✎',\n\t\t\ttype: 'tween-edit',\n\t\t\tcallback: () => {\n\t\t\t\tconst modal = new UIModal('Edit Tween', lns, this.position, function() {\n\t\t\t\t\tlns.ui.update();\n\t\t\t\t});\t\n\n\t\t\t\t/* not DRY maybe make an animate class tween-modal */\n\n\t\t\t\tmodal.add(new UILabel({ text: 'Start Frame:' }));\n\t\t\t\tmodal.add(new UIBlur({\n\t\t\t\t\tvalue: tween.sf,\n\t\t\t\t\tcallback: function(value) {\n\t\t\t\t\t\ttween.sf = +value;\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tmodal.add(new UILabel({ text: 'End Frame:' }));\n\t\t\t\tmodal.add(new UIBlur({\n\t\t\t\t\tvalue: tween.ef,\n\t\t\t\t\tcallback: function(value) {\n\t\t\t\t\t\tconsole.log(tween);\n\t\t\t\t\t\ttween.ef = +value;\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tmodal.add(new UILabel({ text: 'Start Value:' }));\n\t\t\t\tmodal.add(new UIBlur({\n\t\t\t\t\tvalue: tween.sv,\n\t\t\t\t\tcallback: function(value) {\n\t\t\t\t\t\ttween.sv = +value;\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tmodal.add(new UILabel({ text: 'End Value:' }));\n\t\t\t\tmodal.add(new UIBlur({\n\t\t\t\t\tvalue: tween.ev,\n\t\t\t\t\tcallback: function(value) {\n\t\t\t\t\t\ttween.ev = +value;\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\t\t});\n\n\t\tthis.left = new UIDragButton({\n\t\t\ttext: '⬗',\n\t\t\ttype: 'left',\n\t\t\tcallback: (dir, num) => {\n\t\t\t\ttween.sf += (dir ? dir : -1) * (num ? num : 1);\n\t\t\t\tlns.ui.update();\n\t\t\t}\t\t\n\t\t});\n\n\t\tthis.right = new UIDragButton({\n\t\t\ttext: '⬖',\n\t\t\ttype: 'right',\n\t\t\tcallback: (dir, num) => {\n\t\t\t\tthis.tween.ef += (dir ? dir : 1) * (num ? num : 1);\n\t\t\t\tlns.ui.update();\n\t\t\t}\t\t\n\t\t});\n\n\t\tthis.remove = new UIButton({\n\t\t\ttype: 'remove',\n\t\t\ttext: '🗑',\n\t\t\tcallback: () => {\n\t\t\t\tlayer.t.splice(layer.t.indexOf(this), 1);\n\t\t\t\tlns.ui.update();\n\t\t\t}\n\t\t});\n\n\t\tthis.append(this.edit);\n\t\tthis.append(this.remove);\n\t\tthis.append(this.left);\n\t\tthis.append(this.right);\n\t}\n\n\tget html() {\n\t\treturn this.el;\n\t}\n\n}","function Interface(app) {\n\tconst self = this;\n\tconst uiTypes = {\n\t\tUILabel,\n\t\tUIElement,\n\t\tUIRange,\n\t\tUIText,\n\t\tUIBlur,\n\t\tUITextRange,\n\t\tUIToggle,\n\t\tUIButton,\n\t\tUIColor,\n\t\tUISelect,\n\t\tUISelectButton,\n\t\tUICollection,\n\t\tUIList,\n\t\tUIRow\n\t};\n\tdocument.body.classList.add(Cool.mobilecheck() ? 'mobile' : 'desktop');\n\n\tthis.keys = {};\n\tthis.faces = {}; /* references to faces we need to update values ???  */\n\tthis.panels = new UICollection({ id: \"panels\" });\n\n\t/* key commands */\n\tthis.keyDown = function(ev) {\n\t\tlet k = Cool.keys[ev.which];\n\t\tif (k == \"space\") ev.preventDefault();\n\t\tk = ev.shiftKey ? \"shift-\" + k : k\n\t\tk = ev.ctrlKey ? \"ctrl-\" + k : k;\n\t\tk = ev.altKey ? \"alt-\" + k : k;\n\n\t\tconst key = self.keys[k];\n\n\t\tif (k && key && \n\t\t\tdocument.activeElement.type != \"text\" && \n\t\t\t!ev.metaKey) {\n\t\t\tev.preventDefault();\n\t\t\tkey.handler(ev, key);\n\t\t\tkey.onPress(true);\n\t\t}\n\t};\n\tdocument.addEventListener(\"keydown\", self.keyDown, false);\n\n\twindow.toolTip = new UILabel({id: 'tool-tip'});\n\tdocument.getElementById('interface').appendChild(window.toolTip.el);\n\n\tthis.load = function(file, callback) {\n\t\tfetch(file)\n\t\t\t.then(response => { return response.json(); })\n\t\t\t.then(data => {\n\t\t\t\tfor (const key in data) {\n\t\t\t\t\tself.createPanel(key, data[key]);\n\t\t\t\t}\n\n\t\t\t\tthis.addSelect(Object.keys(data));\n\t\t\t\t// self.settings.load();\n\t\t\t\tif (callback) callback();\n\t\t\t});\n\t};\n\n\tthis.addSelect = function(panelList) {\n\t\tconst selector = new UICollection({id: 'selector'});\n\t\tselector.append(new UISelectButton({\n\t\t\toptions: panelList,\n\t\t\tcallback: function(value) {\n\t\t\t\tself.panels[value].dock();\n\t\t\t},\n\t\t\tbtn: '+'\n\t\t}));\n\t};\n\n\tthis.createPanel = function(key, data) {\n\t\t\n\t\tconst panel = new UIPanel(key, data.label);\n\t\tthis.panels.append(panel, key);\n\t\t\n\t\tfor (let i = 0; i < data.uis.length; i++) {\n\t\t\tconst uis = data.uis[i];\n\t\t\tconst mod = uis.sub ? app[uis.module][uis.sub] : app[uis.module];\n\t\t\tfor (let j = 0; j < uis.list.length; j++) {\n\t\t\t\tself.createUI(uis.list[j], mod, panel);\n\t\t\t}\n\t\t\tif (uis.module == 'ui' && uis.sub) \n\t\t\t\tapp.ui[uis.sub].panel = panel;\n\t\t}\n\t};\n\n\tthis.createUI = function(data, module, panel) {\n\n\t\tconst params = { ...data.params };\n\t\tif (data.key) params.key = data.key;\n\n\t\t// most callbacks\n\t\tfor (const k in data.fromModule) {\n\t\t\tparams[k] = module[data.fromModule[k]];\n\t\t}\n\n\t\t/* direct set properties, toggle, number */\n\t\tif (data.number) {\n\t\t\tparams.callback = function(value) {\n\t\t\t\tmodule[data.number] = +value;\n\t\t\t};\n\t\t}\n\n\t\tif (data.toggle) {\n\t\t\tparams.callback = function() {\n\t\t\t\tmodule[data.toggle] = !module[data.toggle];\n\t\t\t};\n\t\t}\n\n\t\tif (data.row) panel.addRow();\n\t\tif (params.label) panel.add(new UILabel({ text: params.label}));\n\t\t\n\t\tlet ui = new uiTypes[data.type](params);\n\t\tif (data.k) panel.append(ui, data.k);\n\t\telse panel.add(ui);\n\n\t\t/* add is to row, append is adding it straight there */\n\n\t\tif (params.prompt) ui.prompt = params.prompt; /* only key commands */\n\t\tif (params.key) self.keys[data.key] = ui;\n\t\tif (data.face) self.faces[data.face] = ui; /* wanna cut this */\n\t};\n}","function Settings(app, name, appSave) {\n\tconst self = this;\n\n\tthis.name = `settings-${name}`;\n\n\tthis.save = function() {\n\t\tconst settings = appSave ? { ...appSave() } : {};\n\t\tsettings.panels = {};\n\n\t\tfor (const p in app.ui.panels) {\n\t\t\tif (p != 'el') {\n\t\t\t\tsettings.panels[p] = {\n\t\t\t\t\topen: app.ui.panels[p].isOpen,\n\t\t\t\t\tdocked: app.ui.panels[p].isDocked,\n\t\t\t\t\torder: app.ui.panels[p].order,\n\t\t\t\t\tblock: app.ui.panels[p].isBlock,\n\t\t\t\t\theadless: app.ui.panels[p].isHeadless\n\t\t\t\t};\n\t\t\t}\n\t\t\t// if (p == 'settings') settings.panels[p].open = false;\n\t\t}\n\t\tlocalStorage[self.name] = JSON.stringify(settings);\n\t};\n\n\tthis.load = function(appLoad) {\n\t\tif (localStorage[self.name]) {\n\t\t\tconst settings = JSON.parse(localStorage[self.name]);\n\t\t\tif (appLoad) appLoad(settings);\n\t\t\tfor (const p in settings.panels) {\n\t\t\t\tif (p != 'el') { /* fix later */\n\t\t\t\t\tif (settings.panels[p].docked) app.ui.panels[p].dock();\n\t\t\t\t\tif (!settings.panels[p].open) app.ui.panels[p].open.update();\n\t\t\t\t\tif (settings.panels[p].block) app.ui.panels[p].block();\n\t\t\t\t\tif (settings.panels[p].headless) app.ui.panels[p].headless();\n\t\t\t\t\tapp.ui.panels[p].order = settings.panels[p].order;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.clear = function() {\n\t\tdelete localStorage[self.name];\n\t};\n\n\tthis.toggleSaveSettings = function() {\n\t\tapp.files.saveSettingsOnUnload = !app.files.saveSettingsOnUnload;\n\t};\n}","window.addEventListener(\"load\", function() {\n\n\twindow.lns = {};\n\n\t// modules\n\tlns.canvas = new Canvas(\"lines\", 512, 512, \"#ffffff\", true);\n\tlns.render = new Render(10); // (lps)\n\n\tlns.anim = new LnsAnim(lns.canvas.ctx);\n\n\tlns.draw = new Draw({ n: 2, r: 1, w: 1, v: 0.1, c: '#000000' }); // defaults\n\tlns.bgImage = new Background();\n\tlns.data = new Data(lns.anim);\n\tlns.files = new Files({\n\t\tfit: false, /* fit to canvas when saving */\n\t\tsave: false, /* save settings on unload  */\n\t\tload: true, /* load setttings after file load */\n\t\treload: false, /* confirm reload */\n\t\tbg: true /* bg color */\n\t});\n\t\n\tlns.ui = new Interface(lns);\n\tlns.ui.capture = new Capture();\n\tlns.ui.states = new States();\n\tlns.ui.palette = new Palette();\n\tlns.ui.drawings = new Drawings();\n\tlns.ui.play = new Play();\n\tlns.ui.timeline = new Timeline();\n\tsetupAnimateInterface(lns.ui);\n\tlns.ui.settings = new Settings(lns, 'lns', appSave);\n\n\tlns.ui.load('./interface/interface.json', function() {\n\t\tlns.draw.setDefaults();\n\t\tlns.ui.settings.load(appLoad);\n\t\tconst url = location.search.split('=')[1]\n\t\tif (url) lns.files.loadFile(url.split('.')[0], lns.ui.updateFIO);\n\t\tlns.ui.update();\n\t\tlns.render.start();\n\n\t\tlns.ui.timeline.init();\n\t});\n});\n\nfunction appSave() {\n\treturn {\n\t\tcanvasColor: lns.canvas.bgColor,\n\t\tlineWidth: lns.canvas.ctx.lineWidth,\n\t\tc: lns.draw.layer.c,\n\t\twidth: lns.canvas.width,\n\t\theight: lns.canvas.height,\n\t\tfps: lns.anim.fps,\n\t\tlps: lns.render.lps,\n\t\tonionSkinIsVisible: lns.render.onionSkinIsVisible,\n\t\tonionSkinNum: lns.render.onionSkinNum,\n\t\tmouseInterval: lns.draw.mouseInterval,\n\t\tpalettes: lns.ui.palette.palettes,\n\t\trl: lns.ui.faces.rl.value,\n\t\ttimelineView: lns.ui.faces.timelineView.value,\n\t\tcanvasScale: lns.ui.faces.canvasScale.value,\n\t\tinterfaceScale: lns.ui.faces.interfaceScale.value\n\t};\n}\n\nfunction appLoad(settings) {\n\n\t/* environment + ui + lns.anim */\n\tlns.ui.faces.lps.update(settings.lps);\n\n\t/* environment + ui */\n\tlns.ui.faces.onionSkinNum.update(settings.onionSkinNum);\n\tlns.ui.faces.mouseInterval.update(settings.mouseInterval);\n\tlns.ui.faces.width.update(settings.width);\n\tlns.ui.faces.height.update(settings.height);\n\tlns.ui.faces.bgColor.update(settings.canvasColor);\t\n\tlns.ui.faces.timelineView.update(settings.timelineView);\n\n\tlns.ui.faces.canvasScale.update(settings.canvasScale);\n\tlns.ui.faces.interfaceScale.update(settings.interfaceScale);\n\n\tlns.ui.faces.lineWidth.update(settings.lineWidth); // has to be called last bc of reset ... \n\n\t/* lns.anim + ui */\n\tlns.ui.faces.fps.update(settings.fps);\n\tlns.ui.faces.c.update(settings.c);\n\n\t// palettes - no need to separate module from ui bc its all ui \n\t// - only one not a ui with update ... \n\tlns.ui.palette.setup(settings.palettes);\n\n\t/* ui only */\n\tlns.ui.faces.rl.update(settings.rl);  // toggle not dependent on another value\n}\n"]}