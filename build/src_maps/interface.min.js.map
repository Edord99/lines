{"version":3,"sources":["element.js","collection.js","input.js","text.js","interface.js","settings.js","ui/blur.js","ui/button.js","ui/color.js","ui/drag-button.js","ui/label.js","ui/list.js","ui/modal.js","ui/panel.js","ui/range.js","ui/row.js","ui/select-button.js","ui/select.js","ui/text-range.js","ui/toggle.js"],"names":["UIElement","[object Object]","params","this","el","document","getElementById","id","createElement","tag","prop","css","style","undefined","class","addClass","text","_text","textContent","value","_value","position","x","getBoundingClientRect","y","setProperty","getPropertyValue","callback","_class","classList","add","remove","key","title","addEventListener","onPress","bind","onRelease","triggerRelease","toolTip","setTimeout","removeClass","UICollection","super","ui","k","Array","isArray","html","forEach","appendChild","removeChild","console","log","UIInput","arguments","setKey","label","UIText","type","placeholder","ev","select","which","update","target","me","prompt","blur","Interface","app","self","uiTypes","UILabel","UIRange","UIBlur","UITextRange","UIToggle","UIButton","UIColor","UISelect","UISelectButton","UIList","UIRow","body","Cool","mobilecheck","keys","faces","panels","keyDown","preventDefault","shiftKey","ctrlKey","altKey","activeElement","metaKey","handler","window","load","file","fetch","then","response","json","data","createPanel","addSelect","Object","panelList","append","options","dock","btn","panel","UIPanel","i","uis","length","mod","sub","module","j","list","createUI","fromModule","number","toggle","row","addRow","face","Settings","name","appSave","save","settings","p","open","isOpen","docked","isDocked","order","block","isBlock","headless","isHeadless","localStorage","JSON","stringify","appLoad","parse","clear","toggleSaveSettings","files","saveSettingsOnUnload","onText","colors","setColor","addColor","current","palette","color","includes","push","background","UIDragButton","down","dragging","pageX","delta","Math","abs","ceil","lns","timeline","frameSize","before","insertBefore","children","els","contains","index","start","end","len","UIModal","left","max","top","break","submit","cancel","component","rows","header","offText","isOn","undock","orderBtn","n","indexOf","splice","_row","setRange","min","step","setStep","event","firstChild","margin-left","setOptions","selected","opt","from","map","o","addOption","textInput","range","currentTarget","off","on"],"mappings":"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","file":"../interface.min.js","sourcesContent":["class UIElement {\n\tconstructor(params) {\n\t\tparams = params || {};\n\n\t\tthis.el = document.getElementById(params.id) ?\n\t\t\t\tdocument.getElementById(params.id) :\n\t\t\t\tdocument.createElement(params.tag || \"div\");\n\n\t\tfor (const prop in params.css) {\n\t\t\tthis.el.style[prop] = params.css[prop];\n\t\t}\n\n\t\tif (params.id !== undefined) this.el.id = params.id;\n\t\tif (params.class) this.addClass(params.class);\n\t}\n\n\tset text(_text) {\n\t\tthis.el.textContent = _text;\n\t}\n\n\tset value(_value) {\n\t\tthis.el.value = _value;\n\t}\n\n\tget value() {\n\t\treturn this.el.value;\n\t}\n\n\tget position() {\n\t\treturn { x: this.el.getBoundingClientRect().x, y: this.el.getBoundingClientRect().y };\n\t}\n\n\tsetProp(prop, value) {\n\t\tthis.el.style.setProperty(prop, value);\n\t}\n\n\tgetProp(prop) {\n\t\treturn this.el.style.getPropertyValue(prop); \n\t}\n\n\thandler() {\n\t\tthis.callback();\n\t}\n\n\taddClass(_class) {\n\t\tthis.el.classList.add(_class);\n\t}\n\n\tremoveClass(_class) {\n\t\tthis.el.classList.remove(_class);\n\t}\n\n\tsetKey(key, text) {\n\t\tthis.el.title = `${text ? text : ''} ~ ${key}`;\n\t\tthis.el.addEventListener('mouseenter', this.onPress.bind(this));\n\t\tthis.el.addEventListener('mouseleave', this.onRelease.bind(this));\n\t}\n\n\tonPress(triggerRelease) {\n\t\ttoolTip.text = `${this.el.title}`;\n\t\ttoolTip.addClass('visible');\n\t\tthis.addClass('triggered');\n\t\tif (triggerRelease === true) setTimeout(this.onRelease.bind(this), 400);\n\t}\n\n\tonRelease() {\n\t\ttoolTip.removeClass('visible');\n\t\tthis.removeClass('triggered');\n\t}\n}","class UICollection extends UIElement {\n\tconstructor(params) {\n\t\tsuper(params);\n\t}\n\n\tappend(ui, k) {\n\t\tif (k !== undefined) this[k] = ui;\n\t\tif (Array.isArray(ui.html)) {\n\t\t\tui.html.forEach(el => {\n\t\t\t\tthis.el.appendChild(el);\n\t\t\t});\n\t\t} else {\n\t\t\tthis.el.appendChild(ui.el);\n\t\t}\n\t}\n\n\tremove(ui, k) {\n\t\tif (k) delete this[k];\n\t\tthis.el.removeChild(ui.el);\n\t}\n\n\tremoveK(k) {\n\t\tthis.el.removeChild(this[k].el);\n\t\tdelete this[k];\n\t\tconsole.log(this);\n\t}\n}","class UIInput extends UIElement {\n\tconstructor(params) {\n\t\tparams.tag = \"input\";\n\t\tsuper(params);\n\t\tthis.callback = params.callback;\n\t\tthis.arguments = params.arguments;\n\t\tif (params.key) this.setKey(params.key, params.label);\n\t}\n}","class UIText extends UIInput {\n\tconstructor(params) {\n\t\tsuper(params);\n\t\tthis.el.type = \"text\";\n\t\tthis.placeholder = this.el.placeholder || params.placeholder || params.text || params.value;\n\t\tthis.el.placeholder = this.placeholder;\n\n\t\tthis.el.addEventListener('focus', ev => {\n\t\t\tthis.el.select();\n\t\t});\n\n\t\t/* have to hit enter to confirm value */\n\t\tthis.el.addEventListener('keyup', ev => {\n\t\t\tif (ev.which == 13) this.update(ev.target.value);\n\t\t});\n\n\t\tthis.el.addEventListener('blur', ev => {\n\t\t\tif (!this.value) {\n\t\t\t\tthis.el.placeholder = this.placeholder;\n\t\t\t\tthis.el.value = '';\n\t\t\t} else if (this.value != ev.target.value) {\n\t\t\t\tthis.el.value = this.value;\n\t\t\t}\n\t\t});\n\t}\n\n\thandler(ev, me) {\n\t\tme.update(ev.target.value || prompt(me.prompt));\n\t}\n\n\tupdate(value) {\n\t\tif (this.callback) this.callback(value);\n\t\tthis.value = value;\n\t\tthis.el.blur(); // keep going back and forth on this??\n\t\t// 11.27.2019 to prevent settings not saving when something focused\n\t}\n\n\tset value(_value) {\n\t\t// console.log('value', _value);\n\t\t// this.el.value = this.el.placeholder = _value;\n\t\tthis._value = _value;\n\t\tthis.el.value = _value;\n\t\tthis.el.placeholder = _value;\n\t\tthis.el.blur();\n\t}\n\n\tget value() {\n\t\treturn this._value;\n\t}\n}","function Interface(app) {\n\tconst self = this;\n\tconst uiTypes = {\n\t\tUILabel,\n\t\tUIElement,\n\t\tUIRange,\n\t\tUIText,\n\t\tUIBlur,\n\t\tUITextRange,\n\t\tUIToggle,\n\t\tUIButton,\n\t\tUIColor,\n\t\tUISelect,\n\t\tUISelectButton,\n\t\tUICollection,\n\t\tUIList,\n\t\tUIRow\n\t};\n\tdocument.body.classList.add(Cool.mobilecheck() ? 'mobile' : 'desktop');\n\n\tthis.keys = {};\n\tthis.faces = {}; /* references to faces we need to update values ???  */\n\tthis.panels = new UICollection({ id: \"panels\" });\n\n\t/* key commands */\n\tthis.keyDown = function(ev) {\n\t\tlet k = Cool.keys[ev.which];\n\t\tif (k == \"space\") ev.preventDefault();\n\t\tk = ev.shiftKey ? \"shift-\" + k : k\n\t\tk = ev.ctrlKey ? \"ctrl-\" + k : k;\n\t\tk = ev.altKey ? \"alt-\" + k : k;\n\n\t\tconst key = self.keys[k];\n\n\t\tif (k && key && \n\t\t\tdocument.activeElement.type != \"text\" && \n\t\t\t!ev.metaKey) {\n\t\t\tev.preventDefault();\n\t\t\tkey.handler(ev, key);\n\t\t\tkey.onPress(true);\n\t\t}\n\t};\n\tdocument.addEventListener(\"keydown\", self.keyDown, false);\n\n\twindow.toolTip = new UILabel({id: 'tool-tip'});\n\tdocument.getElementById('interface').appendChild(window.toolTip.el);\n\n\tthis.load = function(file, callback) {\n\t\tfetch(file)\n\t\t\t.then(response => { return response.json(); })\n\t\t\t.then(data => {\n\t\t\t\tfor (const key in data) {\n\t\t\t\t\tself.createPanel(key, data[key]);\n\t\t\t\t}\n\n\t\t\t\tthis.addSelect(Object.keys(data));\n\t\t\t\t// self.settings.load();\n\t\t\t\tif (callback) callback();\n\t\t\t});\n\t};\n\n\tthis.addSelect = function(panelList) {\n\t\tconst selector = new UICollection({id: 'selector'});\n\t\tselector.append(new UISelectButton({\n\t\t\toptions: panelList,\n\t\t\tcallback: function(value) {\n\t\t\t\tself.panels[value].dock();\n\t\t\t},\n\t\t\tbtn: '+'\n\t\t}));\n\t};\n\n\tthis.createPanel = function(key, data) {\n\t\t\n\t\tconst panel = new UIPanel(key, data.label);\n\t\tthis.panels.append(panel, key);\n\t\t\n\t\tfor (let i = 0; i < data.uis.length; i++) {\n\t\t\tconst uis = data.uis[i];\n\t\t\tconst mod = uis.sub ? app[uis.module][uis.sub] : app[uis.module];\n\t\t\tfor (let j = 0; j < uis.list.length; j++) {\n\t\t\t\tself.createUI(uis.list[j], mod, panel);\n\t\t\t}\n\t\t\tif (uis.module == 'ui' && uis.sub) \n\t\t\t\tapp.ui[uis.sub].panel = panel;\n\t\t}\n\t};\n\n\tthis.createUI = function(data, module, panel) {\n\n\t\tconst params = { ...data.params };\n\t\tif (data.key) params.key = data.key;\n\n\t\t// most callbacks\n\t\tfor (const k in data.fromModule) {\n\t\t\tparams[k] = module[data.fromModule[k]];\n\t\t}\n\n\t\t/* direct set properties, toggle, number */\n\t\tif (data.number) {\n\t\t\tparams.callback = function(value) {\n\t\t\t\tmodule[data.number] = +value;\n\t\t\t};\n\t\t}\n\n\t\tif (data.toggle) {\n\t\t\tparams.callback = function() {\n\t\t\t\tmodule[data.toggle] = !module[data.toggle];\n\t\t\t};\n\t\t}\n\n\t\tif (data.row) panel.addRow();\n\t\tif (params.label) panel.add(new UILabel({ text: params.label}));\n\t\t\n\t\tlet ui = new uiTypes[data.type](params);\n\t\tif (data.k) panel.append(ui, data.k);\n\t\telse panel.add(ui);\n\n\t\t/* add is to row, append is adding it straight there */\n\n\t\tif (params.prompt) ui.prompt = params.prompt; /* only key commands */\n\t\tif (params.key) self.keys[data.key] = ui;\n\t\tif (data.face) self.faces[data.face] = ui; /* wanna cut this */\n\t};\n}","function Settings(app, name, appSave) {\n\tconst self = this;\n\n\tthis.name = `settings-${name}`;\n\n\tthis.save = function() {\n\t\tconst settings = appSave ? { ...appSave() } : {};\n\t\tsettings.panels = {};\n\n\t\tfor (const p in app.ui.panels) {\n\t\t\tif (p != 'el') {\n\t\t\t\tsettings.panels[p] = {\n\t\t\t\t\topen: app.ui.panels[p].isOpen,\n\t\t\t\t\tdocked: app.ui.panels[p].isDocked,\n\t\t\t\t\torder: app.ui.panels[p].order,\n\t\t\t\t\tblock: app.ui.panels[p].isBlock,\n\t\t\t\t\theadless: app.ui.panels[p].isHeadless\n\t\t\t\t};\n\t\t\t}\n\t\t\t// if (p == 'settings') settings.panels[p].open = false;\n\t\t}\n\t\tlocalStorage[self.name] = JSON.stringify(settings);\n\t};\n\n\tthis.load = function(appLoad) {\n\t\tif (localStorage[self.name]) {\n\t\t\tconst settings = JSON.parse(localStorage[self.name]);\n\t\t\tif (appLoad) appLoad(settings);\n\t\t\tfor (const p in settings.panels) {\n\t\t\t\tif (p != 'el') { /* fix later */\n\t\t\t\t\tif (settings.panels[p].docked) app.ui.panels[p].dock();\n\t\t\t\t\tif (!settings.panels[p].open) app.ui.panels[p].open.update();\n\t\t\t\t\tif (settings.panels[p].block) app.ui.panels[p].block();\n\t\t\t\t\tif (settings.panels[p].headless) app.ui.panels[p].headless();\n\t\t\t\t\tapp.ui.panels[p].order = settings.panels[p].order;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.clear = function() {\n\t\tdelete localStorage[self.name];\n\t};\n\n\tthis.toggleSaveSettings = function() {\n\t\tapp.files.saveSettingsOnUnload = !app.files.saveSettingsOnUnload;\n\t};\n}","class UIBlur extends UIText {\n\tconstructor(params) {\n\t\tsuper(params);\n\n\t\tthis.el.addEventListener('blur', ev => {\n\t\t\tif (ev.target.value) this.handler(ev, this);\n\t\t});\n\t\tthis.value = params.value;\n\t}\n\n\tset value(_value) {\n\t\tif (_value !== undefined) this.el.placeholder = _value;\n\t\tthis.el.value = '';\n\t}\n\n\tget value() {\n\t\treturn this.el.value || this.el.placeholder;\n\t}\n\n}","class UIButton extends UIElement {\n\tconstructor(params) {\n\t\tparams.tag = \"span\";\n\t\tsuper(params);\n\t\tthis.addClass(params.type || \"btn\"); /* for diff types of button */\n\t\tthis.text = this.el.textContent || params.text || params.onText;\n\t\tthis.callback = params.callback;\n\t\tthis.arguments = params.arguments || [];\n\t\tthis.el.addEventListener('click', this.handler.bind(this));\n\t\tif (params.key) this.setKey(params.key, `${ this.el.textContent }`);\n\t}\n\t\n\thandler() {\n\t\tthis.callback(...this.arguments);\n\t}\n}\n","class UIColor extends UIInput {\n\tconstructor(params) {\n\t\tsuper(params);\n\t\tthis.el.type = \"color\";\n\t\tthis.colors = [];\n\t\tthis.arguments = params.arguments || [];\n\n\t\tthis.el.addEventListener('input', ev => {\n\t\t\tthis.setColor(ev.target.value);\n\t\t});\n\n\t\tthis.el.addEventListener('focus', ev => {\n\t\t\tthis.addColor(this.current);\n\t\t});\n\t\tthis.palette = new UICollection();\n\t}\n\n\taddColor(color) {\n\t\tconst self = this;\n\t\tif (!this.colors.includes(color) && color) {\n\t\t\tthis.colors.push(color);\n\t\t\tconst btn = new UIButton({\n\t\t\t\ttext: color,\n\t\t\t\tcss: { \"background\": color },\n\t\t\t\tvalue: color,\n\t\t\t\tcallback: function() {\n\t\t\t\t\tself.callback(color, self.arguments);\n\t\t\t\t\tself.value = color;\n\t\t\t\t}\n\t\t\t});\n\t\t\tself.palette.append(btn);\n\t\t}\n\t}\n\n\t/* to set color without constantly updating \"current\" */\n\tsetColor(value) {\n\t\tthis.current = value;\n\t\tthis.callback(...[...this.arguments, value]);\n\t}\n\n\t/* update for loading */\n\tupdate(value) {\n\t\tthis.setColor(value);\n\t\tthis.value = value;\n\t}\n\n\tset value(_value) {\n\t\tthis.addColor(_value);\n\t\tthis.current = _value;\n\t\tsuper.value = _value;\n\t}\n\n\tget value() {\n\t\treturn this.el.value;\n\t}\n\n\tget html() {\n\t\treturn [this.el, this.palette.el];\n\t}\n}","class UIDragButton extends UIButton {\n\tconstructor(params) {\n\t\tsuper(params);\n\n\t\tthis.down = { x: 0, y: 0 };\n\n\t\tthis.el.addEventListener('mousemove', ev => {\n\t\t\tif (this.down.x) this.dragging = true;\n\t\t});\n\n\t\tthis.el.addEventListener('mousedown', ev => {\n\t\t\tthis.down.x = ev.pageX;\n\t\t});\n\n\t\tdocument.addEventListener('mouseup', ev => {\n\t\t\t// console.log(ev);\n\t\t\tif (this.dragging) {\n\t\t\t\tconst delta = ev.pageX - this.down.x;\n\t\t\t\tif (Math.abs(delta) > 10) {\n\t\t\t\t\tthis.callback(delta > 0 ? 1 : -1, Math.abs(Math.ceil(delta / lns.ui.timeline.frameSize\n)));\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.dragging = false;\n\t\t\tthis.down.x = 0;\n\t\t});\n\t}f\n}","class UILabel extends UIElement {\n\tconstructor(params) {\n\t\tparams.tag = \"label\";\n\t\tsuper(params);\n\t\tthis.text = params.text;\n\t}\n}","class UIList extends UICollection {\n\tconstructor(params) {\n\t\tsuper(params);\n\t}\n\n\tinsertBefore(ui, before) {\n\t\tthis.el.insertBefore(ui.el, before.el);\n\t}\n\n\tget length() {\n\t\treturn this.el.children.length;\n\t}\n\n\tget children() {\n\t\treturn this.el.children;\n\t}\n\n\taddClass(_class) {\n\t\tfor (let i = 0; i < this.els.length; i++) {\n\t\t\tif (!this.els[i].classList.contains(_class))\n \t\t\t\tthis.els[i].classList.add(_class);\n\t\t}\n\t}\n\n\tsetId(id, index) {\n\t\tthis.children[index].id = id;\n\t}\n\n\tremoveIndex(index) {\n\t\tthis.children[index].remove();\n\t}\n\n\tlooper(callback, start, end) {\n\t\tconst len = end || this.length - 2; /* for plusframe ... */\n\t\tfor (let i = start || 0; i <= len; i++) {\n\t\t\tcallback(this.children[i]);\n\t\t}\n\t}\n}","class UIModal extends UICollection {\n\tconstructor(title, app, position, callback) {\n\t\tsuper({});\n\t\tthis.addClass('modal');\n\t\tthis.append(new UILabel({ text: title }));\n\n\t\tthis.el.style.left = `${Math.max(0, position.x - 100)}px`;\n\t\tthis.el.style.top = `${Math.max(0, position.y - 20)}px`;\n\n\t\t// better way to do this ?? \n\t\tdocument.getElementById('container').appendChild(this.el);\n\t\t\n\t\tconst self = this;\n\n\t\tthis.break = new UIElement({\n\t\t\tclass: 'break'\n\t\t});\n\t\tthis.append(this.break);\n\n\t\tthis.submit = new UIButton({\n\t\t\ttext: \"Submit\",\n\t\t\tcallback: function() {\n\t\t\t\tcallback();\n\t\t\t\tself.clear();\n\t\t\t}\n\t\t});\n\n\t\tthis.append(this.submit);\n\t\tapp.ui.keys['enter'] = this.submit; /* not modular ... */\n\n\t\tthis.cancel = new UIButton({\n\t\t\ttext: \"x\",\n\t\t\tcallback: ev => {\n\t\t\t\tthis.clear();\n\t\t\t}\n\t\t});\n\n\t\tapp.ui.keys['escape'] = this.cancel;\n\t\tthis.append(this.cancel);\n\t}\n\n\tadd(component) {\n\t\tthis.el.insertBefore(component.el, this.break.el);\n\t}\n\n\tclear() {\n\t\tthis.el.remove();\n\t}\n}","class UIPanel extends UICollection {\n\tconstructor(id, label) {\n\t\tsuper({id: `${id}-panel`});\n\t\tthis.addClass(\"panel\");\n\t\tthis.addClass(\"undocked\");\n\t\t\n\t\tthis.rows = [];\n\n\t\tthis.header = new UIRow();\n\t\tthis.header.addClass('header');\n\t\tthis.append(this.header);\n\n\t\tthis.open = new UIToggle({\n\t\t\tonText: \"－\",\n\t\t\toffText: \"＋\",\n\t\t\ttype: \"toggle\",\n\t\t\tcallback: () => {\n\t\t\t\tif (this.open.isOn) this.addClass('closed');\n\t\t\t\telse this.removeClass('closed');\n\t\t\t}\n\t\t});\n\t\tthis.header.append(this.open);\n\n\t\tthis.header.append(new UILabel({ text: label }));\n\n\t\tthis.header.append(new UIButton({\n\t\t\ttext: 'X',\n\t\t\ttype: 'undock-btn',\n\t\t\tcallback: this.undock.bind(this)\n\t\t}));\n\n\t\tthis.orderBtn = new UIButton({\n\t\t\ttext: this.order || \"0\",\n\t\t\ttype: \"order-btn\",\n\t\t\tcallback: () => {\n\t\t\t\tthis.order = +this.el.style.order + 1;\n\t\t\t\tthis.orderBtn.text = this.order;\n\t\t\t}\n\t\t});\n\t\tthis.header.append(this.orderBtn);\n\n\t\tthis.header.append(new UIButton({\n\t\t\ttext: \"[]\",\n\t\t\ttype: \"block-btn\",\n\t\t\tcallback: () =>  {\n\t\t\t\tif (this.el.classList.contains('block')) \n\t\t\t\t\tthis.el.classList.remove('block');\n\t\t\t\telse \n\t\t\t\t\tthis.el.classList.add('block');\n\t\t\t}\t\n\t\t}));\n\n\t\tthis.header.append(new UIButton({\n\t\t\ttext: \"<\",\n\t\t\ttype: \"headless-btn\",\n\t\t\tcallback: () => {\n\t\t\t\tif (this.el.classList.contains('headless')) \n\t\t\t\t\tthis.el.classList.remove('headless');\n\t\t\t\telse \n\t\t\t\t\tthis.el.classList.add('headless');\n\t\t\t}\n\t\t}));\n\t}\n\n\tset order(n) {\n\t\tthis.orderBtn.text = n || \"0\";\n\t\tthis.el.style.order = n;\n\t}\n\n\tget order() {\n\t\treturn this.el.style.order;\n\t}\n\n\tget isDocked() {\n\t\treturn !this.el.classList.contains('undocked');\n\t}\n\n\tget isBlock() {\n\t\treturn this.el.classList.contains('block');\n\t}\n\n\tget isHeadless() {\n\t\treturn this.el.classList.contains('headless');\n\t}\n\n\tget isOpen() {\n\t\treturn this.open.value;\n\t}\n\n\tblock() {\n\t\tthis.el.classList.add('block');\n\t}\n\n\theadless() {\n\t\tthis.el.classList.add('headless');\n\t}\n\n\tdock() {\n\t\tthis.removeClass('undocked');\n\t}\n\n\tundock() {\n\t\tthis.addClass('undocked');\n\t}\n\n\taddRow(k) {\n\t\tconst row = new UIRow();\n\t\tthis.append(row, k);\n\t\tthis.rows.push(row);\n\t\treturn row;\n\t}\n\n\tremoveRow(row) {\n\t\tconst index = this.rows.indexOf(row);\n\t\tthis.rows.splice(index, 1);\n\t\tthis.remove(row);\n\t}\n\n\tadd(ui, _row, k) {\n\t\tlet row = _row \n\t\t\t|| this.rows[this.rows.length - 1] \n\t\t\t|| this.addRow();\n\t\trow.append(ui, k);\n\t}\n}","class UIRange extends UIInput {\n\tconstructor(params) {\n\t\tsuper(params);\n\t\tthis.el.type = \"range\";\n\t\tthis.setRange(params.min, params.max);\n\t\tthis.value = params.value || params.min;\n\t\tif (params.step) this.setStep(params.step);\n\n\t\tthis.el.addEventListener(params.event || 'input', ev => {\n\t\t\tthis.handler(ev, this);\n\t\t});\n\t}\n\n\thandler(ev, me) {\n\t\tme.update(ev.type == 'keydown' ? prompt(me.prompt) : +ev.target.value);\n\t}\n\n\tupdate(value) {\n\t\tthis.el.value = value;\n\t\tthis.el.blur();\n\t\tthis.callback(...this.arguments, value);\n\t}\n\n\tsetRange(min, max) {\n\t\tthis.el.min = min;\n\t\tthis.el.max = max;\t\n\t}\n\n\tsetStep(step) {\n\t\tthis.el.step = step;\n\t}\n}","class UIRow extends UICollection {\n\tconstructor(params) {\n\t\tsuper(params);\n\t\tthis.addClass('row');\n\t}\n\n\tclear() {\n\n\t\t/* remove keys */\n\t\tfor (const key in this) {\n\t\t\tif (key !== undefined && key !== 'el') {\n\t\t\t\tdelete this[key];\n\t\t\t}\n\t\t}\n\n\t\twhile (this.el.firstChild) {\n\t\t\tthis.el.firstChild.value = null; /* prevent blur event */\n\t\t\tthis.el.removeChild(this.el.firstChild);\n\t\t}\n\t}\n}","class UISelectButton extends UICollection {\n\tconstructor(params) {\n\t\tsuper(params);\n\n\t\tthis.select = new UISelect({\n\t\t\toptions: params.options,\n\t\t\tcallback: function() {\n\t\t\t\t// do nothing ? to prevent error \n\t\t\t}\n\t\t});\n\n\t\tthis.btn = new UIButton({\n\t\t\ttext: \"+\",\n\t\t\tcss: { 'margin-left': '1px' },\n\t\t\tcallback: () => {\n\t\t\t\tparams.callback(this.select.value);\n\t\t\t}\n\t\t});\n\t}\n\t\n\tget html() {\n\t\treturn [this.select.el, this.btn.el];\n\t}\n}","class UISelect extends UIElement {\n\tconstructor(params) {\n\t\tparams.tag = \"select\";\n\t\tsuper(params);\n\t\tthis.setOptions(params.options || [], params.selected);\n\t\t\n\t\tthis.el.addEventListener('change', function(ev) {\n\t\t\tparams.callback(ev.target.value);\n\t\t\tev.target.blur();\n\t\t});\n\t}\n\n\tremoveOption(value) {\n\t\tfor (let i = 0; i < this.el.children.length; i++) {\n\t\t\tif (this.el.children[i].value == value)\n\t\t\t\tthis.el.children[i].remove();\n\t\t}\n\t}\n\n\taddOption(value, selected) {\n\t\tconst opt = document.createElement(\"option\");\n\t\topt.value = opt.textContent = value;\n\t\tif (selected) opt.selected = \"selected\";\n\t\tthis.el.appendChild(opt);\n\t}\n\n\tsetOptions(options, selected) {\n\t\tfor (let i = 0; i < options.length; i++) {\n\t\t\tconst opt = Array.from(this.el.options).map(o => o.value);\n\t\t\tif (!opt.includes(options[i]))\n\t\t\t\tthis.addOption(options[i], selected == options[i]);\n\t\t}\n\t}\n}","class UITextRange extends UICollection {\n\tconstructor(params) {\n\t\tsuper(params);\n\n\t\tthis.callback = params.callback;\n\t\tthis.arguments = params.arguments || [];\n\n\t\tthis.textInput = new UIBlur({\n\t\t\t...params,\n\t\t\tcallback: this.handler.bind(this)\n\t\t});\n\n\t\tthis.range = new UIRange({\n\t\t\t...params,\n\t\t\tcallback: this.handler.bind(this)\n\t\t});\n\n\t\tif (params.event == 'change') {\n\t\t\tthis.range.el.addEventListener('input', ev => {\n\t\t\t\tthis.textInput.el.placeholder = ev.currentTarget.value;\n\t\t\t});\n\t\t}\n\t}\n\n\tget html() {\n\t\treturn [this.textInput.el, this.range.el];\n\t}\n\n\thandler(ev, me) {\n\t\tif (typeof ev === \"number\") this.update(ev);\n\t\telse if (typeof ev === \"string\")  this.update(+ev);\n\t\telse me.update(ev.target.value || prompt(me.prompt));\n\t\t/* this is gnarly cuz ev can be event or number .... */\n\t}\n\n\tupdate(value) {\n\t\tthis.callback(...[...this.arguments, value]);\n\t\tthis.textInput.value = value;\n\t\tthis.range.value = value;\n\t}\n\n\tget value() {\n\t\treturn this.textInput.value;\n\t}\n}","class UIToggle extends UIButton {\n\tconstructor(params) {\n\t\tsuper(params);\n\t\tthis.onText = params.onText || params.text;\n\t\tthis.offText = params.offText || params.text;\n\t\tthis.arguments = params.arguments || [];\n\t\tsuper.text = this.onText;\n\t\tthis.isOn = true;\n\t\tif (params.isOn === false) this.toggle();\n\t}\n\n\tupdate(isOn) {\n\t\tif (!isOn) {\n\t\t\tthis.callback();\n\t\t\tthis.toggle();\n\t\t}\n\t}\n\n\thandler() {\n\t\tthis.callback(...this.arguments, this.value);\n\t\tthis.toggle();\n\t}\n\n\ttoggle() {\n\t\tif (this.isOn) this.off();\n\t\telse this.on();\n\t\tthis.isOn = !this.isOn;\n\t}\n\n\ton() {\n\t\tthis.text = this.onText;\n\t\tthis.removeClass('off');\n\t}\n\n\toff() {\n\t\tthis.text = this.offText;\n\t\tthis.addClass('off');\n\t}\n\n\tget value() {\n\t\treturn this.isOn;\n\t}\n}\n"]}