class Sprite{constructor(t,i,s,e){this.position=new Cool.Vector(t,i),this.size=new Cool.Vector(s,e),this.debug=!1,this.debugColor="#00ffbb",this.collider={position:new Cool.Vector(0,0),size:new Cool.Vector(s,e)},this.isActive=!0,this.center=!1,this.mouseOver=!1,this.waitToGoOut=!1,this.clickStarted=!1}get width(){return this.size.x}get height(){return this.size.y}get xy(){return this.center?this.position:this.position.subtract(this.size.divide(2))}get x(){return this.xy.x}get y(){return this.xy.y}addAnimation(t,i){this.animation=t,this.size.x=this.collider.size.x=this.animation.width,this.size.y=this.collider.size.y=this.animation.height}setCollider(t,i,s,e){this.collider.position.x=t,this.collider.position.y=i,this.collider.size.x=s,this.collider.size.y=e}drawDebug(){gme.ctx.lineWidth=1,gme.ctx.beginPath(),gme.ctx.rect(this.x+this.collider.position.x,this.y+this.collider.position.y,this.collider.size.x,this.collider.size.y);const t=gme.ctx.strokeStyle;gme.ctx.strokeStyle=this.debugColor,gme.ctx.stroke(),gme.ctx.strokeStyle=t}display(){this.isActive&&this.isOnScreen()&&(this.debug&&this.drawDebug(),this.animation&&(this.animation.draw(this.x,this.y),this.animation.update())),this.displayFunc&&this.displayFunc()}isOnScreen(){return this.x+this.width>0&&this.y+this.height>0&&this.x<gme.width&&this.y<gme.height}tap(t,i){return t>this.x+this.collider.position.x&&t<this.x+this.collider.position.x+this.collider.size.x&&i>this.y+this.collider.position.y&&i<this.y+this.collider.position.y+this.collider.size.y}collide(t,i){return!(!this.isActive||!t.isActive)&&(this.x+this.collider.position.x<t.x+t.collider.position.x+t.collider.size.x&&this.x+this.collider.position.x+this.collider.size.x>t.x+t.collider.position.x&&this.y+this.collider.position.y<t.y+t.collider.position.y+t.collider.size.y&&this.y+this.collider.position.y+this.collider.size.y>t.y+t.collider.position.y?(i&&i(this),!0):void 0)}outside(t){var i=this.position.copy(),s=this.collider.position.copy();i.add(s),i.add(this.velocity);var e=this.collider.size.copy();return i.x<t.position.x+t.collider.position.x||i.x+e.x>t.position.x+t.collider.position.x+t.collider.size.x||i.y<t.position.y+t.collider.position.y||i.y+e.y>t.position.y+t.collider.position.y+t.collider.size.y}over(t,i){return!(!this.isActive||!this.tap(t,i)||this.mouseOver||this.waitToGoOut)&&(this.mouseOver=!0,this.onOver&&this.onOver(),!0)}out(t,i){return!(!this.isActive||this.tap(t,i)||!this.mouseOver&&!this.waitToGoOut)&&(this.clickStarted=!1,this.waitToGoOut=!1,this.mouseOver=!1,this.onOut&&this.onOut(),!0)}down(t,i){return!(!this.isActive||!this.tap(t,i))&&(this.clickStarted=!0,this.waitToGoOut=!0,this.onDown&&this.onDown(),!0)}up(t,i){return!!(this.isActive&&this.tap(t,i)&&this.clickStarted)&&(this.mouseOver=!1,this.onUp&&this.onUp(),this.onClick&&this.onClick(),this.func&&func(),!0)}}class UI extends Sprite{constructor(t,i){let s=t.x,e=t.y;s%1!=0&&(s=gme.width*s),s<0&&(s=gme.width+s),e%1!=0&&(e=gme.height*e),e<0&&(e=gme.height+e),super(s,e),this.debug=i,this.center=!0,t.hidden&&(this.isActive=!1),t.json&&this.addJSON(t.json),t.animation&&this.addAnimation(t.animation),t.states&&(this.animation.states=t.states,this.animation.state="idle"),this.scenes=t.scenes,t.func&&(this.func=window[t.func])}}class Button extends UI{constructor(t,i){super(t,i),this.mouseOver=!1,this.waitToGoOut=!1,this.clickStarted=!1,t.onOver&&(this.onOver=t.onOver),t.onOut&&(this.onOut=t.onOut),t.onDown&&(this.onDown=t.onDown),t.onClick&&(this.onClick=t.onClick)}over(t,i){const s=super.over(t,i);return s&&(this.animation.state="over"),s}out(t,i){const s=super.out(t,i);return s&&(this.animation.state="idle"),s}down(t,i){const s=super.down(t,i);return s&&(this.animation.state="active"),s}up(t,i){const s=super.up(t,i);return s&&(this.animation.state="idle"),s}}class Entity extends Sprite{constructor(t,i,s){super(t.x,t.y),this.debug=s,this.origin=new Cool.Vector(t.x,t.y),this.center=t.center||!0}update(t){this.position=this.origin.copy().add(t.copy())}setPosition(t,i){this.origin=new Cool.Vector(t,i)}}const Events={init:function(t){var i,s=!1;t.addEventListener("click",(function(t){t.preventDefault(),"function"==typeof mouseClicked&&mouseClicked(t.offsetX,t.offsetY)}),!1),t.addEventListener("mousedown",(function(t){t.preventDefault(),"function"==typeof mouseDown&&mouseDown(t.offsetX,t.offsetY,t.which,t.shiftKey),"function"==typeof startDrag&&(i=startDrag(t.offsetX,t.offsetY))&&(s=!0)}),!1),t.addEventListener("mouseup",(function(t){t.preventDefault(),"function"==typeof mouseUp&&mouseUp(t.offsetX,t.offsetY,t.which),s&&(s=!1)}),!1),t.addEventListener("mousemove",(function(t){"function"==typeof mouseMoved&&mouseMoved(t.offsetX,t.offsetY,t.which),s&&drag(t.offsetX,t.offsetY,i)}),!1),document.addEventListener("keydown",(function(t){"function"==typeof keyDown&&"INPUT"!=t.target.tagName&&keyDown(Cool.keys[t.which])})),document.addEventListener("keyup",(function(t){"function"==typeof keyUp&&"INPUT"!=t.target.tagName&&keyUp(Cool.keys[t.which])})),window.addEventListener("resize",(function(t){"function"==typeof sizeCanvas&&sizeCanvas()}),!1)}};class Game{constructor(t){this.canvas=document.getElementById(t.canvas||"lines"),this.width=t.width,this.height=t.height,this.lps=t.lps,this.mixedColors=t.mixedColors||!1,this.debug=t.debug||!1,this.lineInterval=1e3/t.lps,this.updateTime=performance.now(),this.updateInterval=1e3/60,this.drawTime=performance.now(),this.clearBg=!0,this.bounds={top:0,bottom:0,left:0,right:0},this.scenes=new SceneManager(t.scenes,Scene),this.data={},this.anims={},this.canvas.getContext&&(this.ctx=this.canvas.getContext("2d"),this.dpr=t.checkRetina&&window.devicePixelRatio||1,this.canvas.width=this.width*this.dpr,this.canvas.height=this.height*this.dpr,this.ctx.scale(this.dpr,this.dpr),this.canvas.style.zoom=1/this.dpr,t.lineColor&&(this.ctx.strokeStyle=t.lineColor),t.scale&&this.ctx.scale(t.scale,t.scale),t.stats&&(this.stats=new Stats(this.ctx,["FPS","draw"])),this.ctx.miterLimit=1)}load(t,i){this.assetsLoaded={};const s=Object.keys(t).length;for(const i in t){const s=t[i];fetch(s).then(t=>{if(t.ok)return t.url.includes("csv")?t.text():t.json();throw new Error("Network response was not ok.")}).then(t=>{if(this.data[i]={},this.anims[i]={},this.assetsLoaded[i]={},"object"==typeof t){this.data[i].entries=t;for(const s in t)this.assetsLoaded[i][s]=!1,this.loadJSON(i,s,t[s].src)}else{const s=CSVToArray(t,",").splice(1);this.data[i].entries=s;for(let t=0;t<s.length;t++){const e=s[t][0];this.assetsLoaded[i][e]=!1,this.loadJSON(i,e,`drawings/${i}/${e}.json`)}}}).catch(t=>{console.error(t),this.assetsLoaded[i]=!0})}const e=setInterval(()=>{let t=Object.keys(this.assetsLoaded).length==s;for(const i in this.assetsLoaded)for(const s in this.assetsLoaded[i])this.assetsLoaded[i][s]||(t=!1);t&&(clearInterval(e),this.start())},1e3/60)}loadJSON(t,i,s){fetch(s).then(t=>t.json()).then(s=>{this.anims[t][i]=new GameAnim,this.anims[t][i].loadData(s,()=>{this.assetsLoaded[t][i]=!0})})}start(){"function"==typeof start&&start(),"function"==typeof update&&requestAnimFrame(()=>{this.update()}),"function"==typeof draw&&requestAnimFrame(()=>{this.draw()}),void 0!==Events&&Events.init(this.canvas)}draw(){const t=performance.now();t>=this.drawTime+this.lineInterval&&(this.clearBg&&this.ctx.clearRect(0,0,this.width*this.dpr,this.height*this.dpr),draw(),this.stats&&(this.stats.draw(),this.stats.update("draw",t,this.drawTime)),this.drawTime=t),requestAnimFrame(()=>{this.draw()})}update(){const t=performance.now();t>this.updateTime+this.updateInterval&&(update(),this.stats&&this.stats.update("FPS",t,this.updateTime),this.updateTime=t),requestAnimFrame(()=>{this.update()})}addLettering(t){const i="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ.,:?-+'&$;\"!";for(let s=0;s<i.length;s++)t.createNewState(i[s],s,s)}setBounds(t,i){this.bounds[t]=i}}class GameAnim extends LinesAnimation{constructor(t,i,s){super(gme.ctx,gme.lps,gme.mixedColors),this.debug=s,this.loop=!0,this.randomFrames=!1}update(){if(this.isPlaying&&this.currentFrame<=this.currentState.end){if(this.currentFrameCounter+=this.intervalRatio,this.randomFrames&&this.currentFrame!=Math.floor(this.currentFrameCounter)){const t=this.currentFrame;for(;t==this.currentFrame;)this.frame=Cool.randomInt(this.currentState.start,this.currentState.end)}this.currentFrame=Math.floor(this.currentFrameCounter),this.onUpdate&&this.onUpdate()}this.frame4>=this.currentState.end+1&&(this.loop?this.frame=this.currentState.start:this.frame=this.currentState.end,this.onPlayedOnce&&(this.onPlayedOnce(),this.onPlayedOnce=void 0),this.onPlayedState&&this.onPlayedState())}createNewState(t,i,s){this.states[t]||(this.states[t]={start:i,end:s}),this.state=t}set state(t){this._state!=t&&this.states[t]&&(this._state=t,this.currentState&&(this.frame=this.currentState.start),this.isPlaying||"default"==t||(this.isPlaying=!0))}get state(){return this._state}playOnce(t){this.isPlaying||(this.isPlaying=!0),this.frame=this.currentState.start,this.onPlayedOnce=t}stop(){this.isPlaying=!1}start(){this.isPlaying=!0}}class Manager{constructor(t,i){for(let s=0;s<t.length;s++)this[t[s]]=new i;this._current=t[0]}set current(t){this._current=t}get current(){return this[this._current]}}class Scene{constructor(){this.displaySprites=new SpriteCollection,this.updateSprites=new SpriteCollection,this.uiSprites=new SpriteCollection}add(t){this.displaySprites.add(t),this.updateSprites.add(t),this.uiSprites.add(t)}remove(t,i){const s=i?[i]:["display","update","ui"];for(let i=0;i<s.length;i++){const e=this[s[i]+"Sprites"].indexOf(t);e>=0&&this[s[i]+"Sprites"].splice(e,1)}}addSprite(t){this.displaySprites.add(t),this.updateSprites.add(t)}addUI(t){this.displaySprites.add(t),this.uiSprites.add(t)}addToDisplay(t){this.displaySprites.add(t)}addToUpdate(t){this.updateSprites.add(t)}addToUI(t){this.uiSprites.add(t)}display(){this.displaySprites.all(t=>{t.display()})}update(){this.updateSprites.all(t=>{t.update()})}mouseMoved(t,i){this.uiSprites.all(s=>{s.over(t,i),s.out(t,i)})}mouseDown(t,i){this.uiSprites.all(s=>{s.down(t,i)})}mouseUp(t,i){this.uiSprites.all(s=>{s.up(t,i)})}}class SceneManager extends Manager{add(t,i,s){"string"==typeof i&&(i=[i]);for(let e=0;e<i.length;e++)"display"==s?this[i[e]].addToDisplay(t):"ui"==s?this[i[e]].addUI(t):this[i[e]].add(t)}}class SpriteCollection{constructor(t){this.sprites=t?[...t]:[]}get length(){return this.sprites.length}sprite(t){return this.sprites[t]}remove(t){this.sprites.splice(this.sprites.indexOf(t),1)}add(t){this.sprites.push(t)}all(t){for(let i=0;i<this.sprites.length;i++)t(this.sprites[i],i)}display(){this.all(t=>{t.display()})}}class Stats{constructor(t,i){this.ctx=t,this.ctx.font="lighter 11px sans-serif",this.stats={},i.forEach(t=>{this.stats[t]=[]})}create(t){this.stats[t]=[]}update(t,i,s){this.stats[t].push(1e3/(i-s)),this.stats[t].length>20&&this.stats[t].shift()}draw(){this.ctx.fillStyle="rgba(0,0,0,0.75)",this.ctx.fillRect(window.innerWidth-65,0,50,40),this.ctx.font="lighter 11px sans-serif",this.ctx.fillStyle="rgba(100,255,200)";let t=window.innerWidth-60,i=15;for(const s in this.stats){const e=this.stats[s],o=`${s} ${Math.round(e.reduce((t,i)=>t+i,0)/e.length)}`;this.ctx.fillText(o,t,i),i+=20}}}class Text{constructor(t,i,s,e,o){this.x=Math.round(t),this.y=Math.round(i),this.lead=35,this.track=18,this.msg=s,this.wrap=e,this.isActive=!0,this.letters=o,this.breaks=[],this.setBreaks(),this.count=0,this.end=0,this.hover=!1,this.clickStarted=!1}setPosition(t,i){this.x=t,this.y=i}setMsg(t){this.msg=t,this.setBreaks()}setBreaks(){let t=!1,i=0,s=!1;this.breaks=[];for(let e=1;e<this.msg.length;e++)s=!1,this.msg[e].match(/[\n\r]/g)&&!s?(this.breaks.push(e),i=e%this.wrap,t=!1):e%this.wrap!=i||t?" "==this.msg[e]&&t&&(this.breaks.push(e),i=e%this.wrap,t=!1,s=!0):" "==this.msg[e]?(this.breaks.push(e),s=!0):t=!0}display(t,i,s,e){if(this.isActive){const h=t?this.count:this.msg.length,n=i?this.end:0;let a=s||this.x,r=e||this.y;for(let t=n;t<h;t++){var o=this.msg[t];" "==o||"_"==o?a+=this.track:"\n"==o||"\r"==o||(this.letters.state=o,this.letters.draw(a,r),a+=this.track),-1!=this.breaks.indexOf(t)&&(r+=this.lead,a=s||this.x)}if(this.count>=this.msg.length?this.end++:this.count++,i){if(this.end>=this.msg.length)return this.end=0,this.count=0,!0}else if(this.end>=5)return this.end=0,this.count=0,!0}}}class TextButton extends UI{constructor(t,i,s,e,o){super({x:t,y:i}),this.center=!1,this.text=new Text(this.position.x,this.position.y,s,e,o),this.setCollider()}setMsg(t){this.text.setMsg(t),this.text.wrap=t.length,this.setCollider()}setCollider(){this.size.x=this.collider.size.x=(this.text.wrap<this.text.msg.length?this.text.wrap:this.text.msg.length)*this.text.track,this.size.y=this.collider.size.y=(this.text.breaks.length+1)*this.text.letters.height}display(){super.display(),this.isActive&&this.text.display()}setPosition(t,i){this.position.x=t,this.position.y=i,this.text.setPosition(t,i)}}class Texture{constructor(t,i){this.locations=t.locations||[],this.frame=t.frame||"index",this.debug=i,this.center=t.center||!1,this.offset=new Cool.Vector(0,0),t.animation&&(this.animation=t.animation)}addLocation(t,i,s){this.animation.createNewState("f-"+t,t,t);const e=new Cool.Vector(i,s);e.i=t,this.locations.push(e)}addLocations(t){this.locations.push(...t);for(let t=0;t<this.locations.length;t++)if("index"==this.frame)this.locations[t].i=t,this.animation.createNewState("f-"+t,t,t);else if("random"==this.frame)this.animation.randomFrames=!0;else if("randomIndex"==this.frame){let i=Cool.randomInt(0,this.animation.endFrame);this.locations[t].i=i,this.animation.createNewState("f-"+i,i,i)}}display(){for(let t=0;t<this.locations.length;t++){let i=this.locations[t].x+this.offset.x,s=this.locations[t].y+this.offset.y;this.center&&(i-=this.animation.width/2,s-=this.animation.height/2),i+this.animation.width>0&&i<gme.width&&s+this.animation.height>0&&s<gme.height&&(this.locations[t].i&&(this.animation.state="f-"+this.locations[t].i),this.animation.draw(i,s))}}update(t){this.offset=t.copy()}}class Toggle extends Button{constructor(t,i){super(t,i),this.toggled=!1}toggle(t){this.toggled=t?"on"==t:!this.toggled,this.animation.state=this.toggled?"selected":"idle",this.func&&this.func(),this.waitToGoOut=!1,this.mouseOver=!1,this.clickStarted=!1}out(t,i){super.out(t,i),this.animation.state=this.toggled?"selected":"idle"}up(t,i){super.up(),this.tap(t,i)&&this.clickStarted&&this.toggle()}}
//# sourceMappingURL=src_maps/game.min.js.map
